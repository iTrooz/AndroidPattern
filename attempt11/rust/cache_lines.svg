<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>core::option::Option&lt;usize&gt;::map&lt;usize, (isize, isize), core::array::iter::{impl#2   (at :-1) (89 samples, 2.35%)</title><rect x="333.5" y="149" width="27.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="336.46" y="159.5" >c..</text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (1,392 samples, 36.69%)</title><rect x="381.0" y="133" width="433.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="384.04" y="143.5" >core::slice::iter::{impl#181   (at :-1)</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1956) (2 samples, 0.05%)</title><rect x="1188.4" y="197" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.44" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1888) (12 samples, 0.32%)</title><rect x="971.4" y="165" width="3.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="974.35" y="175.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:69) (133 samples, 3.51%)</title><rect x="1083.3" y="165" width="41.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1086.32" y="175.5" >att..</text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (262 samples, 6.91%)</title><rect x="279.7" y="165" width="81.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="282.65" y="175.5" >core::arr..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:95) (514 samples, 13.55%)</title><rect x="994.7" y="181" width="159.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="997.68" y="191.5" >attempt11::choose_ne..</text>
</g>
<g >
<title>std::io::stdio::{impl#14   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.69" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1889) (10 samples, 0.26%)</title><rect x="129.7" y="181" width="3.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="132.74" y="191.5" ></text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (7 samples, 0.18%)</title><rect x="13.4" y="197" width="2.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="16.42" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:84) (1,456 samples, 38.38%)</title><rect x="361.1" y="181" width="452.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="364.14" y="191.5" >attempt11::choose_next_point   (at attempt11.rs:84)</text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt;   (at library/std/src/io/buffered/bufwriter.rs:229) (1 samples, 0.03%)</title><rect x="1189.4" y="101" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1192.38" y="111.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:94) (12 samples, 0.32%)</title><rect x="129.1" y="197" width="3.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="132.12" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:69) (2 samples, 0.05%)</title><rect x="38.0" y="197" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="40.99" y="207.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#1   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="85" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.38" y="95.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:69) (16 samples, 0.42%)</title><rect x="206.9" y="181" width="5.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="209.87" y="191.5" ></text>
</g>
<g >
<title>??   (at :-1) (14 samples, 0.37%)</title><rect x="43.6" y="181" width="4.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="46.59" y="191.5" ></text>
</g>
<g >
<title>write   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="37" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1192.38" y="47.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1960) (17 samples, 0.45%)</title><rect x="1177.9" y="165" width="5.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1180.87" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write   (at library/std/src/sys/unix/fd.rs:264) (1 samples, 0.03%)</title><rect x="1189.4" y="53" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1192.38" y="63.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (322 samples, 8.49%)</title><rect x="713.8" y="117" width="100.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="716.83" y="127.5" >core::slice:..</text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (16 samples, 0.42%)</title><rect x="15.9" y="197" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="18.91" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:96) (3 samples, 0.08%)</title><rect x="1188.1" y="213" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.13" y="223.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:95) (3,791 samples, 99.92%)</title><rect x="10.3" y="245" width="1179.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.31" y="255.5" >attempt11::choose_next_point   (at attempt11.rs:95)</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:84) (174 samples, 4.59%)</title><rect x="58.2" y="197" width="54.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="61.21" y="207.5" >attem..</text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (at :-1) (8 samples, 0.21%)</title><rect x="55.7" y="117" width="2.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="58.72" y="127.5" ></text>
</g>
<g >
<title>std::io::buffered::linewriter::{impl#2   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="133" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.69" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1888) (1 samples, 0.03%)</title><rect x="129.4" y="181" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="132.43" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1887) (8 samples, 0.21%)</title><rect x="968.9" y="165" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="971.87" y="175.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:96) (92 samples, 2.42%)</title><rect x="1154.5" y="181" width="28.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1157.54" y="191.5" >at..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:95) (3,790 samples, 99.89%)</title><rect x="10.3" y="229" width="1178.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.31" y="239.5" >attempt11::choose_next_point   (at attempt11.rs:95)</text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (33 samples, 0.87%)</title><rect x="47.9" y="181" width="10.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="50.94" y="191.5" ></text>
</g>
<g >
<title>core::ops::index_range::{impl#1   (at :-1) (10 samples, 0.26%)</title><rect x="52.0" y="165" width="3.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="54.99" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::stdio::{impl#3   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="69" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1192.69" y="79.5" ></text>
</g>
<g >
<title>attempt11::main   (at attempt11.rs:123) (1 samples, 0.03%)</title><rect x="1189.4" y="277" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.38" y="287.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt&lt;std::io::stdio::StdoutLock&gt;   (at library/std/src/io/mod.rs:1762) (1 samples, 0.03%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1192.69" y="207.5" ></text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (171 samples, 4.51%)</title><rect x="59.1" y="181" width="53.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.14" y="191.5" >core:..</text>
</g>
<g >
<title>core::ops::index_range::{impl#1   (at :-1) (2 samples, 0.05%)</title><rect x="13.7" y="181" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="16.73" y="191.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:94) (83 samples, 2.19%)</title><rect x="968.9" y="181" width="25.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="971.87" y="191.5" >a..</text>
</g>
<g >
<title>attempt11::get_inbetween_points   (at attempt11.rs:30) (335 samples, 8.83%)</title><rect x="864.7" y="165" width="104.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="867.68" y="175.5" >attempt11::g..</text>
</g>
<g >
<title>core::ops::index_range::IndexRange::next_unchecked   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ops/index_range.rs:61) (3 samples, 0.08%)</title><rect x="332.5" y="133" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="335.53" y="143.5" ></text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (10 samples, 0.26%)</title><rect x="55.1" y="149" width="3.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="58.10" y="159.5" ></text>
</g>
<g >
<title>write   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="37" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1192.69" y="47.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:102) (9 samples, 0.24%)</title><rect x="35.2" y="197" width="2.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="38.19" y="207.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (171 samples, 4.51%)</title><rect x="59.1" y="149" width="53.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="62.14" y="159.5" >core:..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/slice/iter/macros.rs:285) (7 samples, 0.18%)</title><rect x="10.3" y="213" width="2.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.31" y="223.5" ></text>
</g>
<g >
<title>core::option::Option&lt;usize&gt;::map&lt;usize, (isize, isize), core::array::iter::{impl#2   (at :-1) (10 samples, 0.26%)</title><rect x="55.1" y="165" width="3.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="58.10" y="175.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:76) (3 samples, 0.08%)</title><rect x="38.6" y="197" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="41.61" y="207.5" ></text>
</g>
<g >
<title>core::slice::index::{impl#2   (at :-1) (5 samples, 0.13%)</title><rect x="117.0" y="149" width="1.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="119.99" y="159.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/slice/iter/macros.rs:285) (38 samples, 1.00%)</title><rect x="23.4" y="197" width="11.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="26.37" y="207.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to&lt;std::io::stdio::Stdout&gt;   (at library/std/src/io/stdio.rs:1020) (1 samples, 0.03%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1192.69" y="255.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/slice/iter/macros.rs:285) (1 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1200) (4 samples, 0.11%)</title><rect x="14.4" y="117" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="17.35" y="127.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to&lt;std::io::stdio::Stdout&gt;   (at library/std/src/io/stdio.rs:1020) (1 samples, 0.03%)</title><rect x="1189.4" y="245" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1192.38" y="255.5" ></text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (16 samples, 0.42%)</title><rect x="15.9" y="181" width="5.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="18.91" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1956) (13 samples, 0.34%)</title><rect x="1183.8" y="181" width="4.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1186.78" y="191.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1400) (1 samples, 0.03%)</title><rect x="129.4" y="165" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="132.43" y="175.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;(isize, isize)&gt;::assume_init_read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/mem/maybe_uninit.rs:705) (8 samples, 0.21%)</title><rect x="55.7" y="133" width="2.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="58.72" y="143.5" ></text>
</g>
<g >
<title>attempt11::get_inbetween_points   (at attempt11.rs:30) (34 samples, 0.90%)</title><rect x="118.5" y="181" width="10.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="121.55" y="191.5" ></text>
</g>
<g >
<title>std::io::buffered::linewritershim::{impl#1   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="117" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.69" y="127.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#12   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="229" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.38" y="239.5" ></text>
</g>
<g >
<title>core::fmt::write   (at library/core/src/fmt/mod.rs:1144) (1 samples, 0.03%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1192.69" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1956) (68 samples, 1.79%)</title><rect x="1156.7" y="165" width="21.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1159.72" y="175.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:96) (1 samples, 0.03%)</title><rect x="1189.1" y="229" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1192.07" y="239.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:76) (82 samples, 2.16%)</title><rect x="1124.7" y="165" width="25.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1127.69" y="175.5" >a..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:96) (16 samples, 0.42%)</title><rect x="1183.2" y="197" width="4.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1186.16" y="207.5" ></text>
</g>
<g >
<title>all (3,794 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>core::fmt::write   (at library/core/src/fmt/mod.rs:1144) (1 samples, 0.03%)</title><rect x="1189.4" y="181" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1192.38" y="191.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:78) (12 samples, 0.32%)</title><rect x="214.3" y="181" width="3.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="217.34" y="191.5" ></text>
</g>
<g >
<title>std::io::buffered::linewritershim::{impl#1   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="117" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.38" y="127.5" ></text>
</g>
<g >
<title>core::ops::index_range::IndexRange::next_unchecked   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ops/index_range.rs:61) (1 samples, 0.03%)</title><rect x="54.8" y="149" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="57.79" y="159.5" ></text>
</g>
<g >
<title>??   (at :-1) (94 samples, 2.48%)</title><rect x="250.4" y="165" width="29.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="253.42" y="175.5" >??..</text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (16 samples, 0.42%)</title><rect x="15.9" y="165" width="5.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="18.91" y="175.5" ></text>
</g>
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1200) (86 samples, 2.27%)</title><rect x="334.4" y="85" width="26.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="337.39" y="95.5" >c..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:95) (3,377 samples, 89.01%)</title><rect x="132.9" y="197" width="1050.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="135.85" y="207.5" >attempt11::choose_next_point   (at attempt11.rs:95)</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:94) (1 samples, 0.03%)</title><rect x="23.1" y="213" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="26.06" y="223.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (at :-1) (4 samples, 0.11%)</title><rect x="14.4" y="133" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="17.35" y="143.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt;   (at library/std/src/io/buffered/bufwriter.rs:229) (1 samples, 0.03%)</title><rect x="1189.7" y="101" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1192.69" y="111.5" ></text>
</g>
<g >
<title>core::slice::index::{impl#2   (at :-1) (43 samples, 1.13%)</title><rect x="851.3" y="133" width="13.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="854.30" y="143.5" ></text>
</g>
<g >
<title>std::io::buffered::linewriter::{impl#2   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="133" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1192.38" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1956) (1 samples, 0.03%)</title><rect x="1189.1" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1192.07" y="223.5" ></text>
</g>
<g >
<title>attempt11::get_inbetween_points   (at attempt11.rs:30) (5 samples, 0.13%)</title><rect x="21.5" y="197" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="24.51" y="207.5" ></text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (4 samples, 0.11%)</title><rect x="14.4" y="165" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="17.35" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::stdio::{impl#3   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="69" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1192.38" y="79.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:102) (32 samples, 0.84%)</title><rect x="196.9" y="181" width="10.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="199.92" y="191.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:86) (498 samples, 13.13%)</title><rect x="814.0" y="181" width="154.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="816.98" y="191.5" >attempt11::choose_n..</text>
</g>
<g >
<title>std::io::stdio::{impl#13   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.69" y="223.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#12   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.69" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write   (at library/std/src/sys/unix/fd.rs:264) (1 samples, 0.03%)</title><rect x="1189.7" y="53" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1192.69" y="63.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:76) (8 samples, 0.21%)</title><rect x="211.9" y="181" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="214.85" y="191.5" ></text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (1,392 samples, 36.69%)</title><rect x="381.0" y="149" width="433.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="384.04" y="159.5" >core::slice::cmp::{impl#10   (at :-1)</text>
</g>
<g >
<title>core::ptr::non_null::{impl#12   (at :-1) (1 samples, 0.03%)</title><rect x="813.7" y="101" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="816.67" y="111.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:95) (3,792 samples, 99.95%)</title><rect x="10.0" y="261" width="1179.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >attempt11::choose_next_point   (at attempt11.rs:95)</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1960) (1 samples, 0.03%)</title><rect x="1187.8" y="181" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.82" y="191.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:78) (1 samples, 0.03%)</title><rect x="39.5" y="197" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="42.55" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:83) (59 samples, 1.56%)</title><rect x="39.9" y="197" width="18.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="42.86" y="207.5" ></text>
</g>
<g >
<title>std::io::stdio::_print   (at library/std/src/io/stdio.rs:1097) (1 samples, 0.03%)</title><rect x="1189.4" y="261" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1192.38" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (47 samples, 1.24%)</title><rect x="97.7" y="133" width="14.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="100.71" y="143.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/slice/iter/macros.rs:285) (201 samples, 5.30%)</title><rect x="134.4" y="181" width="62.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="137.41" y="191.5" >attemp..</text>
</g>
<g >
<title>std::io::stdio::_print   (at library/std/src/io/stdio.rs:1097) (1 samples, 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1192.69" y="271.5" ></text>
</g>
<g >
<title>attempt11::get_inbetween_points   (at attempt11.rs:29) (20 samples, 0.53%)</title><rect x="112.3" y="181" width="6.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="115.32" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1883) (1 samples, 0.03%)</title><rect x="129.1" y="181" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="132.12" y="191.5" ></text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (1,392 samples, 36.69%)</title><rect x="381.0" y="165" width="433.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="384.04" y="175.5" >core::slice::{impl#0   (at :-1)</text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;(isize, isize)&gt;::assume_init_read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/mem/maybe_uninit.rs:705) (86 samples, 2.27%)</title><rect x="334.4" y="117" width="26.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="337.39" y="127.5" >c..</text>
</g>
<g >
<title>attempt11::get_inbetween_points   (at attempt11.rs:29) (162 samples, 4.27%)</title><rect x="814.3" y="165" width="50.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="817.29" y="175.5" >attem..</text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (171 samples, 4.51%)</title><rect x="59.1" y="165" width="53.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="62.14" y="175.5" >core:..</text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (at :-1) (86 samples, 2.27%)</title><rect x="334.4" y="101" width="26.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="337.39" y="111.5" >c..</text>
</g>
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1200) (8 samples, 0.21%)</title><rect x="55.7" y="101" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="58.72" y="111.5" ></text>
</g>
<g >
<title>attempt11::main   (at attempt11.rs:122) (3,792 samples, 99.95%)</title><rect x="10.0" y="277" width="1179.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >attempt11::main   (at attempt11.rs:122)</text>
</g>
<g >
<title>std::io::stdio::{impl#13   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.38" y="223.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;(isize, isize)&gt;::assume_init_read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/mem/maybe_uninit.rs:705) (4 samples, 0.11%)</title><rect x="14.4" y="149" width="1.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="17.35" y="159.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:86) (54 samples, 1.42%)</title><rect x="112.3" y="197" width="16.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="115.32" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:83) (460 samples, 12.12%)</title><rect x="218.1" y="181" width="143.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="221.07" y="191.5" >attempt11::choose_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1889) (1 samples, 0.03%)</title><rect x="23.1" y="197" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.06" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:84) (17 samples, 0.45%)</title><rect x="15.6" y="213" width="5.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="18.60" y="223.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#1   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="85" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.69" y="95.5" ></text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (5 samples, 0.13%)</title><rect x="117.0" y="165" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="119.99" y="175.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:78) (14 samples, 0.37%)</title><rect x="1150.2" y="165" width="4.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1153.19" y="175.5" ></text>
</g>
<g >
<title>attempt11::get_inbetween_points   (at attempt11.rs:29) (1 samples, 0.03%)</title><rect x="21.2" y="197" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="24.20" y="207.5" ></text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:102) (277 samples, 7.30%)</title><rect x="997.2" y="165" width="86.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1000.17" y="175.5" >attempt11:..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:86) (7 samples, 0.18%)</title><rect x="20.9" y="213" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="23.89" y="223.5" ></text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (43 samples, 1.13%)</title><rect x="851.3" y="149" width="13.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="854.30" y="159.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt&lt;std::io::stdio::StdoutLock&gt;   (at library/std/src/io/mod.rs:1762) (1 samples, 0.03%)</title><rect x="1189.4" y="197" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1192.38" y="207.5" ></text>
</g>
<g >
<title>core::ops::index_range::{impl#1   (at :-1) (98 samples, 2.58%)</title><rect x="303.0" y="149" width="30.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="305.98" y="159.5" >co..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:95) (3,745 samples, 98.71%)</title><rect x="23.4" y="213" width="1164.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="26.37" y="223.5" >attempt11::choose_next_point   (at attempt11.rs:95)</text>
</g>
<g >
<title>std::io::stdio::{impl#14   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="149" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.38" y="159.5" ></text>
</g>
<g >
<title>??   (at :-1) (1 samples, 0.03%)</title><rect x="13.1" y="197" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="16.11" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1889) (63 samples, 1.66%)</title><rect x="975.1" y="165" width="19.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="978.09" y="175.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt::{impl#0   (at :-1) (1 samples, 0.03%)</title><rect x="1189.4" y="165" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.38" y="175.5" ></text>
</g>
<g >
<title>core::option::Option&lt;usize&gt;::map&lt;usize, (isize, isize), core::array::iter::{impl#2   (at :-1) (4 samples, 0.11%)</title><rect x="14.4" y="181" width="1.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="17.35" y="191.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1400) (12 samples, 0.32%)</title><rect x="971.4" y="149" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="974.35" y="159.5" ></text>
</g>
<g >
<title>attempt11::main   (at attempt11.rs:126) (1 samples, 0.03%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1192.69" y="287.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt::{impl#0   (at :-1) (1 samples, 0.03%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.69" y="175.5" ></text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (89 samples, 2.35%)</title><rect x="333.5" y="133" width="27.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="336.46" y="143.5" >c..</text>
</g>
<g >
<title>attempt11::choose_next_point   (at attempt11.rs:83) (10 samples, 0.26%)</title><rect x="12.5" y="213" width="3.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="15.49" y="223.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (2 samples, 0.05%)</title><rect x="20.3" y="149" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="23.26" y="159.5" ></text>
</g>
</g>
</svg>
