<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>core::hash::sip::u8to64_le   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:136) (1 samples, 0.10%)</title><rect x="225.6" y="37" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="228.62" y="47.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (1 samples, 0.10%)</title><rect x="1186.4" y="197" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1189.45" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (52 samples, 5.22%)</title><rect x="819.2" y="149" width="61.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="822.18" y="159.5" >core::..</text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (38 samples, 3.82%)</title><rect x="961.3" y="53" width="45.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="964.35" y="63.5" >core..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1115) (22 samples, 2.21%)</title><rect x="90.6" y="261" width="26.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="93.56" y="271.5" >h..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:938) (1 samples, 0.10%)</title><rect x="1188.8" y="309" width="1.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1191.82" y="319.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (48 samples, 4.82%)</title><rect x="1006.4" y="165" width="56.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1009.37" y="175.5" >std::c..</text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (1 samples, 0.10%)</title><rect x="1188.8" y="245" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1191.82" y="255.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:34) (10 samples, 1.00%)</title><rect x="500.5" y="261" width="11.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="503.48" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="149" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="20.11" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (1 samples, 0.10%)</title><rect x="1095.2" y="149" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1098.22" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::remove_entry&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (2 samples, 0.20%)</title><rect x="1185.3" y="229" width="2.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1188.26" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::get&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (2 samples, 0.20%)</title><rect x="88.2" y="213" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="91.19" y="223.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:86) (876 samples, 87.95%)</title><rect x="116.6" y="293" width="1037.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="119.63" y="303.5" >attempt10::choose_next_point   (at attempt10.rs:86)</text>
</g>
<g >
<title>core::cmp::min_by&lt;isize, fn(&amp;isize, &amp;isize) -&gt; core::cmp::Ordering&gt;   (at attempt10.rs:36) (1 samples, 0.10%)</title><rect x="64.5" y="245" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="67.50" y="255.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:74) (4 samples, 0.40%)</title><rect x="11.2" y="309" width="4.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.18" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit   (at /rust/deps/hashbrown-0.14.2/src/raw/bitmask.rs:38) (1 samples, 0.10%)</title><rect x="89.4" y="149" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="92.38" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:170) (1 samples, 0.10%)</title><rect x="501.7" y="133" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="504.67" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (3 samples, 0.30%)</title><rect x="725.6" y="133" width="3.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="728.58" y="143.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="165" width="1.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="20.11" y="175.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (9 samples, 0.90%)</title><rect x="1155.6" y="197" width="10.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1158.64" y="207.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (2 samples, 0.20%)</title><rect x="68.1" y="165" width="2.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="71.05" y="175.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:68) (1 samples, 0.10%)</title><rect x="944.8" y="261" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="947.76" y="271.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (49 samples, 4.92%)</title><rect x="761.1" y="149" width="58.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="764.12" y="159.5" >core::..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (10 samples, 1.00%)</title><rect x="500.5" y="245" width="11.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="503.48" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2201) (6 samples, 0.60%)</title><rect x="480.3" y="165" width="7.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="483.34" y="175.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (52 samples, 5.22%)</title><rect x="819.2" y="181" width="61.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="822.18" y="191.5" >std::c..</text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (12 samples, 1.20%)</title><rect x="992.1" y="37" width="14.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="995.15" y="47.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (17 samples, 1.71%)</title><rect x="799.0" y="53" width="20.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="802.04" y="63.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:98) (5 samples, 0.50%)</title><rect x="481.5" y="149" width="5.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="484.53" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (2 samples, 0.20%)</title><rect x="1096.4" y="149" width="2.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1099.41" y="159.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:712) (1 samples, 0.10%)</title><rect x="880.8" y="197" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="883.78" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1754) (7 samples, 0.70%)</title><rect x="107.1" y="245" width="8.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="110.15" y="255.5" ></text>
</g>
<g >
<title>free   (at :-1) (10 samples, 1.00%)</title><rect x="627.2" y="133" width="11.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="630.25" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1939) (5 samples, 0.50%)</title><rect x="1177.0" y="229" width="5.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1179.97" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (1 samples, 0.10%)</title><rect x="19.5" y="213" width="1.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="22.48" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1358) (214 samples, 21.49%)</title><rect x="130.8" y="213" width="253.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="133.84" y="223.5" >hashbrown::map::HashMap&lt;(isize, i..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (21 samples, 2.11%)</title><rect x="434.1" y="149" width="24.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="437.14" y="159.5" >h..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::leading_zeros   (at /rust/deps/hashbrown-0.14.2/src/raw/bitmask.rs:87) (1 samples, 0.10%)</title><rect x="1181.7" y="149" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1184.71" y="159.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:222) (1 samples, 0.10%)</title><rect x="953.1" y="117" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="956.05" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:670) (7 samples, 0.70%)</title><rect x="501.7" y="165" width="8.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="504.67" y="175.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (4 samples, 0.40%)</title><rect x="475.6" y="101" width="4.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="478.60" y="111.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:220) (1 samples, 0.10%)</title><rect x="20.7" y="165" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="23.66" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (1 samples, 0.10%)</title><rect x="1185.3" y="181" width="1.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1188.26" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (7 samples, 0.70%)</title><rect x="1158.0" y="69" width="8.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1161.01" y="79.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2189) (1 samples, 0.10%)</title><rect x="1089.3" y="165" width="1.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1092.30" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (1 samples, 0.10%)</title><rect x="1184.1" y="181" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1187.08" y="191.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (1 samples, 0.10%)</title><rect x="18.3" y="165" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="21.29" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::erase   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:3431) (18 samples, 1.81%)</title><rect x="1130.8" y="149" width="21.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1133.76" y="159.5" >h..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (52 samples, 5.22%)</title><rect x="819.2" y="197" width="61.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="822.18" y="207.5" >core::..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (20 samples, 2.01%)</title><rect x="681.7" y="181" width="23.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="684.75" y="191.5" >c..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (26 samples, 2.61%)</title><rect x="650.9" y="85" width="30.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="653.94" y="95.5" >st..</text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (9 samples, 0.90%)</title><rect x="1155.6" y="181" width="10.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1158.64" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_trusted&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="165" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="512.96" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{closure#0   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="85" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="512.96" y="95.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:38) (1 samples, 0.10%)</title><rect x="15.9" y="293" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="18.92" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::erase   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:3431) (2 samples, 0.20%)</title><rect x="1180.5" y="165" width="2.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1183.52" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ref&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:685) (4 samples, 0.40%)</title><rect x="475.6" y="133" width="4.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="478.60" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#1   (at :-1) (10 samples, 1.00%)</title><rect x="500.5" y="197" width="11.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="503.48" y="207.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (1 samples, 0.10%)</title><rect x="11.2" y="117" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.18" y="127.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#83   (at :-1) (2 samples, 0.20%)</title><rect x="23.0" y="181" width="2.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="26.03" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (at :-1) (61 samples, 6.12%)</title><rect x="553.8" y="197" width="72.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="556.80" y="207.5" >alloc::v..</text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1400) (1 samples, 0.10%)</title><rect x="510.0" y="53" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="512.96" y="63.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::insert_in_slot&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1452) (1 samples, 0.10%)</title><rect x="937.7" y="213" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="940.65" y="223.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (3 samples, 0.30%)</title><rect x="1162.8" y="53" width="3.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1165.75" y="63.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (214 samples, 21.49%)</title><rect x="130.8" y="197" width="253.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="133.84" y="207.5" >hashbrown::map::make_hash&lt;(isize,..</text>
</g>
<g >
<title>__rust_alloc   (at :-1) (1 samples, 0.10%)</title><rect x="506.4" y="69" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="509.41" y="79.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::fix_insert_slot   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1873) (1 samples, 0.10%)</title><rect x="114.3" y="197" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="117.26" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (41 samples, 4.12%)</title><rect x="577.5" y="133" width="48.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="580.49" y="143.5" >core..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (7 samples, 0.70%)</title><rect x="94.1" y="117" width="8.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="97.12" y="127.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:36) (3 samples, 0.30%)</title><rect x="512.3" y="261" width="3.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="515.33" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2171) (13 samples, 1.31%)</title><rect x="1073.9" y="165" width="15.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1076.90" y="175.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (5 samples, 0.50%)</title><rect x="459.0" y="133" width="5.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="462.02" y="143.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:222) (1 samples, 0.10%)</title><rect x="757.6" y="133" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="760.57" y="143.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (3 samples, 0.30%)</title><rect x="563.3" y="149" width="3.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="566.27" y="159.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:78) (2 samples, 0.20%)</title><rect x="18.3" y="309" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="21.29" y="319.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (2 samples, 0.20%)</title><rect x="1096.4" y="133" width="2.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1099.41" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (1 samples, 0.10%)</title><rect x="55.0" y="165" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="58.02" y="175.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (3 samples, 0.30%)</title><rect x="905.7" y="165" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="908.66" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (26 samples, 2.61%)</title><rect x="650.9" y="69" width="30.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="653.94" y="79.5" >co..</text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (10 samples, 1.00%)</title><rect x="500.5" y="229" width="11.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="503.48" y="239.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (20 samples, 2.01%)</title><rect x="681.7" y="149" width="23.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="684.75" y="159.5" >c..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:74) (302 samples, 30.32%)</title><rect x="129.7" y="277" width="357.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="132.66" y="287.5" >attempt10::choose_next_point   (at attempt10.rs:..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2196) (17 samples, 1.71%)</title><rect x="1101.1" y="165" width="20.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1104.14" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (108 samples, 10.84%)</title><rect x="252.9" y="133" width="127.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="255.87" y="143.5" >core::hash::sip:..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1359) (1 samples, 0.10%)</title><rect x="19.5" y="245" width="1.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="22.48" y="255.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (82 samples, 8.23%)</title><rect x="155.7" y="117" width="97.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="158.72" y="127.5" >core::hash:..</text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (1 samples, 0.10%)</title><rect x="20.7" y="245" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="23.66" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (at :-1) (11 samples, 1.10%)</title><rect x="626.1" y="181" width="13.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="629.06" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::leading_zeros   (at /rust/deps/hashbrown-0.14.2/src/raw/bitmask.rs:87) (13 samples, 1.31%)</title><rect x="1136.7" y="133" width="15.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1139.69" y="143.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (at :-1) (1 samples, 0.10%)</title><rect x="511.1" y="181" width="1.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="514.14" y="191.5" ></text>
</g>
<g >
<title>fmodf64   (at :-1) (2 samples, 0.20%)</title><rect x="78.7" y="85" width="2.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="81.71" y="95.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (89 samples, 8.94%)</title><rect x="147.4" y="181" width="105.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="150.43" y="191.5" >core::hash::..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::insert&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:889) (22 samples, 2.21%)</title><rect x="90.6" y="277" width="26.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="93.56" y="287.5" >s..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::record_item_insert_at   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2640) (3 samples, 0.30%)</title><rect x="934.1" y="197" width="3.6" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="937.10" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (1 samples, 0.10%)</title><rect x="1188.8" y="165" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1191.82" y="175.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (1 samples, 0.10%)</title><rect x="11.2" y="133" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="14.18" y="143.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (50 samples, 5.02%)</title><rect x="566.8" y="149" width="59.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="569.83" y="159.5" >core::..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (1 samples, 0.10%)</title><rect x="1184.1" y="197" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1187.08" y="207.5" ></text>
</g>
<g >
<title>core::num::{impl#9   (at :-1) (1 samples, 0.10%)</title><rect x="1062.0" y="101" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1065.05" y="111.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (1 samples, 0.10%)</title><rect x="1182.9" y="165" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1185.89" y="175.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;((isize, isize), ())&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1400) (1 samples, 0.10%)</title><rect x="937.7" y="165" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="940.65" y="175.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="723.2" y="101" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="726.21" y="111.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:87) (174 samples, 17.47%)</title><rect x="948.3" y="277" width="206.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="951.31" y="287.5" >attempt10::choose_next_poin..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:675) (2 samples, 0.20%)</title><rect x="18.3" y="293" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="21.29" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (2 samples, 0.20%)</title><rect x="559.7" y="117" width="2.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="562.72" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:98) (7 samples, 0.70%)</title><rect x="1122.5" y="133" width="8.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1125.47" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit   (at /rust/deps/hashbrown-0.14.2/src/raw/bitmask.rs:38) (3 samples, 0.30%)</title><rect x="716.1" y="133" width="3.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="719.10" y="143.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:704) (4 samples, 0.40%)</title><rect x="742.2" y="197" width="4.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="745.17" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:184) (4 samples, 0.40%)</title><rect x="505.2" y="133" width="4.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="508.22" y="143.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:36) (2 samples, 0.20%)</title><rect x="60.9" y="277" width="2.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="63.94" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (8 samples, 0.80%)</title><rect x="92.9" y="133" width="9.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="95.93" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1751) (8 samples, 0.80%)</title><rect x="730.3" y="229" width="9.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="733.32" y="239.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:86) (996 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >attempt10::choose_next_point   (at attempt10.rs:86)</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (6 samples, 0.60%)</title><rect x="1123.7" y="101" width="7.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1126.65" y="111.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:85) (1 samples, 0.10%)</title><rect x="20.7" y="309" width="1.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="23.66" y="319.5" ></text>
</g>
<g >
<title>malloc   (at :-1) (2 samples, 0.20%)</title><rect x="507.6" y="69" width="2.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="510.59" y="79.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="197" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="20.11" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1358) (56 samples, 5.62%)</title><rect x="640.3" y="213" width="66.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="643.28" y="223.5" >hashbro..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1938) (2 samples, 0.20%)</title><rect x="1182.9" y="245" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1185.89" y="255.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1115) (1 samples, 0.10%)</title><rect x="20.7" y="277" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="23.66" y="287.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (3 samples, 0.30%)</title><rect x="82.3" y="133" width="3.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="85.27" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1752) (1 samples, 0.10%)</title><rect x="20.7" y="261" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="23.66" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="723.2" y="85" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="726.21" y="95.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:675) (8 samples, 0.80%)</title><rect x="81.1" y="277" width="9.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="84.08" y="287.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (42 samples, 4.22%)</title><rect x="956.6" y="149" width="49.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="959.61" y="159.5" >core:..</text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (43 samples, 4.32%)</title><rect x="955.4" y="165" width="51.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="958.42" y="175.5" >core:..</text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (3 samples, 0.30%)</title><rect x="82.3" y="85" width="3.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="85.27" y="95.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (at :-1) (11 samples, 1.10%)</title><rect x="626.1" y="245" width="13.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="629.06" y="255.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (51 samples, 5.12%)</title><rect x="758.8" y="181" width="60.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="761.76" y="191.5" >core::..</text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="11.2" y="85" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="14.18" y="95.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains_key&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1422) (2 samples, 0.20%)</title><rect x="18.3" y="261" width="2.4" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="21.29" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (2 samples, 0.20%)</title><rect x="56.2" y="149" width="2.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="59.20" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (11 samples, 1.10%)</title><rect x="626.1" y="165" width="13.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="629.06" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::write&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:635) (1 samples, 0.10%)</title><rect x="115.4" y="213" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="118.44" y="223.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (8 samples, 0.80%)</title><rect x="92.9" y="165" width="9.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="95.93" y="175.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (1 samples, 0.10%)</title><rect x="1182.9" y="117" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1185.89" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_desugared&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (4 samples, 0.40%)</title><rect x="562.1" y="165" width="4.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="565.09" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::erase   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:3392) (1 samples, 0.10%)</title><rect x="1179.3" y="165" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1182.34" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ref&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:685) (1 samples, 0.10%)</title><rect x="723.2" y="133" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="726.21" y="143.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:131) (2 samples, 0.20%)</title><rect x="989.8" y="37" width="2.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="992.78" y="47.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:73) (11 samples, 1.10%)</title><rect x="116.6" y="277" width="13.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="119.63" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2196) (1 samples, 0.10%)</title><rect x="58.6" y="181" width="1.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="61.57" y="191.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="18.3" y="197" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="21.29" y="207.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:87) (24 samples, 2.41%)</title><rect x="1154.5" y="293" width="28.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1157.46" y="303.5" >at..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:63) (2 samples, 0.20%)</title><rect x="942.4" y="261" width="2.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="945.39" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains_key&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1422) (301 samples, 30.22%)</title><rect x="130.8" y="229" width="356.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="133.84" y="239.5" >hashbrown::map::HashMap&lt;(isize, isize), (), std:..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:212) (4 samples, 0.40%)</title><rect x="754.0" y="149" width="4.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="757.02" y="159.5" ></text>
</g>
<g >
<title>core::option::Option&lt;usize&gt;::map&lt;usize, (isize, isize), core::array::iter::{impl#2   (at :-1) (1 samples, 0.10%)</title><rect x="128.5" y="245" width="1.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="131.47" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (9 samples, 0.90%)</title><rect x="70.4" y="181" width="10.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="73.42" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (10 samples, 1.00%)</title><rect x="693.6" y="117" width="11.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="696.59" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ptr&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:521) (1 samples, 0.10%)</title><rect x="723.2" y="117" width="1.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="726.21" y="127.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:38) (13 samples, 1.31%)</title><rect x="515.9" y="261" width="15.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="518.88" y="271.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:40) (1 samples, 0.10%)</title><rect x="64.5" y="277" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="67.50" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_insert_slot_in_group   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1911) (3 samples, 0.30%)</title><rect x="909.2" y="181" width="3.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="912.22" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ptr&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:521) (8 samples, 0.80%)</title><rect x="1111.8" y="117" width="9.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1114.81" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#19   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="69" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="512.96" y="79.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="1182.9" y="85" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1185.89" y="95.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (1 samples, 0.10%)</title><rect x="18.3" y="149" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="21.29" y="159.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:704) (1 samples, 0.10%)</title><rect x="91.7" y="213" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="94.75" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (6 samples, 0.60%)</title><rect x="706.6" y="149" width="7.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="709.63" y="159.5" ></text>
</g>
<g >
<title>core::cmp::min_by&lt;isize, fn(&amp;isize, &amp;isize) -&gt; core::cmp::Ordering&gt;   (at attempt10.rs:36) (1 samples, 0.10%)</title><rect x="537.2" y="229" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="540.21" y="239.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#5   (at :-1) (4 samples, 0.40%)</title><rect x="572.8" y="117" width="4.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="575.75" y="127.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (3 samples, 0.30%)</title><rect x="102.4" y="197" width="3.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="105.41" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:479) (7 samples, 0.70%)</title><rect x="501.7" y="181" width="8.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="504.67" y="191.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (108 samples, 10.84%)</title><rect x="252.9" y="181" width="127.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="255.87" y="191.5" >core::hash::Buil..</text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ptr&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:521) (1 samples, 0.10%)</title><rect x="929.4" y="197" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="932.36" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:219) (3 samples, 0.30%)</title><rect x="754.0" y="133" width="3.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="757.02" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (2 samples, 0.20%)</title><rect x="88.2" y="181" width="2.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="91.19" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1963) (5 samples, 0.50%)</title><rect x="107.1" y="213" width="6.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="110.15" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (70 samples, 7.03%)</title><rect x="543.1" y="245" width="83.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="546.13" y="255.5" >core::ite..</text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (41 samples, 4.12%)</title><rect x="957.8" y="117" width="48.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="960.79" y="127.5" >core..</text>
</g>
<g >
<title>core::num::{impl#7   (at :-1) (13 samples, 1.31%)</title><rect x="1136.7" y="117" width="15.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1139.69" y="127.5" ></text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (1 samples, 0.10%)</title><rect x="128.5" y="229" width="1.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="131.47" y="239.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (108 samples, 10.84%)</title><rect x="252.9" y="165" width="127.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="255.87" y="175.5" >std::collections..</text>
</g>
<g >
<title>core::iter::range::{impl#6   (at :-1) (4 samples, 0.40%)</title><rect x="572.8" y="133" width="4.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="575.75" y="143.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (1 samples, 0.10%)</title><rect x="11.2" y="149" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="14.18" y="159.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:712) (1 samples, 0.10%)</title><rect x="705.4" y="181" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="708.44" y="191.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:938) (24 samples, 2.41%)</title><rect x="1154.5" y="277" width="28.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1157.46" y="287.5" >st..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:50) (13 samples, 1.31%)</title><rect x="65.7" y="277" width="15.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="68.68" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1987) (1 samples, 0.10%)</title><rect x="113.1" y="213" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="116.07" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (100 samples, 10.04%)</title><rect x="949.5" y="197" width="118.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="952.50" y="207.5" >hashbrown::map..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (2 samples, 0.20%)</title><rect x="88.2" y="197" width="2.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="91.19" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (7 samples, 0.70%)</title><rect x="94.1" y="101" width="8.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="97.12" y="111.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (36 samples, 3.61%)</title><rect x="838.1" y="133" width="42.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="841.13" y="143.5" >core..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (1 samples, 0.10%)</title><rect x="18.3" y="213" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="21.29" y="223.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1194) (4 samples, 0.40%)</title><rect x="1182.9" y="277" width="4.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1185.89" y="287.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:709) (1 samples, 0.10%)</title><rect x="20.7" y="229" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="23.66" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (1 samples, 0.10%)</title><rect x="14.7" y="181" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="17.74" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (7 samples, 0.70%)</title><rect x="1158.0" y="85" width="8.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1161.01" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (39 samples, 3.92%)</title><rect x="384.4" y="149" width="46.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="387.38" y="159.5" >hash..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::get&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (19 samples, 1.91%)</title><rect x="706.6" y="197" width="22.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="709.63" y="207.5" >h..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (2 samples, 0.20%)</title><rect x="1177.0" y="197" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1179.97" y="207.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (51 samples, 5.12%)</title><rect x="758.8" y="197" width="60.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="761.76" y="207.5" >core::..</text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (1 samples, 0.10%)</title><rect x="1184.1" y="149" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1187.08" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2171) (2 samples, 0.20%)</title><rect x="12.4" y="197" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="15.37" y="207.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="11.2" y="197" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="14.18" y="207.5" ></text>
</g>
<g >
<title>roundf64   (at :-1) (1 samples, 0.10%)</title><rect x="565.6" y="37" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="568.64" y="47.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::erase_no_drop&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1033) (28 samples, 2.81%)</title><rect x="1121.3" y="165" width="33.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1124.29" y="175.5" >ha..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (8 samples, 0.80%)</title><rect x="1166.3" y="181" width="9.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1169.31" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="149" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="512.96" y="159.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:87) (4 samples, 0.40%)</title><rect x="1182.9" y="309" width="4.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1185.89" y="319.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="1184.1" y="165" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1187.08" y="175.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (2 samples, 0.20%)</title><rect x="564.5" y="69" width="2.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="567.46" y="79.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (5 samples, 0.50%)</title><rect x="107.1" y="197" width="6.0" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="110.15" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (7 samples, 0.70%)</title><rect x="51.5" y="197" width="8.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="54.47" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (1 samples, 0.10%)</title><rect x="84.6" y="53" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="87.64" y="63.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:675) (4 samples, 0.40%)</title><rect x="11.2" y="293" width="4.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.18" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (4 samples, 0.40%)</title><rect x="505.2" y="117" width="4.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="508.22" y="127.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (11 samples, 1.10%)</title><rect x="25.4" y="197" width="13.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="28.40" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:212) (8 samples, 0.80%)</title><rect x="138.0" y="133" width="9.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="140.95" y="143.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (8 samples, 0.80%)</title><rect x="29.0" y="85" width="9.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="31.96" y="95.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (20 samples, 2.01%)</title><rect x="681.7" y="133" width="23.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="684.75" y="143.5" >c..</text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (3 samples, 0.30%)</title><rect x="102.4" y="181" width="3.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="105.41" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2171) (3 samples, 0.30%)</title><rect x="51.5" y="181" width="3.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="54.47" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (3 samples, 0.30%)</title><rect x="563.3" y="133" width="3.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="566.27" y="143.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (1 samples, 0.10%)</title><rect x="1188.8" y="229" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1191.82" y="239.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:87) (1 samples, 0.10%)</title><rect x="1188.8" y="325" width="1.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1191.82" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (4 samples, 0.40%)</title><rect x="714.9" y="149" width="4.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="717.92" y="159.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{closure#0   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="101" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="512.96" y="111.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:86) (980 samples, 98.39%)</title><rect x="21.8" y="309" width="1161.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="24.85" y="319.5" >attempt10::choose_next_point   (at attempt10.rs:86)</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:77) (1 samples, 0.10%)</title><rect x="10.0" y="325" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>attempt10::main   (at attempt10.rs:102) (996 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >attempt10::main   (at attempt10.rs:102)</text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (3 samples, 0.30%)</title><rect x="126.1" y="261" width="3.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="129.10" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2194) (2 samples, 0.20%)</title><rect x="1098.8" y="165" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1101.78" y="175.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:86) (994 samples, 99.80%)</title><rect x="11.2" y="325" width="1177.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="14.18" y="335.5" >attempt10::choose_next_point   (at attempt10.rs:86)</text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (1 samples, 0.10%)</title><rect x="11.2" y="165" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.18" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:222) (3 samples, 0.30%)</title><rect x="143.9" y="117" width="3.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="146.88" y="127.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:77) (128 samples, 12.85%)</title><rect x="487.4" y="277" width="151.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="490.45" y="287.5" >attempt10::choose_n..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::remove_entry&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (72 samples, 7.23%)</title><rect x="1069.2" y="197" width="85.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1072.16" y="207.5" >hashbrown:..</text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (1 samples, 0.10%)</title><rect x="18.3" y="101" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="21.29" y="111.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (2 samples, 0.20%)</title><rect x="1182.9" y="229" width="2.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1185.89" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (2 samples, 0.20%)</title><rect x="1185.3" y="213" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1188.26" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (1 samples, 0.10%)</title><rect x="14.7" y="197" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="17.74" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:98) (3 samples, 0.30%)</title><rect x="725.6" y="149" width="3.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="728.58" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="181" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="20.11" y="191.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (20 samples, 2.01%)</title><rect x="681.7" y="165" width="23.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="684.75" y="175.5" >s..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1939) (73 samples, 7.33%)</title><rect x="1068.0" y="213" width="86.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1070.97" y="223.5" >hashbrown:..</text>
</g>
<g >
<title>core::hash::sip::u8to64_le   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:131) (6 samples, 0.60%)</title><rect x="218.5" y="37" width="7.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="221.51" y="47.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:712) (1 samples, 0.10%)</title><rect x="106.0" y="213" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="108.96" y="223.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (26 samples, 2.61%)</title><rect x="650.9" y="53" width="30.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="653.94" y="63.5" >co..</text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (at :-1) (11 samples, 1.10%)</title><rect x="626.1" y="213" width="13.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="629.06" y="223.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (7 samples, 0.70%)</title><rect x="72.8" y="117" width="8.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="75.79" y="127.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:93) (1 samples, 0.10%)</title><rect x="1187.6" y="309" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1190.63" y="319.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1995) (3 samples, 0.30%)</title><rect x="909.2" y="197" width="3.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="912.22" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find_or_find_insert_slot&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (40 samples, 4.02%)</title><rect x="882.0" y="213" width="47.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="884.97" y="223.5" >hash..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:709) (1 samples, 0.10%)</title><rect x="1154.5" y="197" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1157.46" y="207.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (42 samples, 4.22%)</title><rect x="956.6" y="133" width="49.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="959.61" y="143.5" >core:..</text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (3 samples, 0.30%)</title><rect x="82.3" y="69" width="3.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="85.27" y="79.5" ></text>
</g>
<g >
<title>??   (at :-1) (8 samples, 0.80%)</title><rect x="629.6" y="117" width="9.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="632.62" y="127.5" ></text>
</g>
<g >
<title>core::num::{impl#9   (at :-1) (1 samples, 0.10%)</title><rect x="879.6" y="117" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="882.60" y="127.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (34 samples, 3.41%)</title><rect x="641.5" y="181" width="40.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="644.47" y="191.5" >cor..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#83   (at :-1) (1 samples, 0.10%)</title><rect x="20.7" y="213" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="23.66" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find_or_find_insert_slot&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (7 samples, 0.70%)</title><rect x="107.1" y="229" width="8.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="110.15" y="239.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:712) (3 samples, 0.30%)</title><rect x="380.8" y="181" width="3.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="383.82" y="191.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (3 samples, 0.30%)</title><rect x="82.3" y="149" width="3.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="85.27" y="159.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (10 samples, 1.00%)</title><rect x="26.6" y="117" width="11.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.59" y="127.5" ></text>
</g>
<g >
<title>std::f64::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="565.6" y="53" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="568.64" y="63.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:938) (173 samples, 17.37%)</title><rect x="949.5" y="261" width="205.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="952.50" y="271.5" >std::collections::hash::se..</text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#0   (at :-1) (4 samples, 0.40%)</title><rect x="562.1" y="181" width="4.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="565.09" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (13 samples, 1.31%)</title><rect x="1073.9" y="149" width="15.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1076.90" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2171) (39 samples, 3.92%)</title><rect x="384.4" y="165" width="46.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="387.38" y="175.5" >hash..</text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (7 samples, 0.70%)</title><rect x="1158.0" y="117" width="8.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.01" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:117) (11 samples, 1.10%)</title><rect x="626.1" y="149" width="13.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="629.06" y="159.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="133" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="512.96" y="143.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (11 samples, 1.10%)</title><rect x="38.4" y="181" width="13.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="41.43" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1359) (7 samples, 0.70%)</title><rect x="51.5" y="229" width="8.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="54.47" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:181) (4 samples, 0.40%)</title><rect x="505.2" y="101" width="4.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="508.22" y="111.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/alloc/layout.rs:435) (1 samples, 0.10%)</title><rect x="504.0" y="117" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="507.04" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2009) (1 samples, 0.10%)</title><rect x="114.3" y="213" width="1.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="117.26" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains_key&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1422) (8 samples, 0.80%)</title><rect x="81.1" y="245" width="9.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="84.08" y="255.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains_key&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1422) (31 samples, 3.11%)</title><rect x="23.0" y="245" width="36.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="26.03" y="255.5" >has..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (2 samples, 0.20%)</title><rect x="68.1" y="149" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="71.05" y="159.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1359) (87 samples, 8.73%)</title><rect x="384.4" y="213" width="103.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="387.38" y="223.5" >hashbrown::m..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (1 samples, 0.10%)</title><rect x="11.2" y="213" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="14.18" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::record_item_insert_at   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2639) (3 samples, 0.30%)</title><rect x="930.5" y="197" width="3.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="933.54" y="207.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:77) (18 samples, 1.81%)</title><rect x="59.8" y="293" width="21.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="62.76" y="303.5" >a..</text>
</g>
<g >
<title>attempt10::is_close_int   (at attempt10.rs:11) (3 samples, 0.30%)</title><rect x="77.5" y="101" width="3.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="80.53" y="111.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:709) (10 samples, 1.00%)</title><rect x="135.6" y="181" width="11.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="138.58" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::is_bucket_full   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2820) (7 samples, 0.70%)</title><rect x="917.5" y="165" width="8.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="920.51" y="175.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1938) (100 samples, 10.04%)</title><rect x="949.5" y="213" width="118.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="952.50" y="223.5" >hashbrown::map..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::adapters::map::map_fold::{closure_env#0   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="117" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="512.96" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::is_bucket_full   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2820) (1 samples, 0.10%)</title><rect x="114.3" y="181" width="1.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="117.26" y="191.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (9 samples, 0.90%)</title><rect x="70.4" y="197" width="10.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="73.42" y="207.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;::new&lt;alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/mem/manually_drop.rs:71) (4 samples, 0.40%)</title><rect x="495.7" y="245" width="4.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="498.74" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (9 samples, 0.90%)</title><rect x="70.4" y="165" width="10.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="73.42" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::new&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:421) (2 samples, 0.20%)</title><rect x="557.3" y="181" width="2.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="560.35" y="191.5" ></text>
</g>
<g >
<title>fmodf64   (at :-1) (23 samples, 2.31%)</title><rect x="595.3" y="69" width="27.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="598.26" y="79.5" >f..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:86) (996 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >attempt10::choose_next_point   (at attempt10.rs:86)</text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (4 samples, 0.40%)</title><rect x="97.7" y="69" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="100.67" y="79.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (11 samples, 1.10%)</title><rect x="38.4" y="197" width="13.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="41.43" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1984) (7 samples, 0.70%)</title><rect x="900.9" y="197" width="8.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="903.92" y="207.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (8 samples, 0.80%)</title><rect x="92.9" y="197" width="9.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="95.93" y="207.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (41 samples, 4.12%)</title><rect x="577.5" y="101" width="48.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="580.49" y="111.5" >atte..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (5 samples, 0.50%)</title><rect x="481.5" y="133" width="5.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="484.53" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1938) (19 samples, 1.91%)</title><rect x="1154.5" y="229" width="22.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1157.46" y="239.5" >h..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2196) (3 samples, 0.30%)</title><rect x="720.8" y="165" width="3.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="723.84" y="175.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (38 samples, 3.82%)</title><rect x="961.3" y="85" width="45.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="964.35" y="95.5" >std:..</text>
</g>
<g >
<title>attempt10::is_close_int   (at attempt10.rs:11) (25 samples, 2.51%)</title><rect x="592.9" y="85" width="29.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="595.89" y="95.5" >at..</text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (30 samples, 3.01%)</title><rect x="646.2" y="133" width="35.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="649.20" y="143.5" >cor..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1115) (177 samples, 17.77%)</title><rect x="729.1" y="245" width="209.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="732.14" y="255.5" >hashbrown::set::HashSet&lt;(is..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit   (at /rust/deps/hashbrown-0.14.2/src/raw/bitmask.rs:38) (12 samples, 1.20%)</title><rect x="444.8" y="133" width="14.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="447.80" y="143.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min&lt;isize&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/cmp.rs:850) (1 samples, 0.10%)</title><rect x="537.2" y="245" width="1.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="540.21" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (77 samples, 7.73%)</title><rect x="161.6" y="69" width="91.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="164.65" y="79.5" >core::hash..</text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (77 samples, 7.73%)</title><rect x="161.6" y="53" width="91.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="164.65" y="63.5" >core::hash..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:709) (10 samples, 1.00%)</title><rect x="746.9" y="197" width="11.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="749.91" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:196) (1 samples, 0.10%)</title><rect x="24.2" y="165" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="27.22" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (at :-1) (13 samples, 1.31%)</title><rect x="65.7" y="213" width="15.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="68.68" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (1 samples, 0.10%)</title><rect x="19.5" y="181" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="22.48" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (38 samples, 3.82%)</title><rect x="961.3" y="69" width="45.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="964.35" y="79.5" >core..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_desugared&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (2 samples, 0.20%)</title><rect x="68.1" y="181" width="2.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="71.05" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (71 samples, 7.13%)</title><rect x="296.7" y="117" width="84.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="299.71" y="127.5" >core::has..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (1 samples, 0.10%)</title><rect x="1182.9" y="213" width="1.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1185.89" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (56 samples, 5.62%)</title><rect x="640.3" y="197" width="66.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="643.28" y="207.5" >hashbro..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (2 samples, 0.20%)</title><rect x="85.8" y="181" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="88.82" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:181) (2 samples, 0.20%)</title><rect x="559.7" y="101" width="2.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="562.72" y="111.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (3 samples, 0.30%)</title><rect x="82.3" y="165" width="3.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="85.27" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::get&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (87 samples, 8.73%)</title><rect x="384.4" y="197" width="103.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="387.38" y="207.5" >hashbrown::r..</text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (2 samples, 0.20%)</title><rect x="56.2" y="165" width="2.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="59.20" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:98) (4 samples, 0.40%)</title><rect x="505.2" y="85" width="4.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="508.22" y="95.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:40) (6 samples, 0.60%)</title><rect x="531.3" y="261" width="7.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="534.29" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (4 samples, 0.40%)</title><rect x="475.6" y="85" width="4.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="478.60" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::erase_no_drop&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1033) (3 samples, 0.30%)</title><rect x="1179.3" y="181" width="3.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1182.34" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::insert_in_slot&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1452) (1 samples, 0.10%)</title><rect x="115.4" y="229" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="118.44" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::set_ctrl   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2774) (1 samples, 0.10%)</title><rect x="1152.1" y="133" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1155.09" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#1   (at :-1) (1 samples, 0.10%)</title><rect x="510.0" y="181" width="1.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="512.96" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (3 samples, 0.30%)</title><rect x="51.5" y="165" width="3.5" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="54.47" y="175.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:865) (75 samples, 7.53%)</title><rect x="640.3" y="245" width="88.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="643.28" y="255.5" >hashbrown:..</text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (120 samples, 12.05%)</title><rect x="739.8" y="213" width="142.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="742.80" y="223.5" >hashbrown::map::ma..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1761) (1 samples, 0.10%)</title><rect x="115.4" y="245" width="1.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="118.44" y="255.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (1 samples, 0.10%)</title><rect x="11.2" y="101" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="14.18" y="111.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (3 samples, 0.30%)</title><rect x="82.3" y="101" width="3.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="85.27" y="111.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (7 samples, 0.70%)</title><rect x="94.1" y="85" width="8.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="97.12" y="95.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:704) (2 samples, 0.20%)</title><rect x="949.5" y="181" width="2.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="952.50" y="191.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#83   (at :-1) (1 samples, 0.10%)</title><rect x="1154.5" y="181" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1157.46" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:130) (2 samples, 0.20%)</title><rect x="559.7" y="149" width="2.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="562.72" y="159.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (30 samples, 3.01%)</title><rect x="646.2" y="149" width="35.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="649.20" y="159.5" >cor..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (48 samples, 4.82%)</title><rect x="1006.4" y="181" width="56.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1009.37" y="191.5" >core::..</text>
</g>
<g >
<title>core::iter::range::{impl#6   (at :-1) (1 samples, 0.10%)</title><rect x="511.1" y="165" width="1.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="514.14" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:220) (1 samples, 0.10%)</title><rect x="24.2" y="133" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="27.22" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (13 samples, 1.31%)</title><rect x="65.7" y="245" width="15.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="68.68" y="255.5" ></text>
</g>
<g >
<title>core::alloc::layout::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="504.0" y="101" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="507.04" y="111.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (9 samples, 0.90%)</title><rect x="1155.6" y="165" width="10.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1158.64" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="277" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="20.11" y="287.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:77) (2 samples, 0.20%)</title><rect x="15.9" y="309" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="18.92" y="319.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (44 samples, 4.42%)</title><rect x="954.2" y="181" width="52.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="957.24" y="191.5" >core:..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::insert&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:889) (1 samples, 0.10%)</title><rect x="20.7" y="293" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="23.66" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1900) (1 samples, 0.10%)</title><rect x="1188.8" y="277" width="1.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1191.82" y="287.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (8 samples, 0.80%)</title><rect x="29.0" y="101" width="9.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="31.96" y="111.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (1 samples, 0.10%)</title><rect x="1182.9" y="101" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1185.89" y="111.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (45 samples, 4.52%)</title><rect x="765.9" y="117" width="53.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="768.86" y="127.5" >core:..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::remove_entry&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (5 samples, 0.50%)</title><rect x="1177.0" y="213" width="5.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1179.97" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (7 samples, 0.70%)</title><rect x="1122.5" y="117" width="8.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1125.47" y="127.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (19 samples, 1.91%)</title><rect x="1154.5" y="213" width="22.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1157.46" y="223.5" >h..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (7 samples, 0.70%)</title><rect x="72.8" y="149" width="8.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="75.79" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (7 samples, 0.70%)</title><rect x="1090.5" y="165" width="8.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1093.48" y="175.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:865) (8 samples, 0.80%)</title><rect x="81.1" y="261" width="9.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="84.08" y="271.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (22 samples, 2.21%)</title><rect x="226.8" y="37" width="26.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="229.81" y="47.5" >c..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1358) (6 samples, 0.60%)</title><rect x="81.1" y="229" width="7.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="84.08" y="239.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (7 samples, 0.70%)</title><rect x="1158.0" y="133" width="8.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1161.01" y="143.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#83   (at :-1) (2 samples, 0.20%)</title><rect x="951.9" y="165" width="2.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="954.87" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:196) (1 samples, 0.10%)</title><rect x="20.7" y="197" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="23.66" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (5 samples, 0.50%)</title><rect x="45.5" y="133" width="6.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="48.54" y="143.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="937.7" y="181" width="1.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="940.65" y="191.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (8 samples, 0.80%)</title><rect x="92.9" y="149" width="9.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="95.93" y="159.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#83   (at :-1) (10 samples, 1.00%)</title><rect x="135.6" y="165" width="11.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="138.58" y="175.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (1 samples, 0.10%)</title><rect x="719.7" y="133" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="722.66" y="143.5" ></text>
</g>
<g >
<title>all (996 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (3 samples, 0.30%)</title><rect x="925.8" y="197" width="3.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="928.80" y="207.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (10 samples, 1.00%)</title><rect x="26.6" y="165" width="11.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="29.59" y="175.5" ></text>
</g>
<g >
<title>core::num::{impl#7   (at :-1) (1 samples, 0.10%)</title><rect x="1181.7" y="133" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1184.71" y="143.5" ></text>
</g>
<g >
<title>core::cmp::Ord::min&lt;isize&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/cmp.rs:850) (1 samples, 0.10%)</title><rect x="64.5" y="261" width="1.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="67.50" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (5 samples, 0.50%)</title><rect x="459.0" y="149" width="5.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="462.02" y="159.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (86 samples, 8.63%)</title><rect x="151.0" y="165" width="101.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="153.98" y="175.5" >core::hash::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:479) (2 samples, 0.20%)</title><rect x="559.7" y="181" width="2.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="562.72" y="191.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (1 samples, 0.10%)</title><rect x="18.3" y="181" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="21.29" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (5 samples, 0.50%)</title><rect x="1169.9" y="133" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1172.86" y="143.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (3 samples, 0.30%)</title><rect x="563.3" y="117" width="3.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="566.27" y="127.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:712) (4 samples, 0.40%)</title><rect x="1063.2" y="181" width="4.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1066.23" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (2 samples, 0.20%)</title><rect x="12.4" y="181" width="2.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="15.37" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit   (at /rust/deps/hashbrown-0.14.2/src/raw/bitmask.rs:38) (1 samples, 0.10%)</title><rect x="55.0" y="149" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="58.02" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::remove&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1067) (3 samples, 0.30%)</title><rect x="1179.3" y="197" width="3.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1182.34" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ptr&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:521) (4 samples, 0.40%)</title><rect x="475.6" y="117" width="4.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="478.60" y="127.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (84 samples, 8.43%)</title><rect x="153.4" y="133" width="99.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="156.35" y="143.5" >core::hash::..</text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (4 samples, 0.40%)</title><rect x="81.1" y="181" width="4.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="84.08" y="191.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (50 samples, 5.02%)</title><rect x="759.9" y="165" width="59.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="762.94" y="175.5" >core::..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains_key&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1422) (4 samples, 0.40%)</title><rect x="11.2" y="261" width="4.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="14.18" y="271.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:93) (2 samples, 0.20%)</title><rect x="945.9" y="261" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="948.94" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1358) (1 samples, 0.10%)</title><rect x="11.2" y="245" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="14.18" y="255.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:85) (22 samples, 2.21%)</title><rect x="90.6" y="293" width="26.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="93.56" y="303.5" >a..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (8 samples, 0.80%)</title><rect x="1166.3" y="197" width="9.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1169.31" y="207.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (10 samples, 1.00%)</title><rect x="26.6" y="133" width="11.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="29.59" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:498) (11 samples, 1.10%)</title><rect x="626.1" y="197" width="13.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="629.06" y="207.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1194) (173 samples, 17.37%)</title><rect x="949.5" y="245" width="205.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="952.50" y="255.5" >hashbrown::set::HashSet&lt;(i..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1900) (173 samples, 17.37%)</title><rect x="949.5" y="229" width="205.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="952.50" y="239.5" >hashbrown::map::HashMap&lt;(i..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:219) (5 samples, 0.50%)</title><rect x="138.0" y="117" width="5.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="140.95" y="127.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (77 samples, 7.73%)</title><rect x="161.6" y="85" width="91.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="164.65" y="95.5" >std::colle..</text>
</g>
<g >
<title>std::collections::hash::map::{impl#83   (at :-1) (10 samples, 1.00%)</title><rect x="746.9" y="181" width="11.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="749.91" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (2 samples, 0.20%)</title><rect x="85.8" y="165" width="2.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="88.82" y="175.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (7 samples, 0.70%)</title><rect x="1158.0" y="101" width="8.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1161.01" y="111.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (2 samples, 0.20%)</title><rect x="85.8" y="149" width="2.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="88.82" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#15   (at :-1) (4 samples, 0.40%)</title><rect x="495.7" y="261" width="4.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="498.74" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (8 samples, 0.80%)</title><rect x="1111.8" y="101" width="9.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1114.81" y="111.5" ></text>
</g>
<g >
<title>roundf64   (at :-1) (3 samples, 0.30%)</title><rect x="622.5" y="69" width="3.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="625.51" y="79.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (3 samples, 0.30%)</title><rect x="102.4" y="213" width="3.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="105.41" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="261" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="20.11" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:184) (2 samples, 0.20%)</title><rect x="559.7" y="133" width="2.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="562.72" y="143.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::insert&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:889) (177 samples, 17.77%)</title><rect x="729.1" y="261" width="209.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="732.14" y="271.5" >std::collections::hash::set..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:704) (1 samples, 0.10%)</title><rect x="640.3" y="181" width="1.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="643.28" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (13 samples, 1.31%)</title><rect x="65.7" y="229" width="15.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="68.68" y="239.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (38 samples, 3.82%)</title><rect x="774.2" y="69" width="45.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="777.16" y="79.5" >core..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1758) (1 samples, 0.10%)</title><rect x="929.4" y="229" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="932.36" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2171) (6 samples, 0.60%)</title><rect x="706.6" y="165" width="7.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="709.63" y="175.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (82 samples, 8.23%)</title><rect x="155.7" y="101" width="97.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="158.72" y="111.5" >core::hash:..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::insert_in_slot&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1449) (6 samples, 0.60%)</title><rect x="930.5" y="213" width="7.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="933.54" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (6 samples, 0.60%)</title><rect x="713.7" y="165" width="7.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="716.73" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (11 samples, 1.10%)</title><rect x="38.4" y="149" width="13.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="41.43" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:130) (7 samples, 0.70%)</title><rect x="501.7" y="149" width="8.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="504.67" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="494.6" y="261" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="497.56" y="271.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (3 samples, 0.30%)</title><rect x="82.3" y="117" width="3.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="85.27" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (70 samples, 7.03%)</title><rect x="543.1" y="213" width="83.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="546.13" y="223.5" >alloc::ve..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1194) (24 samples, 2.41%)</title><rect x="1154.5" y="261" width="28.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1157.46" y="271.5" >ha..</text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (8 samples, 0.80%)</title><rect x="92.9" y="181" width="9.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="95.93" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1358) (1 samples, 0.10%)</title><rect x="18.3" y="245" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="21.29" y="255.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (4 samples, 0.40%)</title><rect x="900.9" y="181" width="4.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="903.92" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:212) (1 samples, 0.10%)</title><rect x="953.1" y="133" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="956.05" y="143.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:865) (31 samples, 3.11%)</title><rect x="23.0" y="261" width="36.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="26.03" y="271.5" >has..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:675) (301 samples, 30.22%)</title><rect x="130.8" y="261" width="356.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="133.84" y="271.5" >std::collections::hash::set::HashSet&lt;(isize, isi..</text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (8 samples, 0.80%)</title><rect x="29.0" y="69" width="9.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="31.96" y="79.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (40 samples, 4.02%)</title><rect x="1073.9" y="181" width="47.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1076.90" y="191.5" >hash..</text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (1 samples, 0.10%)</title><rect x="1182.9" y="133" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1185.89" y="143.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:78) (8 samples, 0.80%)</title><rect x="81.1" y="293" width="9.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="84.08" y="303.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:865) (4 samples, 0.40%)</title><rect x="11.2" y="277" width="4.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="14.18" y="287.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (1 samples, 0.10%)</title><rect x="18.3" y="117" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="21.29" y="127.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1938) (1 samples, 0.10%)</title><rect x="1188.8" y="261" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1191.82" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::{impl#8   (at :-1) (8 samples, 0.80%)</title><rect x="1111.8" y="149" width="9.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1114.81" y="159.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:704) (4 samples, 0.40%)</title><rect x="130.8" y="181" width="4.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="133.84" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (14 samples, 1.41%)</title><rect x="90.6" y="229" width="16.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="93.56" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (2 samples, 0.20%)</title><rect x="564.5" y="85" width="2.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="567.46" y="95.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (50 samples, 5.02%)</title><rect x="566.8" y="165" width="59.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="569.83" y="175.5" >core::..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:865) (2 samples, 0.20%)</title><rect x="18.3" y="277" width="2.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="21.29" y="287.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::get&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (7 samples, 0.70%)</title><rect x="51.5" y="213" width="8.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.47" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2009) (7 samples, 0.70%)</title><rect x="917.5" y="197" width="8.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="920.51" y="207.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (10 samples, 1.00%)</title><rect x="26.6" y="149" width="11.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="29.59" y="159.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:78) (76 samples, 7.63%)</title><rect x="639.1" y="277" width="90.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="642.10" y="287.5" >attempt10:..</text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (1 samples, 0.10%)</title><rect x="11.2" y="181" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.18" y="191.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="929.4" y="165" width="1.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="932.36" y="175.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:675) (31 samples, 3.11%)</title><rect x="23.0" y="277" width="36.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="26.03" y="287.5" >std..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:1194) (1 samples, 0.10%)</title><rect x="1188.8" y="293" width="1.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1191.82" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::erase   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:3392) (8 samples, 0.80%)</title><rect x="1121.3" y="149" width="9.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1124.29" y="159.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (86 samples, 8.63%)</title><rect x="151.0" y="149" width="101.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="153.98" y="159.5" >core::hash::..</text>
</g>
<g >
<title>core::hash::impls::{impl#23   (at :-1) (1 samples, 0.10%)</title><rect x="1182.9" y="181" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1185.89" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (52 samples, 5.22%)</title><rect x="819.2" y="165" width="61.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="822.18" y="175.5" >core::..</text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (27 samples, 2.71%)</title><rect x="649.8" y="101" width="31.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="652.76" y="111.5" >co..</text>
</g>
<g >
<title>alloc::alloc::alloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:98) (2 samples, 0.20%)</title><rect x="559.7" y="85" width="2.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="562.72" y="95.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1359) (2 samples, 0.20%)</title><rect x="88.2" y="229" width="2.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="91.19" y="239.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (108 samples, 10.84%)</title><rect x="252.9" y="149" width="127.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="255.87" y="159.5" >core::hash::sip:..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:86) (8 samples, 0.80%)</title><rect x="938.8" y="277" width="9.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="941.84" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="229" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="20.11" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (87 samples, 8.73%)</title><rect x="384.4" y="181" width="103.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="387.38" y="191.5" >hashbrown::r..</text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#0   (at :-1) (2 samples, 0.20%)</title><rect x="68.1" y="197" width="2.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="71.05" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1359) (19 samples, 1.91%)</title><rect x="706.6" y="213" width="22.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="709.63" y="223.5" >h..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:498) (11 samples, 1.10%)</title><rect x="626.1" y="261" width="13.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="629.06" y="271.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (8 samples, 0.80%)</title><rect x="92.9" y="213" width="9.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="95.93" y="223.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (1 samples, 0.10%)</title><rect x="1184.1" y="213" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1187.08" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::erase   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:3438) (1 samples, 0.10%)</title><rect x="1152.1" y="149" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1155.09" y="159.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1358) (24 samples, 2.41%)</title><rect x="23.0" y="229" width="28.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="26.03" y="239.5" >ha..</text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="1188.8" y="181" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.82" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::{impl#3   (at :-1) (2 samples, 0.20%)</title><rect x="88.2" y="165" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="91.19" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_ref&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:685) (8 samples, 0.80%)</title><rect x="1111.8" y="133" width="9.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1114.81" y="143.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="213" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="20.11" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (1 samples, 0.10%)</title><rect x="19.5" y="197" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="22.48" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (3 samples, 0.30%)</title><rect x="905.7" y="181" width="3.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="908.66" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (24 samples, 2.41%)</title><rect x="23.0" y="213" width="28.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="26.03" y="223.5" >ha..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (3 samples, 0.30%)</title><rect x="725.6" y="117" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="728.58" y="127.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:85) (177 samples, 17.77%)</title><rect x="729.1" y="277" width="209.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="732.14" y="287.5" >attempt10::choose_next_poin..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1963) (16 samples, 1.61%)</title><rect x="882.0" y="197" width="18.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="884.97" y="207.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:709) (2 samples, 0.20%)</title><rect x="951.9" y="181" width="2.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="954.87" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (8 samples, 0.80%)</title><rect x="1166.3" y="165" width="9.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1169.31" y="175.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1754) (40 samples, 4.02%)</title><rect x="882.0" y="229" width="47.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="884.97" y="239.5" >hash..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:74) (31 samples, 3.11%)</title><rect x="23.0" y="293" width="36.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="26.03" y="303.5" >att..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:670) (2 samples, 0.20%)</title><rect x="559.7" y="165" width="2.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="562.72" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (48 samples, 4.82%)</title><rect x="1006.4" y="149" width="56.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1009.37" y="159.5" >core::..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (3 samples, 0.30%)</title><rect x="12.4" y="213" width="3.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="15.37" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (2 samples, 0.20%)</title><rect x="564.5" y="101" width="2.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="567.46" y="111.5" ></text>
</g>
<g >
<title>hashbrown::raw::{impl#8   (at :-1) (1 samples, 0.10%)</title><rect x="723.2" y="149" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="726.21" y="159.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:196) (1 samples, 0.10%)</title><rect x="953.1" y="149" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="956.05" y="159.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:710) (4 samples, 0.40%)</title><rect x="81.1" y="197" width="4.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="84.08" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove_entry&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1939) (2 samples, 0.20%)</title><rect x="1185.3" y="245" width="2.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1188.26" y="255.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (10 samples, 1.00%)</title><rect x="26.6" y="181" width="11.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="29.59" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="245" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="20.11" y="255.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (1 samples, 0.10%)</title><rect x="18.3" y="133" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="21.29" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1900) (4 samples, 0.40%)</title><rect x="1182.9" y="261" width="4.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1185.89" y="271.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:50) (1 samples, 0.10%)</title><rect x="17.1" y="293" width="1.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="20.11" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (11 samples, 1.10%)</title><rect x="38.4" y="165" width="13.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="41.43" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (2 samples, 0.20%)</title><rect x="85.8" y="133" width="2.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="88.82" y="143.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/set.rs:865) (301 samples, 30.22%)</title><rect x="130.8" y="245" width="356.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="133.84" y="255.5" >hashbrown::set::HashSet&lt;(isize, isize), std::col..</text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:196) (4 samples, 0.40%)</title><rect x="754.0" y="165" width="4.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="757.02" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (38 samples, 3.82%)</title><rect x="774.2" y="85" width="45.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="777.16" y="95.5" >core..</text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (1 samples, 0.10%)</title><rect x="1182.9" y="149" width="1.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1185.89" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2171) (1 samples, 0.10%)</title><rect x="1185.3" y="197" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1188.26" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2201) (4 samples, 0.40%)</title><rect x="724.4" y="165" width="4.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="727.40" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (2 samples, 0.20%)</title><rect x="68.1" y="133" width="2.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="71.05" y="143.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#18   (at :-1) (7 samples, 0.70%)</title><rect x="1158.0" y="149" width="8.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1161.01" y="159.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (1 samples, 0.10%)</title><rect x="17.1" y="133" width="1.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="20.11" y="143.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:711) (2 samples, 0.20%)</title><rect x="85.8" y="197" width="2.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="88.82" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte   (at /rust/deps/hashbrown-0.14.2/src/raw/sse2.rs:90) (1 samples, 0.10%)</title><rect x="719.7" y="149" width="1.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="722.66" y="159.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="929.4" y="181" width="1.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="932.36" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (48 samples, 4.82%)</title><rect x="1006.4" y="133" width="56.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1009.37" y="143.5" >core::..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::contains_key&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1422) (75 samples, 7.53%)</title><rect x="640.3" y="229" width="88.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="643.28" y="239.5" >hashbrown:..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::remove&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1900) (24 samples, 2.41%)</title><rect x="1154.5" y="245" width="28.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1157.46" y="255.5" >ha..</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:709) (2 samples, 0.20%)</title><rect x="23.0" y="197" width="2.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="26.03" y="207.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:50) (74 samples, 7.43%)</title><rect x="538.4" y="261" width="87.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="541.39" y="271.5" >attempt10:..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::get_inner&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global, (isize, isize)&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1359) (3 samples, 0.30%)</title><rect x="12.4" y="245" width="3.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="15.37" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (70 samples, 7.03%)</title><rect x="543.1" y="229" width="83.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="546.13" y="239.5" >alloc::ve..</text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (31 samples, 3.11%)</title><rect x="1026.5" y="117" width="36.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1029.51" y="127.5" >cor..</text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:212) (1 samples, 0.10%)</title><rect x="24.2" y="149" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="27.22" y="159.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (41 samples, 4.12%)</title><rect x="577.5" y="117" width="48.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="580.49" y="127.5" >core..</text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::contains&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:675) (75 samples, 7.53%)</title><rect x="640.3" y="261" width="88.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="643.28" y="271.5" >std::colle..</text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::as_mut&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:753) (1 samples, 0.10%)</title><rect x="929.4" y="213" width="1.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="932.36" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::remove&lt;((isize, isize), ()), alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1067) (28 samples, 2.81%)</title><rect x="1121.3" y="181" width="33.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1124.29" y="191.5" >ha..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::find&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (19 samples, 1.91%)</title><rect x="706.6" y="181" width="22.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="709.63" y="191.5" >h..</text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (27 samples, 2.71%)</title><rect x="649.8" y="117" width="31.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="652.76" y="127.5" >co..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:38) (1 samples, 0.10%)</title><rect x="63.3" y="277" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="66.31" y="287.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:131) (1 samples, 0.10%)</title><rect x="674.6" y="37" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="677.64" y="47.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;(isize, isize), std::collections::hash::map::RandomState&gt;::remove&lt;(isize, isize), std::collections::hash::map::RandomState, (isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/std/src/collections/hash/set.rs:938) (4 samples, 0.40%)</title><rect x="1182.9" y="293" width="4.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1185.89" y="303.5" ></text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:196) (8 samples, 0.80%)</title><rect x="138.0" y="149" width="9.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="140.95" y="159.5" ></text>
</g>
<g >
<title>std::f64::{impl#0   (at :-1) (3 samples, 0.30%)</title><rect x="622.5" y="85" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="625.51" y="95.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (1 samples, 0.10%)</title><rect x="115.4" y="197" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="118.44" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (29 samples, 2.91%)</title><rect x="430.6" y="165" width="34.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="433.58" y="175.5" >ha..</text>
</g>
<g >
<title>core::ops::index_range::{impl#1   (at :-1) (1 samples, 0.10%)</title><rect x="127.3" y="245" width="1.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="130.29" y="255.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (8 samples, 0.80%)</title><rect x="1111.8" y="85" width="9.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1114.81" y="95.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::fix_insert_slot   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:1873) (7 samples, 0.70%)</title><rect x="917.5" y="181" width="8.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="920.51" y="191.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="1182.9" y="197" width="1.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1185.89" y="207.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (5 samples, 0.50%)</title><rect x="675.8" y="37" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="678.82" y="47.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (7 samples, 0.70%)</title><rect x="72.8" y="133" width="8.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="75.79" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::erase   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:3439) (1 samples, 0.10%)</title><rect x="1153.3" y="149" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1156.27" y="159.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (2 samples, 0.20%)</title><rect x="103.6" y="149" width="2.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="106.59" y="159.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (3 samples, 0.30%)</title><rect x="102.4" y="165" width="3.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="105.41" y="175.5" ></text>
</g>
<g >
<title>malloc   (at :-1) (1 samples, 0.10%)</title><rect x="560.9" y="69" width="1.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="563.90" y="79.5" ></text>
</g>
<g >
<title>core::hash::impls::{impl#5   (at :-1) (34 samples, 3.41%)</title><rect x="641.5" y="165" width="40.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="644.47" y="175.5" >cor..</text>
</g>
<g >
<title>core::hash::sip::{impl#8   (at :-1) (5 samples, 0.50%)</title><rect x="32.5" y="53" width="5.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="35.51" y="63.5" ></text>
</g>
<g >
<title>??   (at :-1) (6 samples, 0.60%)</title><rect x="119.0" y="261" width="7.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="122.00" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1761) (7 samples, 0.70%)</title><rect x="930.5" y="229" width="8.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="933.54" y="239.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (1 samples, 0.10%)</title><rect x="18.3" y="85" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="21.29" y="95.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (38 samples, 3.82%)</title><rect x="774.2" y="101" width="45.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="777.16" y="111.5" >std:..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::get&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (1 samples, 0.10%)</title><rect x="19.5" y="229" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="22.48" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (1 samples, 0.10%)</title><rect x="18.3" y="229" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="21.29" y="239.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;((isize, isize), ())&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1400) (1 samples, 0.10%)</title><rect x="115.4" y="181" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="118.44" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#5   (at :-1) (8 samples, 0.80%)</title><rect x="1166.3" y="149" width="9.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1169.31" y="159.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:403) (41 samples, 4.12%)</title><rect x="957.8" y="101" width="48.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="960.79" y="111.5" >core..</text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (50 samples, 5.02%)</title><rect x="566.8" y="181" width="59.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="569.83" y="191.5" >core::..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2000) (4 samples, 0.40%)</title><rect x="912.8" y="197" width="4.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="915.77" y="207.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::_mm_movemask_epi8   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/../../stdarch/crates/core_arch/src/x86/sse2.rs:1428) (5 samples, 0.50%)</title><rect x="481.5" y="117" width="5.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="484.53" y="127.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize&lt;std::collections::hash::map::DefaultHasher&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:440) (45 samples, 4.52%)</title><rect x="765.9" y="133" width="53.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="768.86" y="143.5" >core:..</text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (6 samples, 0.60%)</title><rect x="81.1" y="213" width="7.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="84.08" y="223.5" ></text>
</g>
<g >
<title>attempt10::is_close_int   (at attempt10.rs:11) (1 samples, 0.10%)</title><rect x="564.5" y="53" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="567.46" y="63.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash&lt;(isize, isize), std::collections::hash::map::RandomState&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:262) (1 samples, 0.10%)</title><rect x="11.2" y="229" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.18" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (10 samples, 1.00%)</title><rect x="500.5" y="213" width="11.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="503.48" y="223.5" ></text>
</g>
<g >
<title>std::collections::hash::map::{impl#86   (at :-1) (1 samples, 0.10%)</title><rect x="1188.8" y="213" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1191.82" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (13 samples, 1.31%)</title><rect x="65.7" y="261" width="15.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="68.68" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::h2   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:157) (16 samples, 1.61%)</title><rect x="882.0" y="181" width="18.9" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="884.97" y="191.5" ></text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState, &amp;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/mod.rs:712) (1 samples, 0.10%)</title><rect x="1175.8" y="197" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1178.78" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2196) (2 samples, 0.20%)</title><rect x="1177.0" y="181" width="2.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1179.97" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;((isize, isize), ()), alloc::alloc::Global&gt;::get&lt;((isize, isize), ()), alloc::alloc::Global, hashbrown::map::equivalent_key::{closure_env#0   (at :-1) (3 samples, 0.30%)</title><rect x="12.4" y="229" width="3.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="15.37" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;((isize, isize), ())&gt;::write&lt;((isize, isize), ())&gt;   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:635) (1 samples, 0.10%)</title><rect x="937.7" y="197" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="940.65" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::{impl#14   (at :-1) (11 samples, 1.10%)</title><rect x="626.1" y="229" width="13.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="629.06" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2196) (13 samples, 1.31%)</title><rect x="464.9" y="165" width="15.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="467.94" y="175.5" ></text>
</g>
<g >
<title>core::hash::sip::{impl#4   (at :-1) (1 samples, 0.10%)</title><rect x="1188.8" y="197" width="1.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1191.82" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner::find_inner   (at /rust/deps/hashbrown-0.14.2/src/raw/mod.rs:2191) (3 samples, 0.30%)</title><rect x="55.0" y="181" width="3.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="58.02" y="191.5" ></text>
</g>
<g >
<title>core::hash::sip::u8to64_le   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:131) (1 samples, 0.10%)</title><rect x="797.9" y="53" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="800.85" y="63.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:175) (2 samples, 0.20%)</title><rect x="502.9" y="133" width="2.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="505.85" y="143.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys&lt;core::hash::sip::Sip13Rounds&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/hash/sip.rs:212) (1 samples, 0.10%)</title><rect x="20.7" y="181" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="23.66" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1752) (120 samples, 12.05%)</title><rect x="739.8" y="229" width="142.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="742.80" y="239.5" >hashbrown::map::Ha..</text>
</g>
<g >
<title>hashbrown::raw::{impl#8   (at :-1) (5 samples, 0.50%)</title><rect x="474.4" y="149" width="5.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="477.42" y="159.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;::insert&lt;(isize, isize), (), std::collections::hash::map::RandomState, alloc::alloc::Global&gt;   (at /rust/deps/hashbrown-0.14.2/src/map.rs:1752) (14 samples, 1.41%)</title><rect x="90.6" y="245" width="16.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="93.56" y="255.5" ></text>
</g>
</g>
</svg>
