<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1200) (3 samples, 1.39%)</title><rect x="518.1" y="213" width="16.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="521.06" y="223.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="117" width="5.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="89.48" y="127.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:91) (4 samples, 1.85%)</title><rect x="1157.2" y="245" width="21.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1160.22" y="255.5" >a..</text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (39 samples, 18.06%)</title><rect x="288.6" y="213" width="213.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="291.61" y="223.5" >core::slice::cmp::{impl#10  ..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:130) (1 samples, 0.46%)</title><rect x="81.0" y="133" width="5.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="84.02" y="143.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:84) (188 samples, 87.04%)</title><rect x="152.0" y="261" width="1027.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="155.04" y="271.5" >attempt10::choose_next_point   (at attempt10.rs:84)</text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="197" width="5.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="40.31" y="207.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:30) (1 samples, 0.46%)</title><rect x="534.4" y="229" width="5.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="537.44" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (24 samples, 11.11%)</title><rect x="785.7" y="181" width="131.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="788.74" y="191.5" >alloc::vec::spec..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:75) (91 samples, 42.13%)</title><rect x="501.7" y="245" width="497.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="504.67" y="255.5" >attempt10::choose_next_point   (at attempt10.rs:75)</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:479) (1 samples, 0.46%)</title><rect x="802.1" y="149" width="5.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="805.13" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (1 samples, 0.46%)</title><rect x="802.1" y="85" width="5.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="805.13" y="95.5" ></text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (5 samples, 2.31%)</title><rect x="261.3" y="197" width="27.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="264.30" y="207.5" >c..</text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (39 samples, 18.06%)</title><rect x="288.6" y="229" width="213.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="291.61" y="239.5" >core::slice::{impl#0   (at :..</text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="181" width="5.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="40.31" y="191.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="85" width="27.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="111.33" y="95.5" >a..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:76) (9 samples, 4.17%)</title><rect x="998.8" y="245" width="49.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1001.80" y="255.5" >atte..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:83) (9 samples, 4.17%)</title><rect x="1048.0" y="245" width="49.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1050.96" y="255.5" >atte..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:30) (1 samples, 0.46%)</title><rect x="75.6" y="245" width="5.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="78.56" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:181) (5 samples, 2.31%)</title><rect x="561.8" y="69" width="27.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="564.76" y="79.5" >a..</text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (1 samples, 0.46%)</title><rect x="42.8" y="261" width="5.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="45.78" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{closure#0   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="69" width="5.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="89.48" y="79.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:85) (1 samples, 0.46%)</title><rect x="1179.1" y="261" width="5.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1182.07" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (9 samples, 4.17%)</title><rect x="556.3" y="213" width="49.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="559.30" y="223.5" >core..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (9 samples, 4.17%)</title><rect x="556.3" y="181" width="49.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="559.30" y="191.5" >allo..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="133" width="5.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="89.48" y="143.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="133" width="5.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="40.31" y="143.5" ></text>
</g>
<g >
<title>all (216 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>attempt10::is_close_int   (at attempt10.rs:9) (12 samples, 5.56%)</title><rect x="845.8" y="53" width="65.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="848.83" y="63.5" >attempt..</text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (1 samples, 0.46%)</title><rect x="42.8" y="245" width="5.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="45.78" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1888) (1 samples, 0.46%)</title><rect x="1086.2" y="229" width="5.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1089.20" y="239.5" ></text>
</g>
<g >
<title>__rust_dealloc   (at :-1) (5 samples, 2.31%)</title><rect x="916.9" y="101" width="27.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="919.85" y="111.5" >_..</text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (1 samples, 0.46%)</title><rect x="10.0" y="245" width="5.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>??   (at :-1) (4 samples, 1.85%)</title><rect x="163.0" y="229" width="21.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="165.96" y="239.5" >?..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:34) (1 samples, 0.46%)</title><rect x="26.4" y="261" width="5.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="29.39" y="271.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;(isize, isize)&gt;::assume_init_read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/mem/maybe_uninit.rs:705) (4 samples, 1.85%)</title><rect x="266.8" y="181" width="21.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="269.76" y="191.5" >c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="229" width="27.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="111.33" y="239.5" >c..</text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="165" width="27.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="111.33" y="175.5" >c..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:184) (1 samples, 0.46%)</title><rect x="802.1" y="101" width="5.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="805.13" y="111.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:498) (1 samples, 0.46%)</title><rect x="135.6" y="181" width="5.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="138.65" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (2 samples, 0.93%)</title><rect x="81.0" y="229" width="10.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="84.02" y="239.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:84) (216 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >attempt10::choose_next_point   (at attempt10.rs:84)</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:75) (5 samples, 2.31%)</title><rect x="15.5" y="277" width="27.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="18.46" y="287.5" >a..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:38) (1 samples, 0.46%)</title><rect x="31.9" y="261" width="5.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="34.85" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (1 samples, 0.46%)</title><rect x="81.0" y="101" width="5.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="84.02" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:130) (1 samples, 0.46%)</title><rect x="802.1" y="117" width="5.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="805.13" y="127.5" ></text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (9 samples, 4.17%)</title><rect x="998.8" y="213" width="49.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1001.80" y="223.5" >core..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:48) (6 samples, 2.78%)</title><rect x="102.9" y="245" width="32.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="105.87" y="255.5" >at..</text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (20 samples, 9.26%)</title><rect x="807.6" y="69" width="109.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="810.59" y="79.5" >attempt10::ge..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:48) (1 samples, 0.46%)</title><rect x="37.3" y="261" width="5.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="40.31" y="271.5" ></text>
</g>
<g >
<title>??   (at :-1) (6 samples, 2.78%)</title><rect x="966.0" y="85" width="32.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="969.02" y="95.5" >??..</text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (3 samples, 1.39%)</title><rect x="59.2" y="213" width="16.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="62.17" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (at :-1) (1 samples, 0.46%)</title><rect x="135.6" y="197" width="5.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.65" y="207.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:71) (24 samples, 11.11%)</title><rect x="157.5" y="245" width="131.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="160.50" y="255.5" >attempt10::choos..</text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (2 samples, 0.93%)</title><rect x="141.1" y="229" width="10.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="144.11" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1887) (4 samples, 1.85%)</title><rect x="1064.4" y="229" width="21.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1067.35" y="239.5" >a..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::pop&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1956) (2 samples, 0.93%)</title><rect x="1146.3" y="229" width="10.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1149.30" y="239.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#6   (at :-1) (2 samples, 0.93%)</title><rect x="594.5" y="133" width="11.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="597.54" y="143.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:84) (209 samples, 96.76%)</title><rect x="48.2" y="277" width="1141.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="51.24" y="287.5" >attempt10::choose_next_point   (at attempt10.rs:84)</text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (5 samples, 2.31%)</title><rect x="561.8" y="85" width="27.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="564.76" y="95.5" >a..</text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="101" width="27.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="111.33" y="111.5" >c..</text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (9 samples, 4.17%)</title><rect x="998.8" y="229" width="49.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1001.80" y="239.5" >core..</text>
</g>
<g >
<title>attempt10::is_close_int   (at attempt10.rs:9) (4 samples, 1.85%)</title><rect x="113.8" y="69" width="21.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="116.80" y="79.5" >a..</text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="117" width="5.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="40.31" y="127.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::{impl#0   (at :-1) (2 samples, 0.93%)</title><rect x="1075.3" y="213" width="10.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1078.28" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (at :-1) (20 samples, 9.26%)</title><rect x="807.6" y="85" width="109.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="810.59" y="95.5" >core::ops::fu..</text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#5   (at :-1) (4 samples, 1.85%)</title><rect x="512.6" y="229" width="21.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="515.59" y="239.5" >a..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:498) (15 samples, 6.94%)</title><rect x="916.9" y="165" width="81.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="919.85" y="175.5" >core::ptr..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1883) (2 samples, 0.93%)</title><rect x="1053.4" y="229" width="11.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1056.43" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (24 samples, 11.11%)</title><rect x="785.7" y="213" width="131.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="788.74" y="223.5" >core::iter::trai..</text>
</g>
<g >
<title>alloc::alloc::alloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:98) (1 samples, 0.46%)</title><rect x="81.0" y="69" width="5.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="84.02" y="79.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (3 samples, 1.39%)</title><rect x="1031.6" y="181" width="16.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1034.57" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="133" width="27.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="111.33" y="143.5" >c..</text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (19 samples, 8.80%)</title><rect x="184.8" y="229" width="103.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="187.81" y="239.5" >core::array:..</text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="229" width="5.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="40.31" y="239.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:84) (216 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >attempt10::choose_next_point   (at attempt10.rs:84)</text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (15 samples, 6.94%)</title><rect x="916.9" y="133" width="81.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="919.85" y="143.5" >alloc::al..</text>
</g>
<g >
<title>free   (at :-1) (10 samples, 4.63%)</title><rect x="944.2" y="101" width="54.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="947.17" y="111.5" >free ..</text>
</g>
<g >
<title>core::array::iter::{impl#2   (at :-1) (1 samples, 0.46%)</title><rect x="53.7" y="245" width="5.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="56.70" y="255.5" ></text>
</g>
<g >
<title>fmodf64   (at :-1) (4 samples, 1.85%)</title><rect x="113.8" y="53" width="21.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="116.80" y="63.5" >f..</text>
</g>
<g >
<title>alloc::alloc::alloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:98) (4 samples, 1.85%)</title><rect x="567.2" y="53" width="21.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="570.22" y="63.5" >a..</text>
</g>
<g >
<title>alloc::alloc::dealloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:117) (1 samples, 0.46%)</title><rect x="135.6" y="133" width="5.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="138.65" y="143.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1960) (1 samples, 0.46%)</title><rect x="152.0" y="245" width="5.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="155.04" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (20 samples, 9.26%)</title><rect x="807.6" y="117" width="109.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="810.59" y="127.5" >core::iter::t..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:670) (1 samples, 0.46%)</title><rect x="802.1" y="133" width="5.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="805.13" y="143.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:85) (2 samples, 0.93%)</title><rect x="1146.3" y="245" width="10.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1149.30" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (at :-1) (15 samples, 6.94%)</title><rect x="916.9" y="181" width="81.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="919.85" y="191.5" >alloc::ve..</text>
</g>
<g >
<title>attempt10::main   (at attempt10.rs:99) (216 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >attempt10::main   (at attempt10.rs:99)</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:34) (3 samples, 1.39%)</title><rect x="605.5" y="229" width="16.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="608.46" y="239.5" ></text>
</g>
<g >
<title>__rust_alloc   (at :-1) (1 samples, 0.46%)</title><rect x="81.0" y="53" width="5.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="84.02" y="63.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (1 samples, 0.46%)</title><rect x="146.6" y="197" width="5.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="149.57" y="207.5" ></text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (2 samples, 0.93%)</title><rect x="141.1" y="245" width="10.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="144.11" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (at :-1) (1 samples, 0.46%)</title><rect x="135.6" y="229" width="5.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="138.65" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:498) (1 samples, 0.46%)</title><rect x="135.6" y="245" width="5.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="138.65" y="255.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:32) (2 samples, 0.93%)</title><rect x="81.0" y="245" width="10.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="84.02" y="255.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (1 samples, 0.46%)</title><rect x="10.0" y="229" width="5.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:670) (1 samples, 0.46%)</title><rect x="81.0" y="149" width="5.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="84.02" y="159.5" ></text>
</g>
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1200) (4 samples, 1.85%)</title><rect x="266.8" y="149" width="21.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="269.76" y="159.5" >c..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:91) (3 samples, 1.39%)</title><rect x="1129.9" y="229" width="16.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1132.91" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:184) (1 samples, 0.46%)</title><rect x="81.0" y="117" width="5.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="84.02" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (20 samples, 9.26%)</title><rect x="807.6" y="101" width="109.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="810.59" y="111.5" >core::iter::t..</text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{closure#0   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="85" width="5.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="89.48" y="95.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#1   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="165" width="5.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="89.48" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="197" width="27.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="111.33" y="207.5" >a..</text>
</g>
<g >
<title>core::ops::index_range::IndexRange::next_unchecked   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ops/index_range.rs:61) (1 samples, 0.46%)</title><rect x="255.8" y="197" width="5.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="258.83" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:479) (1 samples, 0.46%)</title><rect x="81.0" y="165" width="5.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="84.02" y="175.5" ></text>
</g>
<g >
<title>core::ops::index_range::{impl#1   (at :-1) (1 samples, 0.46%)</title><rect x="53.7" y="229" width="5.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="56.70" y="239.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:72) (39 samples, 18.06%)</title><rect x="288.6" y="245" width="213.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="291.61" y="255.5" >attempt10::choose_next_point..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:38) (4 samples, 1.85%)</title><rect x="742.0" y="229" width="21.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="745.04" y="239.5" >a..</text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (at :-1) (15 samples, 6.94%)</title><rect x="916.9" y="149" width="81.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="919.85" y="159.5" >alloc::ra..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::{impl#14   (at :-1) (15 samples, 6.94%)</title><rect x="916.9" y="197" width="81.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="919.85" y="207.5" >core::ptr..</text>
</g>
<g >
<title>malloc   (at :-1) (1 samples, 0.46%)</title><rect x="802.1" y="37" width="5.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="805.13" y="47.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::adapters::map::map_fold::{closure_env#0   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="101" width="5.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="89.48" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#19   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="53" width="5.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="89.48" y="63.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="149" width="27.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="111.33" y="159.5" >c..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#1   (at :-1) (2 samples, 0.93%)</title><rect x="81.0" y="181" width="10.9" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="84.02" y="191.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:84) (9 samples, 4.17%)</title><rect x="1097.1" y="245" width="49.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1100.13" y="255.5" >atte..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:184) (5 samples, 2.31%)</title><rect x="561.8" y="101" width="27.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="564.76" y="111.5" >a..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_trusted&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#0   (at :-1) (1 samples, 0.46%)</title><rect x="86.5" y="149" width="5.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="89.48" y="159.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (1 samples, 0.46%)</title><rect x="42.8" y="229" width="5.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="45.78" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (12 samples, 5.56%)</title><rect x="436.1" y="181" width="65.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="439.11" y="191.5" >core::s..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:36) (1 samples, 0.46%)</title><rect x="97.4" y="245" width="5.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="100.41" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:181) (1 samples, 0.46%)</title><rect x="802.1" y="69" width="5.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="805.13" y="79.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:670) (6 samples, 2.78%)</title><rect x="561.8" y="133" width="32.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="564.76" y="143.5" >al..</text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:1400) (1 samples, 0.46%)</title><rect x="1086.2" y="213" width="5.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1089.20" y="223.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (at :-1) (20 samples, 9.26%)</title><rect x="807.6" y="149" width="109.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="810.59" y="159.5" >core::iter::a..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:1889) (1 samples, 0.46%)</title><rect x="1091.7" y="229" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1094.67" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/core/src/ptr/mod.rs:498) (15 samples, 6.94%)</title><rect x="916.9" y="229" width="81.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="919.85" y="239.5" >core::ptr..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (2 samples, 0.93%)</title><rect x="81.0" y="197" width="10.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="84.02" y="207.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (at :-1) (2 samples, 0.93%)</title><rect x="594.5" y="149" width="11.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="597.54" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (20 samples, 9.26%)</title><rect x="807.6" y="133" width="109.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="810.59" y="143.5" >core::iter::t..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:71) (1 samples, 0.46%)</title><rect x="53.7" y="261" width="5.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="56.70" y="271.5" ></text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (at :-1) (3 samples, 1.39%)</title><rect x="59.2" y="229" width="16.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="62.17" y="239.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (1 samples, 0.46%)</title><rect x="10.0" y="213" width="5.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:61) (1 samples, 0.46%)</title><rect x="48.2" y="261" width="5.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="51.24" y="271.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:75) (12 samples, 5.56%)</title><rect x="75.6" y="261" width="65.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="78.56" y="271.5" >attempt..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:84) (216 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >attempt10::choose_next_point   (at attempt10.rs:84)</text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (3 samples, 1.39%)</title><rect x="59.2" y="245" width="16.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.17" y="255.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:72) (1 samples, 0.46%)</title><rect x="10.0" y="277" width="5.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="117" width="27.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="111.33" y="127.5" >c..</text>
</g>
<g >
<title>core::ops::index_range::{impl#1   (at :-1) (12 samples, 5.56%)</title><rect x="195.7" y="213" width="65.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="198.74" y="223.5" >core::o..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::{impl#14   (at :-1) (1 samples, 0.46%)</title><rect x="135.6" y="213" width="5.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="138.65" y="223.5" ></text>
</g>
<g >
<title>free   (at :-1) (1 samples, 0.46%)</title><rect x="135.6" y="117" width="5.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="138.65" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:187) (1 samples, 0.46%)</title><rect x="589.1" y="101" width="5.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="592.07" y="111.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:117) (15 samples, 6.94%)</title><rect x="916.9" y="117" width="81.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="919.85" y="127.5" >alloc::al..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:76) (1 samples, 0.46%)</title><rect x="42.8" y="277" width="5.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="45.78" y="287.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:36) (22 samples, 10.19%)</title><rect x="621.9" y="229" width="120.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="624.85" y="239.5" >attempt10::get..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:30) (2 samples, 0.93%)</title><rect x="15.5" y="261" width="10.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="18.46" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (39 samples, 18.06%)</title><rect x="288.6" y="197" width="213.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="291.61" y="207.5" >core::slice::iter::{impl#181..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="149" width="5.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="40.31" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="213" width="27.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="111.33" y="223.5" >a..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:181) (1 samples, 0.46%)</title><rect x="81.0" y="85" width="5.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="84.02" y="95.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points::{closure#1   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="101" width="5.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="40.31" y="111.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:34) (1 samples, 0.46%)</title><rect x="91.9" y="245" width="5.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="94.94" y="255.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (2 samples, 0.93%)</title><rect x="141.1" y="213" width="10.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="144.11" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/raw_vec.rs:130) (6 samples, 2.78%)</title><rect x="561.8" y="117" width="32.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="564.76" y="127.5" >al..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:31) (2 samples, 0.93%)</title><rect x="539.9" y="229" width="10.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="542.91" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (2 samples, 0.93%)</title><rect x="81.0" y="213" width="10.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="84.02" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (at :-1) (24 samples, 11.11%)</title><rect x="785.7" y="165" width="131.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="788.74" y="175.5" >alloc::vec::spec..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="213" width="5.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="40.31" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (9 samples, 4.17%)</title><rect x="556.3" y="197" width="49.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="559.30" y="207.5" >allo..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt10::get_inbetween_points::{closure_env#1   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="165" width="5.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="40.31" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#1   (at :-1) (9 samples, 4.17%)</title><rect x="556.3" y="165" width="49.2" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="559.30" y="175.5" >allo..</text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (at :-1) (15 samples, 6.94%)</title><rect x="916.9" y="213" width="81.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="919.85" y="223.5" >alloc::ve..</text>
</g>
<g >
<title>malloc   (at :-1) (4 samples, 1.85%)</title><rect x="567.2" y="37" width="21.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="570.22" y="47.5" >m..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (at :-1) (5 samples, 2.31%)</title><rect x="108.3" y="181" width="27.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="111.33" y="191.5" >a..</text>
</g>
<g >
<title>alloc::vec::{impl#14   (at :-1) (24 samples, 11.11%)</title><rect x="785.7" y="197" width="131.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="788.74" y="207.5" >alloc::vec::{imp..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:61) (4 samples, 1.85%)</title><rect x="1108.1" y="229" width="21.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1111.06" y="239.5" >a..</text>
</g>
<g >
<title>core::slice::{impl#0   (at :-1) (1 samples, 0.46%)</title><rect x="10.0" y="261" width="5.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:32) (10 samples, 4.63%)</title><rect x="550.8" y="229" width="54.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="553.83" y="239.5" >attem..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/vec/mod.rs:479) (6 samples, 2.78%)</title><rect x="561.8" y="149" width="32.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="564.76" y="159.5" >al..</text>
</g>
<g >
<title>roundf64   (at :-1) (1 samples, 0.46%)</title><rect x="911.4" y="37" width="5.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="914.39" y="47.5" ></text>
</g>
<g >
<title>core::option::Option&lt;usize&gt;::map&lt;usize, (isize, isize), core::array::iter::{impl#2   (at :-1) (5 samples, 2.31%)</title><rect x="261.3" y="213" width="27.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="264.30" y="223.5" >c..</text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (at :-1) (4 samples, 1.85%)</title><rect x="266.8" y="165" width="21.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="269.76" y="175.5" >c..</text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:76) (2 samples, 0.93%)</title><rect x="141.1" y="261" width="10.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="144.11" y="271.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:72) (3 samples, 1.39%)</title><rect x="59.2" y="261" width="16.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="62.17" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (at :-1) (1 samples, 0.46%)</title><rect x="135.6" y="165" width="5.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="138.65" y="175.5" ></text>
</g>
<g >
<title>attempt10::choose_next_point   (at attempt10.rs:91) (1 samples, 0.46%)</title><rect x="1184.5" y="261" width="5.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1187.54" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt10::get_inbetween_points::{closure_env#1   (at :-1) (1 samples, 0.46%)</title><rect x="37.3" y="245" width="5.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="40.31" y="255.5" ></text>
</g>
<g >
<title>fmodf64   (at :-1) (12 samples, 5.56%)</title><rect x="845.8" y="37" width="65.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="848.83" y="47.5" >fmodf64..</text>
</g>
<g >
<title>alloc::alloc::{impl#1   (at :-1) (1 samples, 0.46%)</title><rect x="135.6" y="149" width="5.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="138.65" y="159.5" ></text>
</g>
<g >
<title>std::f64::{impl#0   (at :-1) (1 samples, 0.46%)</title><rect x="911.4" y="53" width="5.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="914.39" y="63.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (at :-1) (9 samples, 4.17%)</title><rect x="998.8" y="197" width="49.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1001.80" y="207.5" >core..</text>
</g>
<g >
<title>attempt10::get_inbetween_points   (at attempt10.rs:48) (28 samples, 12.96%)</title><rect x="763.9" y="229" width="153.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="766.89" y="239.5" >attempt10::get_inbe..</text>
</g>
<g >
<title>alloc::alloc::alloc   (at /rustc/82e1608dfa6e0b5569232559e3d385fea5a93112/library/alloc/src/alloc.rs:98) (1 samples, 0.46%)</title><rect x="802.1" y="53" width="5.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="805.13" y="63.5" ></text>
</g>
</g>
</svg>
