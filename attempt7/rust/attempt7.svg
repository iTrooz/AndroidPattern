<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="1528"><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="0.0654%" y="757" width="0.0654%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.3154%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="0.1309%" y="757" width="0.0654%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.3809%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="0.1309%" y="741" width="0.0654%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.3809%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="0.1309%" y="725" width="0.0654%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.3809%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="0.1309%" y="709" width="0.0654%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3809%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="0.1309%" y="693" width="0.0654%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3809%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="0.1309%" y="677" width="0.0654%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3809%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="0.1309%" y="661" width="0.0654%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3809%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.26%)</title><rect x="0.0000%" y="789" width="0.2618%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.20%)</title><rect x="0.0654%" y="773" width="0.1963%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="3"/><text x="0.3154%" y="783.50"></text></g><g><title>core::cmp::max (1 samples, 0.07%)</title><rect x="0.1963%" y="757" width="0.0654%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.4463%" y="767.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="0.1963%" y="741" width="0.0654%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.4463%" y="751.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.07%)</title><rect x="0.1963%" y="725" width="0.0654%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.4463%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.3272%" y="677" width="0.0654%" height="15" fill="rgb(206,188,39)" fg:x="5" fg:w="1"/><text x="0.5772%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="0.3272%" y="661" width="0.0654%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.5772%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="0.3272%" y="709" width="0.1963%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="3"/><text x="0.5772%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="0.3272%" y="693" width="0.1963%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="3"/><text x="0.5772%" y="703.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.13%)</title><rect x="0.3927%" y="677" width="0.1309%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="2"/><text x="0.6427%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.07%)</title><rect x="0.4581%" y="661" width="0.0654%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.7081%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="0.5236%" y="709" width="0.0654%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="0.7736%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="0.5236%" y="693" width="0.0654%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="0.7736%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.07%)</title><rect x="0.5236%" y="677" width="0.0654%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="0.7736%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.33%)</title><rect x="0.3272%" y="741" width="0.3272%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="5"/><text x="0.5772%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.33%)</title><rect x="0.3272%" y="725" width="0.3272%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="5"/><text x="0.5772%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.07%)</title><rect x="0.5890%" y="709" width="0.0654%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="1"/><text x="0.8390%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="0.6545%" y="741" width="0.1309%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="2"/><text x="0.9045%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 0.13%)</title><rect x="0.6545%" y="725" width="0.1309%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="2"/><text x="0.9045%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="0.6545%" y="709" width="0.1309%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="2"/><text x="0.9045%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (2 samples, 0.13%)</title><rect x="0.6545%" y="693" width="0.1309%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="2"/><text x="0.9045%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.13%)</title><rect x="0.6545%" y="677" width="0.1309%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="2"/><text x="0.9045%" y="687.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (2 samples, 0.13%)</title><rect x="0.6545%" y="661" width="0.1309%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="2"/><text x="0.9045%" y="671.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (1 samples, 0.07%)</title><rect x="0.7199%" y="645" width="0.0654%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="1"/><text x="0.9699%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.65%)</title><rect x="0.2618%" y="773" width="0.6545%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="10"/><text x="0.5118%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.59%)</title><rect x="0.3272%" y="757" width="0.5890%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="9"/><text x="0.5772%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="0.7853%" y="741" width="0.1309%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="2"/><text x="1.0353%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="0.7853%" y="725" width="0.1309%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="2"/><text x="1.0353%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="0.7853%" y="709" width="0.1309%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="2"/><text x="1.0353%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="0.7853%" y="693" width="0.1309%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="2"/><text x="1.0353%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.13%)</title><rect x="0.7853%" y="677" width="0.1309%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="2"/><text x="1.0353%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="0.7853%" y="661" width="0.1309%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="2"/><text x="1.0353%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="0.7853%" y="645" width="0.1309%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="2"/><text x="1.0353%" y="655.50"></text></g><g><title>[libc.so.6] (46 samples, 3.01%)</title><rect x="0.9162%" y="773" width="3.0105%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="46"/><text x="1.1662%" y="783.50">[li..</text></g><g><title>fmod (1 samples, 0.07%)</title><rect x="3.8613%" y="757" width="0.0654%" height="15" fill="rgb(235,93,37)" fg:x="59" fg:w="1"/><text x="4.1113%" y="767.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="3.9267%" y="773" width="0.0654%" height="15" fill="rgb(213,116,39)" fg:x="60" fg:w="1"/><text x="4.1767%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="3.9267%" y="757" width="0.0654%" height="15" fill="rgb(222,207,29)" fg:x="60" fg:w="1"/><text x="4.1767%" y="767.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="3.9921%" y="773" width="0.0654%" height="15" fill="rgb(206,96,30)" fg:x="61" fg:w="1"/><text x="4.2421%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="3.9921%" y="757" width="0.0654%" height="15" fill="rgb(218,138,4)" fg:x="61" fg:w="1"/><text x="4.2421%" y="767.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="4.0576%" y="773" width="0.0654%" height="15" fill="rgb(250,191,14)" fg:x="62" fg:w="1"/><text x="4.3076%" y="783.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="4.1230%" y="773" width="0.0654%" height="15" fill="rgb(239,60,40)" fg:x="63" fg:w="1"/><text x="4.3730%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="4.1885%" y="773" width="0.0654%" height="15" fill="rgb(206,27,48)" fg:x="64" fg:w="1"/><text x="4.4385%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="4.1885%" y="757" width="0.0654%" height="15" fill="rgb(225,35,8)" fg:x="64" fg:w="1"/><text x="4.4385%" y="767.50"></text></g><g><title>core::cmp::max (1 samples, 0.07%)</title><rect x="4.1885%" y="741" width="0.0654%" height="15" fill="rgb(250,213,24)" fg:x="64" fg:w="1"/><text x="4.4385%" y="751.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="4.1885%" y="725" width="0.0654%" height="15" fill="rgb(247,123,22)" fg:x="64" fg:w="1"/><text x="4.4385%" y="735.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.07%)</title><rect x="4.1885%" y="709" width="0.0654%" height="15" fill="rgb(231,138,38)" fg:x="64" fg:w="1"/><text x="4.4385%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.13%)</title><rect x="4.2539%" y="773" width="0.1309%" height="15" fill="rgb(231,145,46)" fg:x="65" fg:w="2"/><text x="4.5039%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="4.3194%" y="757" width="0.0654%" height="15" fill="rgb(251,118,11)" fg:x="66" fg:w="1"/><text x="4.5694%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="4.3194%" y="741" width="0.0654%" height="15" fill="rgb(217,147,25)" fg:x="66" fg:w="1"/><text x="4.5694%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.65%)</title><rect x="4.3848%" y="773" width="0.6545%" height="15" fill="rgb(247,81,37)" fg:x="67" fg:w="10"/><text x="4.6348%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.52%)</title><rect x="4.5157%" y="757" width="0.5236%" height="15" fill="rgb(209,12,38)" fg:x="69" fg:w="8"/><text x="4.7657%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.52%)</title><rect x="4.5157%" y="741" width="0.5236%" height="15" fill="rgb(227,1,9)" fg:x="69" fg:w="8"/><text x="4.7657%" y="751.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.52%)</title><rect x="4.5157%" y="725" width="0.5236%" height="15" fill="rgb(248,47,43)" fg:x="69" fg:w="8"/><text x="4.7657%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="5.5628%" y="693" width="0.3927%" height="15" fill="rgb(221,10,30)" fg:x="85" fg:w="6"/><text x="5.8128%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="5.5628%" y="677" width="0.3927%" height="15" fill="rgb(210,229,1)" fg:x="85" fg:w="6"/><text x="5.8128%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.39%)</title><rect x="5.5628%" y="661" width="0.3927%" height="15" fill="rgb(222,148,37)" fg:x="85" fg:w="6"/><text x="5.8128%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.39%)</title><rect x="5.5628%" y="645" width="0.3927%" height="15" fill="rgb(234,67,33)" fg:x="85" fg:w="6"/><text x="5.8128%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.39%)</title><rect x="5.5628%" y="629" width="0.3927%" height="15" fill="rgb(247,98,35)" fg:x="85" fg:w="6"/><text x="5.8128%" y="639.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.39%)</title><rect x="5.5628%" y="613" width="0.3927%" height="15" fill="rgb(247,138,52)" fg:x="85" fg:w="6"/><text x="5.8128%" y="623.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="5.8901%" y="597" width="0.0654%" height="15" fill="rgb(213,79,30)" fg:x="90" fg:w="1"/><text x="6.1401%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.65%)</title><rect x="5.5628%" y="757" width="0.6545%" height="15" fill="rgb(246,177,23)" fg:x="85" fg:w="10"/><text x="5.8128%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.65%)</title><rect x="5.5628%" y="741" width="0.6545%" height="15" fill="rgb(230,62,27)" fg:x="85" fg:w="10"/><text x="5.8128%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.65%)</title><rect x="5.5628%" y="725" width="0.6545%" height="15" fill="rgb(216,154,8)" fg:x="85" fg:w="10"/><text x="5.8128%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.65%)</title><rect x="5.5628%" y="709" width="0.6545%" height="15" fill="rgb(244,35,45)" fg:x="85" fg:w="10"/><text x="5.8128%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.26%)</title><rect x="5.9555%" y="693" width="0.2618%" height="15" fill="rgb(251,115,12)" fg:x="91" fg:w="4"/><text x="6.2055%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.26%)</title><rect x="5.9555%" y="677" width="0.2618%" height="15" fill="rgb(240,54,50)" fg:x="91" fg:w="4"/><text x="6.2055%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.46%)</title><rect x="6.2173%" y="757" width="0.4581%" height="15" fill="rgb(233,84,52)" fg:x="95" fg:w="7"/><text x="6.4673%" y="767.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="6.6099%" y="741" width="0.0654%" height="15" fill="rgb(207,117,47)" fg:x="101" fg:w="1"/><text x="6.8599%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="6.6754%" y="757" width="0.0654%" height="15" fill="rgb(249,43,39)" fg:x="102" fg:w="1"/><text x="6.9254%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.07%)</title><rect x="6.6754%" y="741" width="0.0654%" height="15" fill="rgb(209,38,44)" fg:x="102" fg:w="1"/><text x="6.9254%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="6.6754%" y="725" width="0.0654%" height="15" fill="rgb(236,212,23)" fg:x="102" fg:w="1"/><text x="6.9254%" y="735.50"></text></g><g><title>attempt7::gen_all_points (1 samples, 0.07%)</title><rect x="6.7408%" y="757" width="0.0654%" height="15" fill="rgb(242,79,21)" fg:x="103" fg:w="1"/><text x="6.9908%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flat_map (1 samples, 0.07%)</title><rect x="6.7408%" y="741" width="0.0654%" height="15" fill="rgb(211,96,35)" fg:x="103" fg:w="1"/><text x="6.9908%" y="751.50"></text></g><g><title>core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt;::new (1 samples, 0.07%)</title><rect x="6.7408%" y="725" width="0.0654%" height="15" fill="rgb(253,215,40)" fg:x="103" fg:w="1"/><text x="6.9908%" y="735.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.07%)</title><rect x="7.1335%" y="741" width="0.0654%" height="15" fill="rgb(211,81,21)" fg:x="109" fg:w="1"/><text x="7.3835%" y="751.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.07%)</title><rect x="7.1335%" y="725" width="0.0654%" height="15" fill="rgb(208,190,38)" fg:x="109" fg:w="1"/><text x="7.3835%" y="735.50"></text></g><g><title>attempt7::get_inbetween_points (7 samples, 0.46%)</title><rect x="6.8063%" y="757" width="0.4581%" height="15" fill="rgb(235,213,38)" fg:x="104" fg:w="7"/><text x="7.0563%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="7.1990%" y="741" width="0.0654%" height="15" fill="rgb(237,122,38)" fg:x="110" fg:w="1"/><text x="7.4490%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="7.1990%" y="725" width="0.0654%" height="15" fill="rgb(244,218,35)" fg:x="110" fg:w="1"/><text x="7.4490%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="7.1990%" y="709" width="0.0654%" height="15" fill="rgb(240,68,47)" fg:x="110" fg:w="1"/><text x="7.4490%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="7.1990%" y="693" width="0.0654%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="1"/><text x="7.4490%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="7.1990%" y="677" width="0.0654%" height="15" fill="rgb(235,124,12)" fg:x="110" fg:w="1"/><text x="7.4490%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.07%)</title><rect x="7.1990%" y="661" width="0.0654%" height="15" fill="rgb(224,169,11)" fg:x="110" fg:w="1"/><text x="7.4490%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="7.1990%" y="645" width="0.0654%" height="15" fill="rgb(250,166,2)" fg:x="110" fg:w="1"/><text x="7.4490%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="7.1990%" y="629" width="0.0654%" height="15" fill="rgb(242,216,29)" fg:x="110" fg:w="1"/><text x="7.4490%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="7.1990%" y="613" width="0.0654%" height="15" fill="rgb(230,116,27)" fg:x="110" fg:w="1"/><text x="7.4490%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="7.1990%" y="597" width="0.0654%" height="15" fill="rgb(228,99,48)" fg:x="110" fg:w="1"/><text x="7.4490%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="7.1990%" y="581" width="0.0654%" height="15" fill="rgb(253,11,6)" fg:x="110" fg:w="1"/><text x="7.4490%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize,isize)&gt;&gt; (5 samples, 0.33%)</title><rect x="7.2644%" y="757" width="0.3272%" height="15" fill="rgb(247,143,39)" fg:x="111" fg:w="5"/><text x="7.5144%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (5 samples, 0.33%)</title><rect x="7.2644%" y="741" width="0.3272%" height="15" fill="rgb(236,97,10)" fg:x="111" fg:w="5"/><text x="7.5144%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.33%)</title><rect x="7.2644%" y="725" width="0.3272%" height="15" fill="rgb(233,208,19)" fg:x="111" fg:w="5"/><text x="7.5144%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.26%)</title><rect x="7.3298%" y="709" width="0.2618%" height="15" fill="rgb(216,164,2)" fg:x="112" fg:w="4"/><text x="7.5798%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.26%)</title><rect x="7.3298%" y="693" width="0.2618%" height="15" fill="rgb(220,129,5)" fg:x="112" fg:w="4"/><text x="7.5798%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize,isize)&gt;&gt; (1 samples, 0.07%)</title><rect x="7.5916%" y="757" width="0.0654%" height="15" fill="rgb(242,17,10)" fg:x="116" fg:w="1"/><text x="7.8416%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="7.5916%" y="741" width="0.0654%" height="15" fill="rgb(242,107,0)" fg:x="116" fg:w="1"/><text x="7.8416%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(isize,isize),alloc::alloc::Global&gt;&gt; (1 samples, 0.07%)</title><rect x="7.5916%" y="725" width="0.0654%" height="15" fill="rgb(251,28,31)" fg:x="116" fg:w="1"/><text x="7.8416%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="7.5916%" y="709" width="0.0654%" height="15" fill="rgb(233,223,10)" fg:x="116" fg:w="1"/><text x="7.8416%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (1 samples, 0.07%)</title><rect x="7.5916%" y="693" width="0.0654%" height="15" fill="rgb(215,21,27)" fg:x="116" fg:w="1"/><text x="7.8416%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="7.5916%" y="677" width="0.0654%" height="15" fill="rgb(232,23,21)" fg:x="116" fg:w="1"/><text x="7.8416%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="7.5916%" y="661" width="0.0654%" height="15" fill="rgb(244,5,23)" fg:x="116" fg:w="1"/><text x="7.8416%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="7.5916%" y="645" width="0.0654%" height="15" fill="rgb(226,81,46)" fg:x="116" fg:w="1"/><text x="7.8416%" y="655.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (3 samples, 0.20%)</title><rect x="8.6387%" y="709" width="0.1963%" height="15" fill="rgb(247,70,30)" fg:x="132" fg:w="3"/><text x="8.8887%" y="719.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (3 samples, 0.20%)</title><rect x="8.6387%" y="693" width="0.1963%" height="15" fill="rgb(212,68,19)" fg:x="132" fg:w="3"/><text x="8.8887%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for isize&gt;::eq (3 samples, 0.20%)</title><rect x="8.6387%" y="677" width="0.1963%" height="15" fill="rgb(240,187,13)" fg:x="132" fg:w="3"/><text x="8.8887%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.20%)</title><rect x="9.0969%" y="693" width="0.1963%" height="15" fill="rgb(223,113,26)" fg:x="139" fg:w="3"/><text x="9.3469%" y="703.50"></text></g><g><title>attempt7::choose_next_point (67 samples, 4.38%)</title><rect x="5.0393%" y="773" width="4.3848%" height="15" fill="rgb(206,192,2)" fg:x="77" fg:w="67"/><text x="5.2893%" y="783.50">attem..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (27 samples, 1.77%)</title><rect x="7.6571%" y="757" width="1.7670%" height="15" fill="rgb(241,108,4)" fg:x="117" fg:w="27"/><text x="7.9071%" y="767.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (27 samples, 1.77%)</title><rect x="7.6571%" y="741" width="1.7670%" height="15" fill="rgb(247,173,49)" fg:x="117" fg:w="27"/><text x="7.9071%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (27 samples, 1.77%)</title><rect x="7.6571%" y="725" width="1.7670%" height="15" fill="rgb(224,114,35)" fg:x="117" fg:w="27"/><text x="7.9071%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.59%)</title><rect x="8.8351%" y="709" width="0.5890%" height="15" fill="rgb(245,159,27)" fg:x="135" fg:w="9"/><text x="9.0851%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.13%)</title><rect x="9.2932%" y="693" width="0.1309%" height="15" fill="rgb(245,172,44)" fg:x="142" fg:w="2"/><text x="9.5432%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.13%)</title><rect x="9.2932%" y="677" width="0.1309%" height="15" fill="rgb(236,23,11)" fg:x="142" fg:w="2"/><text x="9.5432%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.13%)</title><rect x="9.2932%" y="661" width="0.1309%" height="15" fill="rgb(205,117,38)" fg:x="142" fg:w="2"/><text x="9.5432%" y="671.50"></text></g><g><title>cfree (2 samples, 0.13%)</title><rect x="9.4241%" y="773" width="0.1309%" height="15" fill="rgb(237,72,25)" fg:x="144" fg:w="2"/><text x="9.6741%" y="783.50"></text></g><g><title>fmod (3 samples, 0.20%)</title><rect x="9.5550%" y="773" width="0.1963%" height="15" fill="rgb(244,70,9)" fg:x="146" fg:w="3"/><text x="9.8050%" y="783.50"></text></g><g><title>malloc (4 samples, 0.26%)</title><rect x="9.7513%" y="773" width="0.2618%" height="15" fill="rgb(217,125,39)" fg:x="149" fg:w="4"/><text x="10.0013%" y="783.50"></text></g><g><title>[[stack]] (155 samples, 10.14%)</title><rect x="0.2618%" y="789" width="10.1440%" height="15" fill="rgb(235,36,10)" fg:x="4" fg:w="155"/><text x="0.5118%" y="799.50">[[stack]]</text></g><g><title>realloc (6 samples, 0.39%)</title><rect x="10.0131%" y="773" width="0.3927%" height="15" fill="rgb(251,123,47)" fg:x="153" fg:w="6"/><text x="10.2631%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="10.6675%" y="677" width="0.0654%" height="15" fill="rgb(221,13,13)" fg:x="163" fg:w="1"/><text x="10.9175%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="10.6675%" y="661" width="0.0654%" height="15" fill="rgb(238,131,9)" fg:x="163" fg:w="1"/><text x="10.9175%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="10.7330%" y="629" width="0.0654%" height="15" fill="rgb(211,50,8)" fg:x="164" fg:w="1"/><text x="10.9830%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="10.7330%" y="613" width="0.0654%" height="15" fill="rgb(245,182,24)" fg:x="164" fg:w="1"/><text x="10.9830%" y="623.50"></text></g><g><title>&lt;isize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.07%)</title><rect x="10.7330%" y="597" width="0.0654%" height="15" fill="rgb(242,14,37)" fg:x="164" fg:w="1"/><text x="10.9830%" y="607.50"></text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_add (1 samples, 0.07%)</title><rect x="10.7330%" y="581" width="0.0654%" height="15" fill="rgb(246,228,12)" fg:x="164" fg:w="1"/><text x="10.9830%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="10.6021%" y="709" width="0.2618%" height="15" fill="rgb(213,55,15)" fg:x="162" fg:w="4"/><text x="10.8521%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="10.6021%" y="693" width="0.2618%" height="15" fill="rgb(209,9,3)" fg:x="162" fg:w="4"/><text x="10.8521%" y="703.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.13%)</title><rect x="10.7330%" y="677" width="0.1309%" height="15" fill="rgb(230,59,30)" fg:x="164" fg:w="2"/><text x="10.9830%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.13%)</title><rect x="10.7330%" y="661" width="0.1309%" height="15" fill="rgb(209,121,21)" fg:x="164" fg:w="2"/><text x="10.9830%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="10.7330%" y="645" width="0.1309%" height="15" fill="rgb(220,109,13)" fg:x="164" fg:w="2"/><text x="10.9830%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="10.7984%" y="629" width="0.0654%" height="15" fill="rgb(232,18,1)" fg:x="165" fg:w="1"/><text x="11.0484%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="10.7984%" y="613" width="0.0654%" height="15" fill="rgb(215,41,42)" fg:x="165" fg:w="1"/><text x="11.0484%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="10.8639%" y="709" width="0.0654%" height="15" fill="rgb(224,123,36)" fg:x="166" fg:w="1"/><text x="11.1139%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="10.8639%" y="693" width="0.0654%" height="15" fill="rgb(240,125,3)" fg:x="166" fg:w="1"/><text x="11.1139%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.07%)</title><rect x="10.8639%" y="677" width="0.0654%" height="15" fill="rgb(205,98,50)" fg:x="166" fg:w="1"/><text x="11.1139%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.59%)</title><rect x="10.4712%" y="741" width="0.5890%" height="15" fill="rgb(205,185,37)" fg:x="160" fg:w="9"/><text x="10.7212%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.59%)</title><rect x="10.4712%" y="725" width="0.5890%" height="15" fill="rgb(238,207,15)" fg:x="160" fg:w="9"/><text x="10.7212%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.13%)</title><rect x="10.9293%" y="709" width="0.1309%" height="15" fill="rgb(213,199,42)" fg:x="167" fg:w="2"/><text x="11.1793%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.13%)</title><rect x="10.9293%" y="693" width="0.1309%" height="15" fill="rgb(235,201,11)" fg:x="167" fg:w="2"/><text x="11.1793%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="11.0602%" y="741" width="0.1963%" height="15" fill="rgb(207,46,11)" fg:x="169" fg:w="3"/><text x="11.3102%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3 samples, 0.20%)</title><rect x="11.0602%" y="725" width="0.1963%" height="15" fill="rgb(241,35,35)" fg:x="169" fg:w="3"/><text x="11.3102%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.20%)</title><rect x="11.0602%" y="709" width="0.1963%" height="15" fill="rgb(243,32,47)" fg:x="169" fg:w="3"/><text x="11.3102%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (3 samples, 0.20%)</title><rect x="11.0602%" y="693" width="0.1963%" height="15" fill="rgb(247,202,23)" fg:x="169" fg:w="3"/><text x="11.3102%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.20%)</title><rect x="11.0602%" y="677" width="0.1963%" height="15" fill="rgb(219,102,11)" fg:x="169" fg:w="3"/><text x="11.3102%" y="687.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (3 samples, 0.20%)</title><rect x="11.0602%" y="661" width="0.1963%" height="15" fill="rgb(243,110,44)" fg:x="169" fg:w="3"/><text x="11.3102%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="11.2565%" y="741" width="0.0654%" height="15" fill="rgb(222,74,54)" fg:x="172" fg:w="1"/><text x="11.5065%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.05%)</title><rect x="10.4058%" y="773" width="1.0471%" height="15" fill="rgb(216,99,12)" fg:x="159" fg:w="16"/><text x="10.6558%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 1.05%)</title><rect x="10.4058%" y="757" width="1.0471%" height="15" fill="rgb(226,22,26)" fg:x="159" fg:w="16"/><text x="10.6558%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="11.3220%" y="741" width="0.1309%" height="15" fill="rgb(217,163,10)" fg:x="173" fg:w="2"/><text x="11.5720%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="11.3220%" y="725" width="0.1309%" height="15" fill="rgb(213,25,53)" fg:x="173" fg:w="2"/><text x="11.5720%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="11.3220%" y="709" width="0.1309%" height="15" fill="rgb(252,105,26)" fg:x="173" fg:w="2"/><text x="11.5720%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="11.3220%" y="693" width="0.1309%" height="15" fill="rgb(220,39,43)" fg:x="173" fg:w="2"/><text x="11.5720%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.13%)</title><rect x="11.3220%" y="677" width="0.1309%" height="15" fill="rgb(229,68,48)" fg:x="173" fg:w="2"/><text x="11.5720%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="11.3220%" y="661" width="0.1309%" height="15" fill="rgb(252,8,32)" fg:x="173" fg:w="2"/><text x="11.5720%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="11.3220%" y="645" width="0.1309%" height="15" fill="rgb(223,20,43)" fg:x="173" fg:w="2"/><text x="11.5720%" y="655.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.13%)</title><rect x="11.3220%" y="629" width="0.1309%" height="15" fill="rgb(229,81,49)" fg:x="173" fg:w="2"/><text x="11.5720%" y="639.50"></text></g><g><title>[libc.so.6] (164 samples, 10.73%)</title><rect x="11.4529%" y="773" width="10.7330%" height="15" fill="rgb(236,28,36)" fg:x="175" fg:w="164"/><text x="11.7029%" y="783.50">[libc.so.6]</text></g><g><title>__rdl_realloc (2 samples, 0.13%)</title><rect x="22.1859%" y="773" width="0.1309%" height="15" fill="rgb(249,185,26)" fg:x="339" fg:w="2"/><text x="22.4359%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.13%)</title><rect x="22.1859%" y="757" width="0.1309%" height="15" fill="rgb(249,174,33)" fg:x="339" fg:w="2"/><text x="22.4359%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.07%)</title><rect x="22.3168%" y="741" width="0.0654%" height="15" fill="rgb(233,201,37)" fg:x="341" fg:w="1"/><text x="22.5668%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.20%)</title><rect x="22.3168%" y="773" width="0.1963%" height="15" fill="rgb(221,78,26)" fg:x="341" fg:w="3"/><text x="22.5668%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.20%)</title><rect x="22.3168%" y="757" width="0.1963%" height="15" fill="rgb(250,127,30)" fg:x="341" fg:w="3"/><text x="22.5668%" y="767.50"></text></g><g><title>core::cmp::max (2 samples, 0.13%)</title><rect x="22.3822%" y="741" width="0.1309%" height="15" fill="rgb(230,49,44)" fg:x="342" fg:w="2"/><text x="22.6322%" y="751.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.13%)</title><rect x="22.3822%" y="725" width="0.1309%" height="15" fill="rgb(229,67,23)" fg:x="342" fg:w="2"/><text x="22.6322%" y="735.50"></text></g><g><title>core::cmp::max_by (2 samples, 0.13%)</title><rect x="22.3822%" y="709" width="0.1309%" height="15" fill="rgb(249,83,47)" fg:x="342" fg:w="2"/><text x="22.6322%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.13%)</title><rect x="22.6440%" y="741" width="0.1309%" height="15" fill="rgb(215,43,3)" fg:x="346" fg:w="2"/><text x="22.8940%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="22.7749%" y="741" width="0.0654%" height="15" fill="rgb(238,154,13)" fg:x="348" fg:w="1"/><text x="23.0249%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="22.8403%" y="741" width="0.0654%" height="15" fill="rgb(219,56,2)" fg:x="349" fg:w="1"/><text x="23.0903%" y="751.50"></text></g><g><title>core::cmp::max (3 samples, 0.20%)</title><rect x="22.9058%" y="741" width="0.1963%" height="15" fill="rgb(233,0,4)" fg:x="350" fg:w="3"/><text x="23.1558%" y="751.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.20%)</title><rect x="22.9058%" y="725" width="0.1963%" height="15" fill="rgb(235,30,7)" fg:x="350" fg:w="3"/><text x="23.1558%" y="735.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.20%)</title><rect x="22.9058%" y="709" width="0.1963%" height="15" fill="rgb(250,79,13)" fg:x="350" fg:w="3"/><text x="23.1558%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (11 samples, 0.72%)</title><rect x="22.5131%" y="773" width="0.7199%" height="15" fill="rgb(211,146,34)" fg:x="344" fg:w="11"/><text x="22.7631%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.59%)</title><rect x="22.6440%" y="757" width="0.5890%" height="15" fill="rgb(228,22,38)" fg:x="346" fg:w="9"/><text x="22.8940%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.13%)</title><rect x="23.1021%" y="741" width="0.1309%" height="15" fill="rgb(235,168,5)" fg:x="353" fg:w="2"/><text x="23.3521%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.13%)</title><rect x="23.1021%" y="725" width="0.1309%" height="15" fill="rgb(221,155,16)" fg:x="353" fg:w="2"/><text x="23.3521%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="23.2984%" y="757" width="0.0654%" height="15" fill="rgb(215,215,53)" fg:x="356" fg:w="1"/><text x="23.5484%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="23.2984%" y="741" width="0.0654%" height="15" fill="rgb(223,4,10)" fg:x="356" fg:w="1"/><text x="23.5484%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="23.2984%" y="725" width="0.0654%" height="15" fill="rgb(234,103,6)" fg:x="356" fg:w="1"/><text x="23.5484%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.20%)</title><rect x="23.2330%" y="773" width="0.1963%" height="15" fill="rgb(227,97,0)" fg:x="355" fg:w="3"/><text x="23.4830%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.07%)</title><rect x="23.3639%" y="757" width="0.0654%" height="15" fill="rgb(234,150,53)" fg:x="357" fg:w="1"/><text x="23.6139%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.13%)</title><rect x="23.8220%" y="757" width="0.1309%" height="15" fill="rgb(228,201,54)" fg:x="364" fg:w="2"/><text x="24.0720%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.13%)</title><rect x="23.8220%" y="741" width="0.1309%" height="15" fill="rgb(222,22,37)" fg:x="364" fg:w="2"/><text x="24.0720%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="23.8220%" y="725" width="0.1309%" height="15" fill="rgb(237,53,32)" fg:x="364" fg:w="2"/><text x="24.0720%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.13%)</title><rect x="23.8220%" y="709" width="0.1309%" height="15" fill="rgb(233,25,53)" fg:x="364" fg:w="2"/><text x="24.0720%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="23.8220%" y="693" width="0.1309%" height="15" fill="rgb(210,40,34)" fg:x="364" fg:w="2"/><text x="24.0720%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="23.8220%" y="677" width="0.1309%" height="15" fill="rgb(241,220,44)" fg:x="364" fg:w="2"/><text x="24.0720%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="23.8220%" y="661" width="0.1309%" height="15" fill="rgb(235,28,35)" fg:x="364" fg:w="2"/><text x="24.0720%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.13%)</title><rect x="23.8220%" y="645" width="0.1309%" height="15" fill="rgb(210,56,17)" fg:x="364" fg:w="2"/><text x="24.0720%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.13%)</title><rect x="23.8220%" y="629" width="0.1309%" height="15" fill="rgb(224,130,29)" fg:x="364" fg:w="2"/><text x="24.0720%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.13%)</title><rect x="23.8220%" y="613" width="0.1309%" height="15" fill="rgb(235,212,8)" fg:x="364" fg:w="2"/><text x="24.0720%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="23.9529%" y="757" width="0.0654%" height="15" fill="rgb(223,33,50)" fg:x="366" fg:w="1"/><text x="24.2029%" y="767.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="23.9529%" y="741" width="0.0654%" height="15" fill="rgb(219,149,13)" fg:x="366" fg:w="1"/><text x="24.2029%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="24.0183%" y="757" width="0.1309%" height="15" fill="rgb(250,156,29)" fg:x="367" fg:w="2"/><text x="24.2683%" y="767.50"></text></g><g><title>attempt7::get_inbetween_points (1 samples, 0.07%)</title><rect x="24.1492%" y="757" width="0.0654%" height="15" fill="rgb(216,193,19)" fg:x="369" fg:w="1"/><text x="24.3992%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize,isize)&gt;&gt; (10 samples, 0.65%)</title><rect x="24.2147%" y="757" width="0.6545%" height="15" fill="rgb(216,135,14)" fg:x="370" fg:w="10"/><text x="24.4647%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (10 samples, 0.65%)</title><rect x="24.2147%" y="741" width="0.6545%" height="15" fill="rgb(241,47,5)" fg:x="370" fg:w="10"/><text x="24.4647%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.65%)</title><rect x="24.2147%" y="725" width="0.6545%" height="15" fill="rgb(233,42,35)" fg:x="370" fg:w="10"/><text x="24.4647%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.46%)</title><rect x="24.4110%" y="709" width="0.4581%" height="15" fill="rgb(231,13,6)" fg:x="373" fg:w="7"/><text x="24.6610%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.46%)</title><rect x="24.4110%" y="693" width="0.4581%" height="15" fill="rgb(207,181,40)" fg:x="373" fg:w="7"/><text x="24.6610%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.13%)</title><rect x="24.8691%" y="661" width="0.1309%" height="15" fill="rgb(254,173,49)" fg:x="380" fg:w="2"/><text x="25.1191%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.13%)</title><rect x="24.8691%" y="645" width="0.1309%" height="15" fill="rgb(221,1,38)" fg:x="380" fg:w="2"/><text x="25.1191%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize,isize)&gt;&gt; (3 samples, 0.20%)</title><rect x="24.8691%" y="757" width="0.1963%" height="15" fill="rgb(206,124,46)" fg:x="380" fg:w="3"/><text x="25.1191%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="24.8691%" y="741" width="0.1963%" height="15" fill="rgb(249,21,11)" fg:x="380" fg:w="3"/><text x="25.1191%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(isize,isize),alloc::alloc::Global&gt;&gt; (3 samples, 0.20%)</title><rect x="24.8691%" y="725" width="0.1963%" height="15" fill="rgb(222,201,40)" fg:x="380" fg:w="3"/><text x="25.1191%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="24.8691%" y="709" width="0.1963%" height="15" fill="rgb(235,61,29)" fg:x="380" fg:w="3"/><text x="25.1191%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (3 samples, 0.20%)</title><rect x="24.8691%" y="693" width="0.1963%" height="15" fill="rgb(219,207,3)" fg:x="380" fg:w="3"/><text x="25.1191%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="24.8691%" y="677" width="0.1963%" height="15" fill="rgb(222,56,46)" fg:x="380" fg:w="3"/><text x="25.1191%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="25.0000%" y="661" width="0.0654%" height="15" fill="rgb(239,76,54)" fg:x="382" fg:w="1"/><text x="25.2500%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (4 samples, 0.26%)</title><rect x="25.4581%" y="709" width="0.2618%" height="15" fill="rgb(231,124,27)" fg:x="389" fg:w="4"/><text x="25.7081%" y="719.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (4 samples, 0.26%)</title><rect x="25.4581%" y="693" width="0.2618%" height="15" fill="rgb(249,195,6)" fg:x="389" fg:w="4"/><text x="25.7081%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for isize&gt;::eq (4 samples, 0.26%)</title><rect x="25.4581%" y="677" width="0.2618%" height="15" fill="rgb(237,174,47)" fg:x="389" fg:w="4"/><text x="25.7081%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="25.7199%" y="693" width="0.1309%" height="15" fill="rgb(206,201,31)" fg:x="393" fg:w="2"/><text x="25.9699%" y="703.50"></text></g><g><title>attempt7::choose_next_point (38 samples, 2.49%)</title><rect x="23.4293%" y="773" width="2.4869%" height="15" fill="rgb(231,57,52)" fg:x="358" fg:w="38"/><text x="23.6793%" y="783.50">at..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (13 samples, 0.85%)</title><rect x="25.0654%" y="757" width="0.8508%" height="15" fill="rgb(248,177,22)" fg:x="383" fg:w="13"/><text x="25.3154%" y="767.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (13 samples, 0.85%)</title><rect x="25.0654%" y="741" width="0.8508%" height="15" fill="rgb(215,211,37)" fg:x="383" fg:w="13"/><text x="25.3154%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (13 samples, 0.85%)</title><rect x="25.0654%" y="725" width="0.8508%" height="15" fill="rgb(241,128,51)" fg:x="383" fg:w="13"/><text x="25.3154%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="25.7199%" y="709" width="0.1963%" height="15" fill="rgb(227,165,31)" fg:x="393" fg:w="3"/><text x="25.9699%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.07%)</title><rect x="25.8508%" y="693" width="0.0654%" height="15" fill="rgb(228,167,24)" fg:x="395" fg:w="1"/><text x="26.1008%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.07%)</title><rect x="25.8508%" y="677" width="0.0654%" height="15" fill="rgb(228,143,12)" fg:x="395" fg:w="1"/><text x="26.1008%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="25.8508%" y="661" width="0.0654%" height="15" fill="rgb(249,149,8)" fg:x="395" fg:w="1"/><text x="26.1008%" y="671.50"></text></g><g><title>cfree (8 samples, 0.52%)</title><rect x="25.9162%" y="773" width="0.5236%" height="15" fill="rgb(243,35,44)" fg:x="396" fg:w="8"/><text x="26.1662%" y="783.50"></text></g><g><title>fmod (9 samples, 0.59%)</title><rect x="26.4398%" y="773" width="0.5890%" height="15" fill="rgb(246,89,9)" fg:x="404" fg:w="9"/><text x="26.6898%" y="783.50"></text></g><g><title>malloc (13 samples, 0.85%)</title><rect x="27.0288%" y="773" width="0.8508%" height="15" fill="rgb(233,213,13)" fg:x="413" fg:w="13"/><text x="27.2788%" y="783.50"></text></g><g><title>[anon] (297 samples, 19.44%)</title><rect x="10.4058%" y="789" width="19.4372%" height="15" fill="rgb(233,141,41)" fg:x="159" fg:w="297"/><text x="10.6558%" y="799.50">[anon]</text></g><g><title>realloc (30 samples, 1.96%)</title><rect x="27.8796%" y="773" width="1.9634%" height="15" fill="rgb(239,167,4)" fg:x="426" fg:w="30"/><text x="28.1296%" y="783.50">r..</text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="29.8429%" y="789" width="0.0654%" height="15" fill="rgb(209,217,16)" fg:x="456" fg:w="1"/><text x="30.0929%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="29.8429%" y="773" width="0.0654%" height="15" fill="rgb(219,88,35)" fg:x="456" fg:w="1"/><text x="30.0929%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="29.8429%" y="757" width="0.0654%" height="15" fill="rgb(220,193,23)" fg:x="456" fg:w="1"/><text x="30.0929%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="29.8429%" y="741" width="0.0654%" height="15" fill="rgb(230,90,52)" fg:x="456" fg:w="1"/><text x="30.0929%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="29.8429%" y="725" width="0.0654%" height="15" fill="rgb(252,106,19)" fg:x="456" fg:w="1"/><text x="30.0929%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="29.8429%" y="709" width="0.0654%" height="15" fill="rgb(206,74,20)" fg:x="456" fg:w="1"/><text x="30.0929%" y="719.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.07%)</title><rect x="29.8429%" y="693" width="0.0654%" height="15" fill="rgb(230,138,44)" fg:x="456" fg:w="1"/><text x="30.0929%" y="703.50"></text></g><g><title>exc_page_fault (1 samples, 0.07%)</title><rect x="29.8429%" y="677" width="0.0654%" height="15" fill="rgb(235,182,43)" fg:x="456" fg:w="1"/><text x="30.0929%" y="687.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.07%)</title><rect x="29.8429%" y="661" width="0.0654%" height="15" fill="rgb(242,16,51)" fg:x="456" fg:w="1"/><text x="30.0929%" y="671.50"></text></g><g><title>handle_mm_fault (1 samples, 0.07%)</title><rect x="29.8429%" y="645" width="0.0654%" height="15" fill="rgb(248,9,4)" fg:x="456" fg:w="1"/><text x="30.0929%" y="655.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="29.8429%" y="629" width="0.0654%" height="15" fill="rgb(210,31,22)" fg:x="456" fg:w="1"/><text x="30.0929%" y="639.50"></text></g><g><title>do_fault (1 samples, 0.07%)</title><rect x="29.8429%" y="613" width="0.0654%" height="15" fill="rgb(239,54,39)" fg:x="456" fg:w="1"/><text x="30.0929%" y="623.50"></text></g><g><title>filemap_map_pages (1 samples, 0.07%)</title><rect x="29.8429%" y="597" width="0.0654%" height="15" fill="rgb(230,99,41)" fg:x="456" fg:w="1"/><text x="30.0929%" y="607.50"></text></g><g><title>set_pte_range (1 samples, 0.07%)</title><rect x="29.8429%" y="581" width="0.0654%" height="15" fill="rgb(253,106,12)" fg:x="456" fg:w="1"/><text x="30.0929%" y="591.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.07%)</title><rect x="29.8429%" y="565" width="0.0654%" height="15" fill="rgb(213,46,41)" fg:x="456" fg:w="1"/><text x="30.0929%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.26%)</title><rect x="31.0209%" y="773" width="0.2618%" height="15" fill="rgb(215,133,35)" fg:x="474" fg:w="4"/><text x="31.2709%" y="783.50"></text></g><g><title>[libc.so.6] (11 samples, 0.72%)</title><rect x="31.2827%" y="773" width="0.7199%" height="15" fill="rgb(213,28,5)" fg:x="478" fg:w="11"/><text x="31.5327%" y="783.50"></text></g><g><title>__rdl_alloc (3 samples, 0.20%)</title><rect x="32.0026%" y="773" width="0.1963%" height="15" fill="rgb(215,77,49)" fg:x="489" fg:w="3"/><text x="32.2526%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.13%)</title><rect x="32.0681%" y="757" width="0.1309%" height="15" fill="rgb(248,100,22)" fg:x="490" fg:w="2"/><text x="32.3181%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="32.1990%" y="773" width="0.0654%" height="15" fill="rgb(208,67,9)" fg:x="492" fg:w="1"/><text x="32.4490%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="32.1990%" y="757" width="0.0654%" height="15" fill="rgb(219,133,21)" fg:x="492" fg:w="1"/><text x="32.4490%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="32.1990%" y="741" width="0.0654%" height="15" fill="rgb(246,46,29)" fg:x="492" fg:w="1"/><text x="32.4490%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="32.1990%" y="725" width="0.0654%" height="15" fill="rgb(246,185,52)" fg:x="492" fg:w="1"/><text x="32.4490%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="32.2644%" y="757" width="0.0654%" height="15" fill="rgb(252,136,11)" fg:x="493" fg:w="1"/><text x="32.5144%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="32.2644%" y="741" width="0.0654%" height="15" fill="rgb(219,138,53)" fg:x="493" fg:w="1"/><text x="32.5144%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="32.2644%" y="725" width="0.0654%" height="15" fill="rgb(211,51,23)" fg:x="493" fg:w="1"/><text x="32.5144%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.20%)</title><rect x="32.2644%" y="773" width="0.1963%" height="15" fill="rgb(247,221,28)" fg:x="493" fg:w="3"/><text x="32.5144%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.13%)</title><rect x="32.3298%" y="757" width="0.1309%" height="15" fill="rgb(251,222,45)" fg:x="494" fg:w="2"/><text x="32.5798%" y="767.50"></text></g><g><title>attempt7::get_inbetween_points (1 samples, 0.07%)</title><rect x="32.5916%" y="757" width="0.0654%" height="15" fill="rgb(217,162,53)" fg:x="498" fg:w="1"/><text x="32.8416%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="32.5916%" y="741" width="0.0654%" height="15" fill="rgb(229,93,14)" fg:x="498" fg:w="1"/><text x="32.8416%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="32.5916%" y="725" width="0.0654%" height="15" fill="rgb(209,67,49)" fg:x="498" fg:w="1"/><text x="32.8416%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="32.5916%" y="709" width="0.0654%" height="15" fill="rgb(213,87,29)" fg:x="498" fg:w="1"/><text x="32.8416%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="32.5916%" y="693" width="0.0654%" height="15" fill="rgb(205,151,52)" fg:x="498" fg:w="1"/><text x="32.8416%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="32.5916%" y="677" width="0.0654%" height="15" fill="rgb(253,215,39)" fg:x="498" fg:w="1"/><text x="32.8416%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="32.5916%" y="661" width="0.0654%" height="15" fill="rgb(221,220,41)" fg:x="498" fg:w="1"/><text x="32.8416%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="32.5916%" y="645" width="0.0654%" height="15" fill="rgb(218,133,21)" fg:x="498" fg:w="1"/><text x="32.8416%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="32.5916%" y="629" width="0.0654%" height="15" fill="rgb(221,193,43)" fg:x="498" fg:w="1"/><text x="32.8416%" y="639.50"></text></g><g><title>attempt7::choose_next_point (5 samples, 0.33%)</title><rect x="32.4607%" y="773" width="0.3272%" height="15" fill="rgb(240,128,52)" fg:x="496" fg:w="5"/><text x="32.7107%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.13%)</title><rect x="32.6571%" y="757" width="0.1309%" height="15" fill="rgb(253,114,12)" fg:x="499" fg:w="2"/><text x="32.9071%" y="767.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.13%)</title><rect x="32.6571%" y="741" width="0.1309%" height="15" fill="rgb(215,223,47)" fg:x="499" fg:w="2"/><text x="32.9071%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.13%)</title><rect x="32.6571%" y="725" width="0.1309%" height="15" fill="rgb(248,225,23)" fg:x="499" fg:w="2"/><text x="32.9071%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="32.7225%" y="709" width="0.0654%" height="15" fill="rgb(250,108,0)" fg:x="500" fg:w="1"/><text x="32.9725%" y="719.50"></text></g><g><title>cfree (2 samples, 0.13%)</title><rect x="32.7880%" y="773" width="0.1309%" height="15" fill="rgb(228,208,7)" fg:x="501" fg:w="2"/><text x="33.0380%" y="783.50"></text></g><g><title>fmod (3 samples, 0.20%)</title><rect x="32.9188%" y="773" width="0.1963%" height="15" fill="rgb(244,45,10)" fg:x="503" fg:w="3"/><text x="33.1688%" y="783.50"></text></g><g><title>[libc.so.6] (52 samples, 3.40%)</title><rect x="29.9084%" y="789" width="3.4031%" height="15" fill="rgb(207,125,25)" fg:x="457" fg:w="52"/><text x="30.1584%" y="799.50">[li..</text></g><g><title>realloc (3 samples, 0.20%)</title><rect x="33.1152%" y="773" width="0.1963%" height="15" fill="rgb(210,195,18)" fg:x="506" fg:w="3"/><text x="33.3652%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="34.7513%" y="709" width="0.3927%" height="15" fill="rgb(249,80,12)" fg:x="531" fg:w="6"/><text x="35.0013%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6 samples, 0.39%)</title><rect x="34.7513%" y="693" width="0.3927%" height="15" fill="rgb(221,65,9)" fg:x="531" fg:w="6"/><text x="35.0013%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.39%)</title><rect x="34.7513%" y="677" width="0.3927%" height="15" fill="rgb(235,49,36)" fg:x="531" fg:w="6"/><text x="35.0013%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (3 samples, 0.20%)</title><rect x="34.9476%" y="661" width="0.1963%" height="15" fill="rgb(225,32,20)" fg:x="534" fg:w="3"/><text x="35.1976%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.20%)</title><rect x="34.9476%" y="645" width="0.1963%" height="15" fill="rgb(215,141,46)" fg:x="534" fg:w="3"/><text x="35.1976%" y="655.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (3 samples, 0.20%)</title><rect x="34.9476%" y="629" width="0.1963%" height="15" fill="rgb(250,160,47)" fg:x="534" fg:w="3"/><text x="35.1976%" y="639.50"></text></g><g><title>attempt7::is_close_int (2 samples, 0.13%)</title><rect x="35.0131%" y="613" width="0.1309%" height="15" fill="rgb(216,222,40)" fg:x="535" fg:w="2"/><text x="35.2631%" y="623.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::abs (1 samples, 0.07%)</title><rect x="35.0785%" y="597" width="0.0654%" height="15" fill="rgb(234,217,39)" fg:x="536" fg:w="1"/><text x="35.3285%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.20%)</title><rect x="35.4712%" y="677" width="0.1963%" height="15" fill="rgb(207,178,40)" fg:x="542" fg:w="3"/><text x="35.7212%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (3 samples, 0.20%)</title><rect x="35.4712%" y="661" width="0.1963%" height="15" fill="rgb(221,136,13)" fg:x="542" fg:w="3"/><text x="35.7212%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="35.6021%" y="645" width="0.0654%" height="15" fill="rgb(249,199,10)" fg:x="544" fg:w="1"/><text x="35.8521%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="35.6021%" y="629" width="0.0654%" height="15" fill="rgb(249,222,13)" fg:x="544" fg:w="1"/><text x="35.8521%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="35.6021%" y="613" width="0.0654%" height="15" fill="rgb(244,185,38)" fg:x="544" fg:w="1"/><text x="35.8521%" y="623.50"></text></g><g><title>&lt;isize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.07%)</title><rect x="35.6021%" y="597" width="0.0654%" height="15" fill="rgb(236,202,9)" fg:x="544" fg:w="1"/><text x="35.8521%" y="607.50"></text></g><g><title>core::num::&lt;impl isize&gt;::unchecked_add (1 samples, 0.07%)</title><rect x="35.6021%" y="581" width="0.0654%" height="15" fill="rgb(250,229,37)" fg:x="544" fg:w="1"/><text x="35.8521%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.65%)</title><rect x="35.1440%" y="709" width="0.6545%" height="15" fill="rgb(206,174,23)" fg:x="537" fg:w="10"/><text x="35.3940%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.65%)</title><rect x="35.1440%" y="693" width="0.6545%" height="15" fill="rgb(211,33,43)" fg:x="537" fg:w="10"/><text x="35.3940%" y="703.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (2 samples, 0.13%)</title><rect x="35.6675%" y="677" width="0.1309%" height="15" fill="rgb(245,58,50)" fg:x="545" fg:w="2"/><text x="35.9175%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.13%)</title><rect x="35.6675%" y="661" width="0.1309%" height="15" fill="rgb(244,68,36)" fg:x="545" fg:w="2"/><text x="35.9175%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.07%)</title><rect x="35.7984%" y="709" width="0.0654%" height="15" fill="rgb(232,229,15)" fg:x="547" fg:w="1"/><text x="36.0484%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="35.7984%" y="693" width="0.0654%" height="15" fill="rgb(254,30,23)" fg:x="547" fg:w="1"/><text x="36.0484%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 1.51%)</title><rect x="34.4895%" y="741" width="1.5052%" height="15" fill="rgb(235,160,14)" fg:x="527" fg:w="23"/><text x="34.7395%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 1.51%)</title><rect x="34.4895%" y="725" width="1.5052%" height="15" fill="rgb(212,155,44)" fg:x="527" fg:w="23"/><text x="34.7395%" y="735.50"></text></g><g><title>core::ptr::write (2 samples, 0.13%)</title><rect x="35.8639%" y="709" width="0.1309%" height="15" fill="rgb(226,2,50)" fg:x="548" fg:w="2"/><text x="36.1139%" y="719.50"></text></g><g><title>attempt7::is_close_int (4 samples, 0.26%)</title><rect x="36.6492%" y="645" width="0.2618%" height="15" fill="rgb(234,177,6)" fg:x="560" fg:w="4"/><text x="36.8992%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.11%)</title><rect x="35.9948%" y="741" width="1.1126%" height="15" fill="rgb(217,24,9)" fg:x="550" fg:w="17"/><text x="36.2448%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (17 samples, 1.11%)</title><rect x="35.9948%" y="725" width="1.1126%" height="15" fill="rgb(220,13,46)" fg:x="550" fg:w="17"/><text x="36.2448%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 1.11%)</title><rect x="35.9948%" y="709" width="1.1126%" height="15" fill="rgb(239,221,27)" fg:x="550" fg:w="17"/><text x="36.2448%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (12 samples, 0.79%)</title><rect x="36.3220%" y="693" width="0.7853%" height="15" fill="rgb(222,198,25)" fg:x="555" fg:w="12"/><text x="36.5720%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (12 samples, 0.79%)</title><rect x="36.3220%" y="677" width="0.7853%" height="15" fill="rgb(211,99,13)" fg:x="555" fg:w="12"/><text x="36.5720%" y="687.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (12 samples, 0.79%)</title><rect x="36.3220%" y="661" width="0.7853%" height="15" fill="rgb(232,111,31)" fg:x="555" fg:w="12"/><text x="36.5720%" y="671.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (3 samples, 0.20%)</title><rect x="36.9110%" y="645" width="0.1963%" height="15" fill="rgb(245,82,37)" fg:x="564" fg:w="3"/><text x="37.1610%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="37.1073%" y="709" width="0.0654%" height="15" fill="rgb(227,149,46)" fg:x="567" fg:w="1"/><text x="37.3573%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="37.1073%" y="693" width="0.0654%" height="15" fill="rgb(218,36,50)" fg:x="567" fg:w="1"/><text x="37.3573%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="37.1073%" y="677" width="0.0654%" height="15" fill="rgb(226,80,48)" fg:x="567" fg:w="1"/><text x="37.3573%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="37.1073%" y="661" width="0.0654%" height="15" fill="rgb(238,224,15)" fg:x="567" fg:w="1"/><text x="37.3573%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="37.1073%" y="645" width="0.0654%" height="15" fill="rgb(241,136,10)" fg:x="567" fg:w="1"/><text x="37.3573%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="37.1073%" y="741" width="0.1309%" height="15" fill="rgb(208,32,45)" fg:x="567" fg:w="2"/><text x="37.3573%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="37.1073%" y="725" width="0.1309%" height="15" fill="rgb(207,135,9)" fg:x="567" fg:w="2"/><text x="37.3573%" y="735.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.07%)</title><rect x="37.1728%" y="709" width="0.0654%" height="15" fill="rgb(206,86,44)" fg:x="568" fg:w="1"/><text x="37.4228%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.07%)</title><rect x="37.1728%" y="693" width="0.0654%" height="15" fill="rgb(245,177,15)" fg:x="568" fg:w="1"/><text x="37.4228%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="37.1728%" y="677" width="0.0654%" height="15" fill="rgb(206,64,50)" fg:x="568" fg:w="1"/><text x="37.4228%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="37.2382%" y="741" width="0.0654%" height="15" fill="rgb(234,36,40)" fg:x="569" fg:w="1"/><text x="37.4882%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="37.2382%" y="725" width="0.0654%" height="15" fill="rgb(213,64,8)" fg:x="569" fg:w="1"/><text x="37.4882%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.07%)</title><rect x="37.2382%" y="709" width="0.0654%" height="15" fill="rgb(210,75,36)" fg:x="569" fg:w="1"/><text x="37.4882%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (8 samples, 0.52%)</title><rect x="37.3037%" y="741" width="0.5236%" height="15" fill="rgb(229,88,21)" fg:x="570" fg:w="8"/><text x="37.5537%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.65%)</title><rect x="37.8272%" y="741" width="0.6545%" height="15" fill="rgb(252,204,47)" fg:x="578" fg:w="10"/><text x="38.0772%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.65%)</title><rect x="37.8272%" y="725" width="0.6545%" height="15" fill="rgb(208,77,27)" fg:x="578" fg:w="10"/><text x="38.0772%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.65%)</title><rect x="37.8272%" y="709" width="0.6545%" height="15" fill="rgb(221,76,26)" fg:x="578" fg:w="10"/><text x="38.0772%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.65%)</title><rect x="37.8272%" y="693" width="0.6545%" height="15" fill="rgb(225,139,18)" fg:x="578" fg:w="10"/><text x="38.0772%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.65%)</title><rect x="37.8272%" y="677" width="0.6545%" height="15" fill="rgb(230,137,11)" fg:x="578" fg:w="10"/><text x="38.0772%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.65%)</title><rect x="37.8272%" y="661" width="0.6545%" height="15" fill="rgb(212,28,1)" fg:x="578" fg:w="10"/><text x="38.0772%" y="671.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.65%)</title><rect x="37.8272%" y="645" width="0.6545%" height="15" fill="rgb(248,164,17)" fg:x="578" fg:w="10"/><text x="38.0772%" y="655.50"></text></g><g><title>core::ptr::read_volatile (3 samples, 0.20%)</title><rect x="38.2853%" y="629" width="0.1963%" height="15" fill="rgb(222,171,42)" fg:x="585" fg:w="3"/><text x="38.5353%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80 samples, 5.24%)</title><rect x="33.3115%" y="773" width="5.2356%" height="15" fill="rgb(243,84,45)" fg:x="509" fg:w="80"/><text x="33.5615%" y="783.50">&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (69 samples, 4.52%)</title><rect x="34.0314%" y="757" width="4.5157%" height="15" fill="rgb(252,49,23)" fg:x="520" fg:w="69"/><text x="34.2814%" y="767.50">&lt;allo..</text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="38.4817%" y="741" width="0.0654%" height="15" fill="rgb(215,19,7)" fg:x="588" fg:w="1"/><text x="38.7317%" y="751.50"></text></g><g><title>[libc.so.6] (300 samples, 19.63%)</title><rect x="38.5471%" y="773" width="19.6335%" height="15" fill="rgb(238,81,41)" fg:x="589" fg:w="300"/><text x="38.7971%" y="783.50">[libc.so.6]</text></g><g><title>__rdl_alloc (2 samples, 0.13%)</title><rect x="58.1806%" y="773" width="0.1309%" height="15" fill="rgb(210,199,37)" fg:x="889" fg:w="2"/><text x="58.4306%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="58.2461%" y="757" width="0.0654%" height="15" fill="rgb(244,192,49)" fg:x="890" fg:w="1"/><text x="58.4961%" y="767.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="58.3115%" y="773" width="0.0654%" height="15" fill="rgb(226,211,11)" fg:x="891" fg:w="1"/><text x="58.5615%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="58.3115%" y="757" width="0.0654%" height="15" fill="rgb(236,162,54)" fg:x="891" fg:w="1"/><text x="58.5615%" y="767.50"></text></g><g><title>__rdl_realloc (12 samples, 0.79%)</title><rect x="58.3770%" y="773" width="0.7853%" height="15" fill="rgb(220,229,9)" fg:x="892" fg:w="12"/><text x="58.6270%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.39%)</title><rect x="58.7696%" y="757" width="0.3927%" height="15" fill="rgb(250,87,22)" fg:x="898" fg:w="6"/><text x="59.0196%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="59.1623%" y="773" width="0.0654%" height="15" fill="rgb(239,43,17)" fg:x="904" fg:w="1"/><text x="59.4123%" y="783.50"></text></g><g><title>__rust_dealloc (3 samples, 0.20%)</title><rect x="59.2277%" y="773" width="0.1963%" height="15" fill="rgb(231,177,25)" fg:x="905" fg:w="3"/><text x="59.4777%" y="783.50"></text></g><g><title>__rust_realloc (1 samples, 0.07%)</title><rect x="59.4241%" y="773" width="0.0654%" height="15" fill="rgb(219,179,1)" fg:x="908" fg:w="1"/><text x="59.6741%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.13%)</title><rect x="59.4895%" y="773" width="0.1309%" height="15" fill="rgb(238,219,53)" fg:x="909" fg:w="2"/><text x="59.7395%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.13%)</title><rect x="59.4895%" y="757" width="0.1309%" height="15" fill="rgb(232,167,36)" fg:x="909" fg:w="2"/><text x="59.7395%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.13%)</title><rect x="59.4895%" y="741" width="0.1309%" height="15" fill="rgb(244,19,51)" fg:x="909" fg:w="2"/><text x="59.7395%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="60.3403%" y="741" width="0.0654%" height="15" fill="rgb(224,6,22)" fg:x="922" fg:w="1"/><text x="60.5903%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.26%)</title><rect x="60.4058%" y="741" width="0.2618%" height="15" fill="rgb(224,145,5)" fg:x="923" fg:w="4"/><text x="60.6558%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1 samples, 0.07%)</title><rect x="60.6021%" y="725" width="0.0654%" height="15" fill="rgb(234,130,49)" fg:x="926" fg:w="1"/><text x="60.8521%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.07%)</title><rect x="60.6675%" y="741" width="0.0654%" height="15" fill="rgb(254,6,2)" fg:x="927" fg:w="1"/><text x="60.9175%" y="751.50"></text></g><g><title>core::cmp::max (3 samples, 0.20%)</title><rect x="60.7330%" y="741" width="0.1963%" height="15" fill="rgb(208,96,46)" fg:x="928" fg:w="3"/><text x="60.9830%" y="751.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.20%)</title><rect x="60.7330%" y="725" width="0.1963%" height="15" fill="rgb(239,3,39)" fg:x="928" fg:w="3"/><text x="60.9830%" y="735.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.20%)</title><rect x="60.7330%" y="709" width="0.1963%" height="15" fill="rgb(233,210,1)" fg:x="928" fg:w="3"/><text x="60.9830%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 1.51%)</title><rect x="59.6204%" y="773" width="1.5052%" height="15" fill="rgb(244,137,37)" fg:x="911" fg:w="23"/><text x="59.8704%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 1.24%)</title><rect x="59.8822%" y="757" width="1.2435%" height="15" fill="rgb(240,136,2)" fg:x="915" fg:w="19"/><text x="60.1322%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.20%)</title><rect x="60.9293%" y="741" width="0.1963%" height="15" fill="rgb(239,18,37)" fg:x="931" fg:w="3"/><text x="61.1793%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.20%)</title><rect x="60.9293%" y="725" width="0.1963%" height="15" fill="rgb(218,185,22)" fg:x="931" fg:w="3"/><text x="61.1793%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (20 samples, 1.31%)</title><rect x="61.9110%" y="757" width="1.3089%" height="15" fill="rgb(225,218,4)" fg:x="946" fg:w="20"/><text x="62.1610%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (20 samples, 1.31%)</title><rect x="61.9110%" y="741" width="1.3089%" height="15" fill="rgb(230,182,32)" fg:x="946" fg:w="20"/><text x="62.1610%" y="751.50"></text></g><g><title>alloc::alloc::realloc (20 samples, 1.31%)</title><rect x="61.9110%" y="725" width="1.3089%" height="15" fill="rgb(242,56,43)" fg:x="946" fg:w="20"/><text x="62.1610%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (44 samples, 2.88%)</title><rect x="61.1257%" y="773" width="2.8796%" height="15" fill="rgb(233,99,24)" fg:x="934" fg:w="44"/><text x="61.3757%" y="783.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.79%)</title><rect x="63.2199%" y="757" width="0.7853%" height="15" fill="rgb(234,209,42)" fg:x="966" fg:w="12"/><text x="63.4699%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.92%)</title><rect x="65.3141%" y="693" width="0.9162%" height="15" fill="rgb(227,7,12)" fg:x="998" fg:w="14"/><text x="65.5641%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.92%)</title><rect x="65.3141%" y="677" width="0.9162%" height="15" fill="rgb(245,203,43)" fg:x="998" fg:w="14"/><text x="65.5641%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.92%)</title><rect x="65.3141%" y="661" width="0.9162%" height="15" fill="rgb(238,205,33)" fg:x="998" fg:w="14"/><text x="65.5641%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.59%)</title><rect x="65.6414%" y="645" width="0.5890%" height="15" fill="rgb(231,56,7)" fg:x="1003" fg:w="9"/><text x="65.8914%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.59%)</title><rect x="65.6414%" y="629" width="0.5890%" height="15" fill="rgb(244,186,29)" fg:x="1003" fg:w="9"/><text x="65.8914%" y="639.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.59%)</title><rect x="65.6414%" y="613" width="0.5890%" height="15" fill="rgb(234,111,31)" fg:x="1003" fg:w="9"/><text x="65.8914%" y="623.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="66.1649%" y="597" width="0.0654%" height="15" fill="rgb(241,149,10)" fg:x="1011" fg:w="1"/><text x="66.4149%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 1.64%)</title><rect x="65.1832%" y="757" width="1.6361%" height="15" fill="rgb(249,206,44)" fg:x="996" fg:w="25"/><text x="65.4332%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 1.64%)</title><rect x="65.1832%" y="741" width="1.6361%" height="15" fill="rgb(251,153,30)" fg:x="996" fg:w="25"/><text x="65.4332%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 1.64%)</title><rect x="65.1832%" y="725" width="1.6361%" height="15" fill="rgb(239,152,38)" fg:x="996" fg:w="25"/><text x="65.4332%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 1.64%)</title><rect x="65.1832%" y="709" width="1.6361%" height="15" fill="rgb(249,139,47)" fg:x="996" fg:w="25"/><text x="65.4332%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.59%)</title><rect x="66.2304%" y="693" width="0.5890%" height="15" fill="rgb(244,64,35)" fg:x="1012" fg:w="9"/><text x="66.4804%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.59%)</title><rect x="66.2304%" y="677" width="0.5890%" height="15" fill="rgb(216,46,15)" fg:x="1012" fg:w="9"/><text x="66.4804%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="66.8194%" y="757" width="0.0654%" height="15" fill="rgb(250,74,19)" fg:x="1021" fg:w="1"/><text x="67.0694%" y="767.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="66.8194%" y="741" width="0.0654%" height="15" fill="rgb(249,42,33)" fg:x="1021" fg:w="1"/><text x="67.0694%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="67.4084%" y="741" width="0.0654%" height="15" fill="rgb(242,149,17)" fg:x="1030" fg:w="1"/><text x="67.6584%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.65%)</title><rect x="66.8848%" y="757" width="0.6545%" height="15" fill="rgb(244,29,21)" fg:x="1022" fg:w="10"/><text x="67.1348%" y="767.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="67.4738%" y="741" width="0.0654%" height="15" fill="rgb(220,130,37)" fg:x="1031" fg:w="1"/><text x="67.7238%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.13%)</title><rect x="67.5393%" y="757" width="0.1309%" height="15" fill="rgb(211,67,2)" fg:x="1032" fg:w="2"/><text x="67.7893%" y="767.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="68.1937%" y="741" width="0.0654%" height="15" fill="rgb(235,68,52)" fg:x="1042" fg:w="1"/><text x="68.4437%" y="751.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.07%)</title><rect x="68.1937%" y="725" width="0.0654%" height="15" fill="rgb(246,142,3)" fg:x="1042" fg:w="1"/><text x="68.4437%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1 samples, 0.07%)</title><rect x="68.2592%" y="597" width="0.0654%" height="15" fill="rgb(241,25,7)" fg:x="1043" fg:w="1"/><text x="68.5092%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1 samples, 0.07%)</title><rect x="68.2592%" y="581" width="0.0654%" height="15" fill="rgb(242,119,39)" fg:x="1043" fg:w="1"/><text x="68.5092%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (1 samples, 0.07%)</title><rect x="68.2592%" y="565" width="0.0654%" height="15" fill="rgb(241,98,45)" fg:x="1043" fg:w="1"/><text x="68.5092%" y="575.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="68.2592%" y="549" width="0.0654%" height="15" fill="rgb(254,28,30)" fg:x="1043" fg:w="1"/><text x="68.5092%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="68.2592%" y="677" width="0.1309%" height="15" fill="rgb(241,142,54)" fg:x="1043" fg:w="2"/><text x="68.5092%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.13%)</title><rect x="68.2592%" y="661" width="0.1309%" height="15" fill="rgb(222,85,15)" fg:x="1043" fg:w="2"/><text x="68.5092%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="68.2592%" y="645" width="0.1309%" height="15" fill="rgb(210,85,47)" fg:x="1043" fg:w="2"/><text x="68.5092%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="68.2592%" y="629" width="0.1309%" height="15" fill="rgb(224,206,25)" fg:x="1043" fg:w="2"/><text x="68.5092%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="68.2592%" y="613" width="0.1309%" height="15" fill="rgb(243,201,19)" fg:x="1043" fg:w="2"/><text x="68.5092%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="68.3246%" y="597" width="0.0654%" height="15" fill="rgb(236,59,4)" fg:x="1044" fg:w="1"/><text x="68.5746%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="68.3246%" y="581" width="0.0654%" height="15" fill="rgb(254,179,45)" fg:x="1044" fg:w="1"/><text x="68.5746%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.13%)</title><rect x="68.3901%" y="677" width="0.1309%" height="15" fill="rgb(226,14,10)" fg:x="1045" fg:w="2"/><text x="68.6401%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (2 samples, 0.13%)</title><rect x="68.3901%" y="661" width="0.1309%" height="15" fill="rgb(244,27,41)" fg:x="1045" fg:w="2"/><text x="68.6401%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="68.5209%" y="613" width="0.0654%" height="15" fill="rgb(235,35,32)" fg:x="1047" fg:w="1"/><text x="68.7709%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="68.5209%" y="597" width="0.0654%" height="15" fill="rgb(218,68,31)" fg:x="1047" fg:w="1"/><text x="68.7709%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="68.5209%" y="581" width="0.0654%" height="15" fill="rgb(207,120,37)" fg:x="1047" fg:w="1"/><text x="68.7709%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.39%)</title><rect x="68.2592%" y="741" width="0.3927%" height="15" fill="rgb(227,98,0)" fg:x="1043" fg:w="6"/><text x="68.5092%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="68.2592%" y="725" width="0.3927%" height="15" fill="rgb(207,7,3)" fg:x="1043" fg:w="6"/><text x="68.5092%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="68.2592%" y="709" width="0.3927%" height="15" fill="rgb(206,98,19)" fg:x="1043" fg:w="6"/><text x="68.5092%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="68.2592%" y="693" width="0.3927%" height="15" fill="rgb(217,5,26)" fg:x="1043" fg:w="6"/><text x="68.5092%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.13%)</title><rect x="68.5209%" y="677" width="0.1309%" height="15" fill="rgb(235,190,38)" fg:x="1047" fg:w="2"/><text x="68.7709%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="68.5209%" y="661" width="0.1309%" height="15" fill="rgb(247,86,24)" fg:x="1047" fg:w="2"/><text x="68.7709%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.13%)</title><rect x="68.5209%" y="645" width="0.1309%" height="15" fill="rgb(205,101,16)" fg:x="1047" fg:w="2"/><text x="68.7709%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.13%)</title><rect x="68.5209%" y="629" width="0.1309%" height="15" fill="rgb(246,168,33)" fg:x="1047" fg:w="2"/><text x="68.7709%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.07%)</title><rect x="68.5864%" y="613" width="0.0654%" height="15" fill="rgb(231,114,1)" fg:x="1048" fg:w="1"/><text x="68.8364%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.07%)</title><rect x="68.5864%" y="597" width="0.0654%" height="15" fill="rgb(207,184,53)" fg:x="1048" fg:w="1"/><text x="68.8364%" y="607.50"></text></g><g><title>attempt7::get_inbetween_points (17 samples, 1.11%)</title><rect x="67.6702%" y="757" width="1.1126%" height="15" fill="rgb(224,95,51)" fg:x="1034" fg:w="17"/><text x="67.9202%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter_map (2 samples, 0.13%)</title><rect x="68.6518%" y="741" width="0.1309%" height="15" fill="rgb(212,188,45)" fg:x="1049" fg:w="2"/><text x="68.9018%" y="751.50"></text></g><g><title>core::iter::adapters::filter_map::FilterMap&lt;I,F&gt;::new (2 samples, 0.13%)</title><rect x="68.6518%" y="725" width="0.1309%" height="15" fill="rgb(223,154,38)" fg:x="1049" fg:w="2"/><text x="68.9018%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.92%)</title><rect x="68.7827%" y="709" width="0.9162%" height="15" fill="rgb(251,22,52)" fg:x="1051" fg:w="14"/><text x="69.0327%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.92%)</title><rect x="68.7827%" y="693" width="0.9162%" height="15" fill="rgb(229,209,22)" fg:x="1051" fg:w="14"/><text x="69.0327%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize,isize)&gt;&gt; (15 samples, 0.98%)</title><rect x="68.7827%" y="757" width="0.9817%" height="15" fill="rgb(234,138,34)" fg:x="1051" fg:w="15"/><text x="69.0327%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (15 samples, 0.98%)</title><rect x="68.7827%" y="741" width="0.9817%" height="15" fill="rgb(212,95,11)" fg:x="1051" fg:w="15"/><text x="69.0327%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.98%)</title><rect x="68.7827%" y="725" width="0.9817%" height="15" fill="rgb(240,179,47)" fg:x="1051" fg:w="15"/><text x="69.0327%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="69.6990%" y="709" width="0.0654%" height="15" fill="rgb(240,163,11)" fg:x="1065" fg:w="1"/><text x="69.9490%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="69.7644%" y="661" width="0.0654%" height="15" fill="rgb(236,37,12)" fg:x="1066" fg:w="1"/><text x="70.0144%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="69.7644%" y="645" width="0.0654%" height="15" fill="rgb(232,164,16)" fg:x="1066" fg:w="1"/><text x="70.0144%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize,isize)&gt;&gt; (3 samples, 0.20%)</title><rect x="69.7644%" y="757" width="0.1963%" height="15" fill="rgb(244,205,15)" fg:x="1066" fg:w="3"/><text x="70.0144%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="69.7644%" y="741" width="0.1963%" height="15" fill="rgb(223,117,47)" fg:x="1066" fg:w="3"/><text x="70.0144%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(isize,isize),alloc::alloc::Global&gt;&gt; (3 samples, 0.20%)</title><rect x="69.7644%" y="725" width="0.1963%" height="15" fill="rgb(244,107,35)" fg:x="1066" fg:w="3"/><text x="70.0144%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="69.7644%" y="709" width="0.1963%" height="15" fill="rgb(205,140,8)" fg:x="1066" fg:w="3"/><text x="70.0144%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (3 samples, 0.20%)</title><rect x="69.7644%" y="693" width="0.1963%" height="15" fill="rgb(228,84,46)" fg:x="1066" fg:w="3"/><text x="70.0144%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="69.7644%" y="677" width="0.1963%" height="15" fill="rgb(254,188,9)" fg:x="1066" fg:w="3"/><text x="70.0144%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.13%)</title><rect x="69.8298%" y="661" width="0.1309%" height="15" fill="rgb(206,112,54)" fg:x="1067" fg:w="2"/><text x="70.0798%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (5 samples, 0.33%)</title><rect x="71.8586%" y="709" width="0.3272%" height="15" fill="rgb(216,84,49)" fg:x="1098" fg:w="5"/><text x="72.1086%" y="719.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (5 samples, 0.33%)</title><rect x="71.8586%" y="693" width="0.3272%" height="15" fill="rgb(214,194,35)" fg:x="1098" fg:w="5"/><text x="72.1086%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for isize&gt;::eq (5 samples, 0.33%)</title><rect x="71.8586%" y="677" width="0.3272%" height="15" fill="rgb(249,28,3)" fg:x="1098" fg:w="5"/><text x="72.1086%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.92%)</title><rect x="72.6440%" y="693" width="0.9162%" height="15" fill="rgb(222,56,52)" fg:x="1110" fg:w="14"/><text x="72.8940%" y="703.50"></text></g><g><title>attempt7::choose_next_point (148 samples, 9.69%)</title><rect x="64.0052%" y="773" width="9.6859%" height="15" fill="rgb(245,217,50)" fg:x="978" fg:w="148"/><text x="64.2552%" y="783.50">attempt7::choo..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (57 samples, 3.73%)</title><rect x="69.9607%" y="757" width="3.7304%" height="15" fill="rgb(213,201,24)" fg:x="1069" fg:w="57"/><text x="70.2107%" y="767.50">core..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (57 samples, 3.73%)</title><rect x="69.9607%" y="741" width="3.7304%" height="15" fill="rgb(248,116,28)" fg:x="1069" fg:w="57"/><text x="70.2107%" y="751.50">&lt;T a..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (57 samples, 3.73%)</title><rect x="69.9607%" y="725" width="3.7304%" height="15" fill="rgb(219,72,43)" fg:x="1069" fg:w="57"/><text x="70.2107%" y="735.50">&lt;cor..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.51%)</title><rect x="72.1859%" y="709" width="1.5052%" height="15" fill="rgb(209,138,14)" fg:x="1103" fg:w="23"/><text x="72.4359%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.13%)</title><rect x="73.5602%" y="693" width="0.1309%" height="15" fill="rgb(222,18,33)" fg:x="1124" fg:w="2"/><text x="73.8102%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.13%)</title><rect x="73.5602%" y="677" width="0.1309%" height="15" fill="rgb(213,199,7)" fg:x="1124" fg:w="2"/><text x="73.8102%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.13%)</title><rect x="73.5602%" y="661" width="0.1309%" height="15" fill="rgb(250,110,10)" fg:x="1124" fg:w="2"/><text x="73.8102%" y="671.50"></text></g><g><title>cfree (15 samples, 0.98%)</title><rect x="73.6911%" y="773" width="0.9817%" height="15" fill="rgb(248,123,6)" fg:x="1126" fg:w="15"/><text x="73.9411%" y="783.50"></text></g><g><title>fmod (23 samples, 1.51%)</title><rect x="74.6728%" y="773" width="1.5052%" height="15" fill="rgb(206,91,31)" fg:x="1141" fg:w="23"/><text x="74.9228%" y="783.50"></text></g><g><title>malloc (14 samples, 0.92%)</title><rect x="76.1780%" y="773" width="0.9162%" height="15" fill="rgb(211,154,13)" fg:x="1164" fg:w="14"/><text x="76.4280%" y="783.50"></text></g><g><title>realloc (36 samples, 2.36%)</title><rect x="77.0942%" y="773" width="2.3560%" height="15" fill="rgb(225,148,7)" fg:x="1178" fg:w="36"/><text x="77.3442%" y="783.50">r..</text></g><g><title>[unknown] (707 samples, 46.27%)</title><rect x="33.3115%" y="789" width="46.2696%" height="15" fill="rgb(220,160,43)" fg:x="509" fg:w="707"/><text x="33.5615%" y="799.50">[unknown]</text></g><g><title>roundf32x (2 samples, 0.13%)</title><rect x="79.4503%" y="773" width="0.1309%" height="15" fill="rgb(213,52,39)" fg:x="1214" fg:w="2"/><text x="79.7003%" y="783.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="79.5812%" y="789" width="0.0654%" height="15" fill="rgb(243,137,7)" fg:x="1216" fg:w="1"/><text x="79.8312%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="79.5812%" y="773" width="0.0654%" height="15" fill="rgb(230,79,13)" fg:x="1216" fg:w="1"/><text x="79.8312%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="79.6466%" y="453" width="0.0654%" height="15" fill="rgb(247,105,23)" fg:x="1217" fg:w="1"/><text x="79.8966%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="79.7120%" y="453" width="0.0654%" height="15" fill="rgb(223,179,41)" fg:x="1218" fg:w="1"/><text x="79.9620%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="79.7120%" y="437" width="0.0654%" height="15" fill="rgb(218,9,34)" fg:x="1218" fg:w="1"/><text x="79.9620%" y="447.50"></text></g><g><title>attempt7::choose_next_point (1 samples, 0.07%)</title><rect x="79.7120%" y="421" width="0.0654%" height="15" fill="rgb(222,106,8)" fg:x="1218" fg:w="1"/><text x="79.9620%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.07%)</title><rect x="79.7775%" y="453" width="0.0654%" height="15" fill="rgb(211,220,0)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="79.7775%" y="437" width="0.0654%" height="15" fill="rgb(229,52,16)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="79.7775%" y="421" width="0.0654%" height="15" fill="rgb(212,155,18)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="79.7775%" y="405" width="0.0654%" height="15" fill="rgb(242,21,14)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="79.7775%" y="389" width="0.0654%" height="15" fill="rgb(222,19,48)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="79.7775%" y="373" width="0.0654%" height="15" fill="rgb(232,45,27)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="79.7775%" y="357" width="0.0654%" height="15" fill="rgb(249,103,42)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="367.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="79.7775%" y="341" width="0.0654%" height="15" fill="rgb(246,81,33)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="79.7775%" y="325" width="0.0654%" height="15" fill="rgb(252,33,42)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="79.7775%" y="309" width="0.0654%" height="15" fill="rgb(209,212,41)" fg:x="1219" fg:w="1"/><text x="80.0275%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="79.9738%" y="437" width="0.0654%" height="15" fill="rgb(207,154,6)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="79.9738%" y="421" width="0.0654%" height="15" fill="rgb(223,64,47)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="79.9738%" y="405" width="0.0654%" height="15" fill="rgb(211,161,38)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="79.9738%" y="389" width="0.0654%" height="15" fill="rgb(219,138,40)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="79.9738%" y="373" width="0.0654%" height="15" fill="rgb(241,228,46)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="79.9738%" y="357" width="0.0654%" height="15" fill="rgb(223,209,38)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="79.9738%" y="341" width="0.0654%" height="15" fill="rgb(236,164,45)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="79.9738%" y="325" width="0.0654%" height="15" fill="rgb(231,15,5)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="79.9738%" y="309" width="0.0654%" height="15" fill="rgb(252,35,15)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="79.9738%" y="293" width="0.0654%" height="15" fill="rgb(248,181,18)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="303.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="79.9738%" y="277" width="0.0654%" height="15" fill="rgb(233,39,42)" fg:x="1222" fg:w="1"/><text x="80.2238%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.0393%" y="437" width="0.0654%" height="15" fill="rgb(238,110,33)" fg:x="1223" fg:w="1"/><text x="80.2893%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.20%)</title><rect x="80.1702%" y="389" width="0.1963%" height="15" fill="rgb(233,195,10)" fg:x="1225" fg:w="3"/><text x="80.4202%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.20%)</title><rect x="80.1702%" y="373" width="0.1963%" height="15" fill="rgb(254,105,3)" fg:x="1225" fg:w="3"/><text x="80.4202%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.20%)</title><rect x="80.1702%" y="357" width="0.1963%" height="15" fill="rgb(221,225,9)" fg:x="1225" fg:w="3"/><text x="80.4202%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.20%)</title><rect x="80.1702%" y="341" width="0.1963%" height="15" fill="rgb(224,227,45)" fg:x="1225" fg:w="3"/><text x="80.4202%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="80.3010%" y="325" width="0.0654%" height="15" fill="rgb(229,198,43)" fg:x="1227" fg:w="1"/><text x="80.5510%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="80.3010%" y="309" width="0.0654%" height="15" fill="rgb(206,209,35)" fg:x="1227" fg:w="1"/><text x="80.5510%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="80.3010%" y="293" width="0.0654%" height="15" fill="rgb(245,195,53)" fg:x="1227" fg:w="1"/><text x="80.5510%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="80.3665%" y="389" width="0.0654%" height="15" fill="rgb(240,92,26)" fg:x="1228" fg:w="1"/><text x="80.6165%" y="399.50"></text></g><g><title>attempt7::get_inbetween_points (1 samples, 0.07%)</title><rect x="80.4319%" y="389" width="0.0654%" height="15" fill="rgb(207,40,23)" fg:x="1229" fg:w="1"/><text x="80.6819%" y="399.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="80.4319%" y="373" width="0.0654%" height="15" fill="rgb(223,111,35)" fg:x="1229" fg:w="1"/><text x="80.6819%" y="383.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.07%)</title><rect x="80.4319%" y="357" width="0.0654%" height="15" fill="rgb(229,147,28)" fg:x="1229" fg:w="1"/><text x="80.6819%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize,isize)&gt;&gt; (1 samples, 0.07%)</title><rect x="80.4974%" y="389" width="0.0654%" height="15" fill="rgb(211,29,28)" fg:x="1230" fg:w="1"/><text x="80.7474%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (1 samples, 0.07%)</title><rect x="80.4974%" y="373" width="0.0654%" height="15" fill="rgb(228,72,33)" fg:x="1230" fg:w="1"/><text x="80.7474%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="80.4974%" y="357" width="0.0654%" height="15" fill="rgb(205,214,31)" fg:x="1230" fg:w="1"/><text x="80.7474%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.13%)</title><rect x="80.6937%" y="325" width="0.1309%" height="15" fill="rgb(224,111,15)" fg:x="1233" fg:w="2"/><text x="80.9437%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.79%)</title><rect x="80.1047%" y="437" width="0.7853%" height="15" fill="rgb(253,21,26)" fg:x="1224" fg:w="12"/><text x="80.3547%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.79%)</title><rect x="80.1047%" y="421" width="0.7853%" height="15" fill="rgb(245,139,43)" fg:x="1224" fg:w="12"/><text x="80.3547%" y="431.50"></text></g><g><title>attempt7::choose_next_point (12 samples, 0.79%)</title><rect x="80.1047%" y="405" width="0.7853%" height="15" fill="rgb(252,170,7)" fg:x="1224" fg:w="12"/><text x="80.3547%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.33%)</title><rect x="80.5628%" y="389" width="0.3272%" height="15" fill="rgb(231,118,14)" fg:x="1231" fg:w="5"/><text x="80.8128%" y="399.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.33%)</title><rect x="80.5628%" y="373" width="0.3272%" height="15" fill="rgb(238,83,0)" fg:x="1231" fg:w="5"/><text x="80.8128%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (5 samples, 0.33%)</title><rect x="80.5628%" y="357" width="0.3272%" height="15" fill="rgb(221,39,39)" fg:x="1231" fg:w="5"/><text x="80.8128%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="80.6283%" y="341" width="0.2618%" height="15" fill="rgb(222,119,46)" fg:x="1232" fg:w="4"/><text x="80.8783%" y="351.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.07%)</title><rect x="80.8246%" y="325" width="0.0654%" height="15" fill="rgb(222,165,49)" fg:x="1235" fg:w="1"/><text x="81.0746%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.07%)</title><rect x="80.8246%" y="309" width="0.0654%" height="15" fill="rgb(219,113,52)" fg:x="1235" fg:w="1"/><text x="81.0746%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="80.8246%" y="293" width="0.0654%" height="15" fill="rgb(214,7,15)" fg:x="1235" fg:w="1"/><text x="81.0746%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.39%)</title><rect x="80.8901%" y="437" width="0.3927%" height="15" fill="rgb(235,32,4)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.39%)</title><rect x="80.8901%" y="421" width="0.3927%" height="15" fill="rgb(238,90,54)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.39%)</title><rect x="80.8901%" y="405" width="0.3927%" height="15" fill="rgb(213,208,19)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.39%)</title><rect x="80.8901%" y="389" width="0.3927%" height="15" fill="rgb(233,156,4)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.39%)</title><rect x="80.8901%" y="373" width="0.3927%" height="15" fill="rgb(207,194,5)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.39%)</title><rect x="80.8901%" y="357" width="0.3927%" height="15" fill="rgb(206,111,30)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="367.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.39%)</title><rect x="80.8901%" y="341" width="0.3927%" height="15" fill="rgb(243,70,54)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="351.50"></text></g><g><title>realloc (6 samples, 0.39%)</title><rect x="80.8901%" y="325" width="0.3927%" height="15" fill="rgb(242,28,8)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.39%)</title><rect x="80.8901%" y="309" width="0.3927%" height="15" fill="rgb(219,106,18)" fg:x="1236" fg:w="6"/><text x="81.1401%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.26%)</title><rect x="81.0209%" y="293" width="0.2618%" height="15" fill="rgb(244,222,10)" fg:x="1238" fg:w="4"/><text x="81.2709%" y="303.50"></text></g><g><title>[libc.so.6] (7 samples, 0.46%)</title><rect x="82.1335%" y="261" width="0.4581%" height="15" fill="rgb(236,179,52)" fg:x="1255" fg:w="7"/><text x="82.3835%" y="271.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="82.5916%" y="261" width="0.0654%" height="15" fill="rgb(213,23,39)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="82.5916%" y="245" width="0.0654%" height="15" fill="rgb(238,48,10)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="82.5916%" y="229" width="0.0654%" height="15" fill="rgb(251,196,23)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="239.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="82.5916%" y="213" width="0.0654%" height="15" fill="rgb(250,152,24)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="223.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="82.5916%" y="197" width="0.0654%" height="15" fill="rgb(209,150,17)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="207.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.07%)</title><rect x="82.5916%" y="181" width="0.0654%" height="15" fill="rgb(234,202,34)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="191.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.07%)</title><rect x="82.5916%" y="165" width="0.0654%" height="15" fill="rgb(253,148,53)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="175.50"></text></g><g><title>tick_sched_handle (1 samples, 0.07%)</title><rect x="82.5916%" y="149" width="0.0654%" height="15" fill="rgb(218,129,16)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="159.50"></text></g><g><title>update_process_times (1 samples, 0.07%)</title><rect x="82.5916%" y="133" width="0.0654%" height="15" fill="rgb(216,85,19)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="143.50"></text></g><g><title>scheduler_tick (1 samples, 0.07%)</title><rect x="82.5916%" y="117" width="0.0654%" height="15" fill="rgb(235,228,7)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="127.50"></text></g><g><title>sched_clock_tick (1 samples, 0.07%)</title><rect x="82.5916%" y="101" width="0.0654%" height="15" fill="rgb(245,175,0)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="111.50"></text></g><g><title>ktime_get (1 samples, 0.07%)</title><rect x="82.5916%" y="85" width="0.0654%" height="15" fill="rgb(208,168,36)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="95.50"></text></g><g><title>read_hpet (1 samples, 0.07%)</title><rect x="82.5916%" y="69" width="0.0654%" height="15" fill="rgb(246,171,24)" fg:x="1262" fg:w="1"/><text x="82.8416%" y="79.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="82.6571%" y="261" width="0.0654%" height="15" fill="rgb(215,142,24)" fg:x="1263" fg:w="1"/><text x="82.9071%" y="271.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.13%)</title><rect x="82.7225%" y="261" width="0.1309%" height="15" fill="rgb(250,187,7)" fg:x="1264" fg:w="2"/><text x="82.9725%" y="271.50"></text></g><g><title>fmod (1 samples, 0.07%)</title><rect x="82.8534%" y="261" width="0.0654%" height="15" fill="rgb(228,66,33)" fg:x="1266" fg:w="1"/><text x="83.1034%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19 samples, 1.24%)</title><rect x="81.7408%" y="357" width="1.2435%" height="15" fill="rgb(234,215,21)" fg:x="1249" fg:w="19"/><text x="81.9908%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 1.24%)</title><rect x="81.7408%" y="341" width="1.2435%" height="15" fill="rgb(222,191,20)" fg:x="1249" fg:w="19"/><text x="81.9908%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 1.24%)</title><rect x="81.7408%" y="325" width="1.2435%" height="15" fill="rgb(245,79,54)" fg:x="1249" fg:w="19"/><text x="81.9908%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 1.18%)</title><rect x="81.8063%" y="309" width="1.1780%" height="15" fill="rgb(240,10,37)" fg:x="1250" fg:w="18"/><text x="82.0563%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 1.18%)</title><rect x="81.8063%" y="293" width="1.1780%" height="15" fill="rgb(214,192,32)" fg:x="1250" fg:w="18"/><text x="82.0563%" y="303.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 1.18%)</title><rect x="81.8063%" y="277" width="1.1780%" height="15" fill="rgb(209,36,54)" fg:x="1250" fg:w="18"/><text x="82.0563%" y="287.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="82.9188%" y="261" width="0.0654%" height="15" fill="rgb(220,10,11)" fg:x="1267" fg:w="1"/><text x="83.1688%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 1.64%)</title><rect x="81.6099%" y="421" width="1.6361%" height="15" fill="rgb(221,106,17)" fg:x="1247" fg:w="25"/><text x="81.8599%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 1.64%)</title><rect x="81.6099%" y="405" width="1.6361%" height="15" fill="rgb(251,142,44)" fg:x="1247" fg:w="25"/><text x="81.8599%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 1.64%)</title><rect x="81.6099%" y="389" width="1.6361%" height="15" fill="rgb(238,13,15)" fg:x="1247" fg:w="25"/><text x="81.8599%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 1.64%)</title><rect x="81.6099%" y="373" width="1.6361%" height="15" fill="rgb(208,107,27)" fg:x="1247" fg:w="25"/><text x="81.8599%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.26%)</title><rect x="82.9843%" y="357" width="0.2618%" height="15" fill="rgb(205,136,37)" fg:x="1268" fg:w="4"/><text x="83.2343%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.26%)</title><rect x="82.9843%" y="341" width="0.2618%" height="15" fill="rgb(250,205,27)" fg:x="1268" fg:w="4"/><text x="83.2343%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="83.2461%" y="421" width="0.0654%" height="15" fill="rgb(210,80,43)" fg:x="1272" fg:w="1"/><text x="83.4961%" y="431.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="83.2461%" y="405" width="0.0654%" height="15" fill="rgb(247,160,36)" fg:x="1272" fg:w="1"/><text x="83.4961%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.59%)</title><rect x="83.3115%" y="421" width="0.5890%" height="15" fill="rgb(234,13,49)" fg:x="1273" fg:w="9"/><text x="83.5615%" y="431.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="83.8351%" y="405" width="0.0654%" height="15" fill="rgb(234,122,0)" fg:x="1281" fg:w="1"/><text x="84.0851%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.07%)</title><rect x="83.9005%" y="421" width="0.0654%" height="15" fill="rgb(207,146,38)" fg:x="1282" fg:w="1"/><text x="84.1505%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.20%)</title><rect x="84.0314%" y="373" width="0.1963%" height="15" fill="rgb(207,177,25)" fg:x="1284" fg:w="3"/><text x="84.2814%" y="383.50"></text></g><g><title>fmod (1 samples, 0.07%)</title><rect x="84.2932%" y="309" width="0.0654%" height="15" fill="rgb(211,178,42)" fg:x="1288" fg:w="1"/><text x="84.5432%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5550%" y="229" width="0.0654%" height="15" fill="rgb(230,69,54)" fg:x="1292" fg:w="1"/><text x="84.8050%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5550%" y="213" width="0.0654%" height="15" fill="rgb(214,135,41)" fg:x="1292" fg:w="1"/><text x="84.8050%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5550%" y="197" width="0.0654%" height="15" fill="rgb(237,67,25)" fg:x="1292" fg:w="1"/><text x="84.8050%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.5550%" y="181" width="0.0654%" height="15" fill="rgb(222,189,50)" fg:x="1292" fg:w="1"/><text x="84.8050%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.20%)</title><rect x="84.5550%" y="261" width="0.1963%" height="15" fill="rgb(245,148,34)" fg:x="1292" fg:w="3"/><text x="84.8050%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.20%)</title><rect x="84.5550%" y="245" width="0.1963%" height="15" fill="rgb(222,29,6)" fg:x="1292" fg:w="3"/><text x="84.8050%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.13%)</title><rect x="84.6204%" y="229" width="0.1309%" height="15" fill="rgb(221,189,43)" fg:x="1293" fg:w="2"/><text x="84.8704%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.13%)</title><rect x="84.6204%" y="213" width="0.1309%" height="15" fill="rgb(207,36,27)" fg:x="1293" fg:w="2"/><text x="84.8704%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.7513%" y="261" width="0.0654%" height="15" fill="rgb(217,90,24)" fg:x="1295" fg:w="1"/><text x="85.0013%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="84.7513%" y="245" width="0.0654%" height="15" fill="rgb(224,66,35)" fg:x="1295" fg:w="1"/><text x="85.0013%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="84.7513%" y="229" width="0.0654%" height="15" fill="rgb(221,13,50)" fg:x="1295" fg:w="1"/><text x="85.0013%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1 samples, 0.07%)</title><rect x="84.7513%" y="213" width="0.0654%" height="15" fill="rgb(236,68,49)" fg:x="1295" fg:w="1"/><text x="85.0013%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="84.7513%" y="197" width="0.0654%" height="15" fill="rgb(229,146,28)" fg:x="1295" fg:w="1"/><text x="85.0013%" y="207.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (1 samples, 0.07%)</title><rect x="84.7513%" y="181" width="0.0654%" height="15" fill="rgb(225,31,38)" fg:x="1295" fg:w="1"/><text x="85.0013%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8168%" y="261" width="0.0654%" height="15" fill="rgb(250,208,3)" fg:x="1296" fg:w="1"/><text x="85.0668%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.8168%" y="245" width="0.0654%" height="15" fill="rgb(246,54,23)" fg:x="1296" fg:w="1"/><text x="85.0668%" y="255.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.07%)</title><rect x="84.8168%" y="229" width="0.0654%" height="15" fill="rgb(243,76,11)" fg:x="1296" fg:w="1"/><text x="85.0668%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.07%)</title><rect x="84.8168%" y="213" width="0.0654%" height="15" fill="rgb(245,21,50)" fg:x="1296" fg:w="1"/><text x="85.0668%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="84.5550%" y="293" width="0.3927%" height="15" fill="rgb(228,9,43)" fg:x="1292" fg:w="6"/><text x="84.8050%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="84.5550%" y="277" width="0.3927%" height="15" fill="rgb(208,100,47)" fg:x="1292" fg:w="6"/><text x="84.8050%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="84.8822%" y="261" width="0.0654%" height="15" fill="rgb(232,26,8)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="84.8822%" y="245" width="0.0654%" height="15" fill="rgb(216,166,38)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="84.8822%" y="229" width="0.0654%" height="15" fill="rgb(251,202,51)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="84.8822%" y="213" width="0.0654%" height="15" fill="rgb(254,216,34)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="84.8822%" y="197" width="0.0654%" height="15" fill="rgb(251,32,27)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="84.8822%" y="181" width="0.0654%" height="15" fill="rgb(208,127,28)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="84.8822%" y="165" width="0.0654%" height="15" fill="rgb(224,137,22)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="175.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.07%)</title><rect x="84.8822%" y="149" width="0.0654%" height="15" fill="rgb(254,70,32)" fg:x="1297" fg:w="1"/><text x="85.1322%" y="159.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="87.2382%" y="261" width="0.0654%" height="15" fill="rgb(229,75,37)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="271.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="87.2382%" y="245" width="0.0654%" height="15" fill="rgb(252,64,23)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="255.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="87.2382%" y="229" width="0.0654%" height="15" fill="rgb(232,162,48)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="239.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="87.2382%" y="213" width="0.0654%" height="15" fill="rgb(246,160,12)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="223.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.07%)</title><rect x="87.2382%" y="197" width="0.0654%" height="15" fill="rgb(247,166,0)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="207.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.07%)</title><rect x="87.2382%" y="181" width="0.0654%" height="15" fill="rgb(249,219,21)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="191.50"></text></g><g><title>tick_sched_handle (1 samples, 0.07%)</title><rect x="87.2382%" y="165" width="0.0654%" height="15" fill="rgb(205,209,3)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="175.50"></text></g><g><title>update_process_times (1 samples, 0.07%)</title><rect x="87.2382%" y="149" width="0.0654%" height="15" fill="rgb(243,44,1)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="159.50"></text></g><g><title>scheduler_tick (1 samples, 0.07%)</title><rect x="87.2382%" y="133" width="0.0654%" height="15" fill="rgb(206,159,16)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="143.50"></text></g><g><title>task_tick_fair (1 samples, 0.07%)</title><rect x="87.2382%" y="117" width="0.0654%" height="15" fill="rgb(244,77,30)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="127.50"></text></g><g><title>reweight_entity (1 samples, 0.07%)</title><rect x="87.2382%" y="101" width="0.0654%" height="15" fill="rgb(218,69,12)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="111.50"></text></g><g><title>avg_vruntime (1 samples, 0.07%)</title><rect x="87.2382%" y="85" width="0.0654%" height="15" fill="rgb(212,87,7)" fg:x="1333" fg:w="1"/><text x="87.4882%" y="95.50"></text></g><g><title>[libc.so.6] (26 samples, 1.70%)</title><rect x="85.6675%" y="277" width="1.7016%" height="15" fill="rgb(245,114,25)" fg:x="1309" fg:w="26"/><text x="85.9175%" y="287.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="87.3037%" y="261" width="0.0654%" height="15" fill="rgb(210,61,42)" fg:x="1334" fg:w="1"/><text x="87.5537%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="87.3691%" y="277" width="0.0654%" height="15" fill="rgb(211,52,33)" fg:x="1335" fg:w="1"/><text x="87.6191%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 3.47%)</title><rect x="84.0314%" y="405" width="3.4686%" height="15" fill="rgb(234,58,33)" fg:x="1284" fg:w="53"/><text x="84.2814%" y="415.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 3.47%)</title><rect x="84.0314%" y="389" width="3.4686%" height="15" fill="rgb(220,115,36)" fg:x="1284" fg:w="53"/><text x="84.2814%" y="399.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 3.27%)</title><rect x="84.2277%" y="373" width="3.2723%" height="15" fill="rgb(243,153,54)" fg:x="1287" fg:w="50"/><text x="84.4777%" y="383.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 3.27%)</title><rect x="84.2277%" y="357" width="3.2723%" height="15" fill="rgb(251,47,18)" fg:x="1287" fg:w="50"/><text x="84.4777%" y="367.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 3.27%)</title><rect x="84.2277%" y="341" width="3.2723%" height="15" fill="rgb(242,102,42)" fg:x="1287" fg:w="50"/><text x="84.4777%" y="351.50">all..</text></g><g><title>alloc::alloc::realloc (50 samples, 3.27%)</title><rect x="84.2277%" y="325" width="3.2723%" height="15" fill="rgb(234,31,38)" fg:x="1287" fg:w="50"/><text x="84.4777%" y="335.50">all..</text></g><g><title>realloc (48 samples, 3.14%)</title><rect x="84.3586%" y="309" width="3.1414%" height="15" fill="rgb(221,117,51)" fg:x="1289" fg:w="48"/><text x="84.6086%" y="319.50">rea..</text></g><g><title>[libc.so.6] (39 samples, 2.55%)</title><rect x="84.9476%" y="293" width="2.5524%" height="15" fill="rgb(212,20,18)" fg:x="1298" fg:w="39"/><text x="85.1976%" y="303.50">[l..</text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="87.4346%" y="277" width="0.0654%" height="15" fill="rgb(245,133,36)" fg:x="1336" fg:w="1"/><text x="87.6846%" y="287.50"></text></g><g><title>attempt7::gen_all_points (1 samples, 0.07%)</title><rect x="87.5654%" y="389" width="0.0654%" height="15" fill="rgb(212,6,19)" fg:x="1338" fg:w="1"/><text x="87.8154%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flat_map (1 samples, 0.07%)</title><rect x="87.5654%" y="373" width="0.0654%" height="15" fill="rgb(218,1,36)" fg:x="1338" fg:w="1"/><text x="87.8154%" y="383.50"></text></g><g><title>core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt;::new (1 samples, 0.07%)</title><rect x="87.5654%" y="357" width="0.0654%" height="15" fill="rgb(246,84,54)" fg:x="1338" fg:w="1"/><text x="87.8154%" y="367.50"></text></g><g><title>attempt7::choose_next_point (4 samples, 0.26%)</title><rect x="87.5000%" y="405" width="0.2618%" height="15" fill="rgb(242,110,6)" fg:x="1337" fg:w="4"/><text x="87.7500%" y="415.50"></text></g><g><title>attempt7::get_inbetween_points (2 samples, 0.13%)</title><rect x="87.6309%" y="389" width="0.1309%" height="15" fill="rgb(214,47,5)" fg:x="1339" fg:w="2"/><text x="87.8809%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="87.7618%" y="405" width="0.0654%" height="15" fill="rgb(218,159,25)" fg:x="1341" fg:w="1"/><text x="88.0118%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (62 samples, 4.06%)</title><rect x="83.9660%" y="421" width="4.0576%" height="15" fill="rgb(215,211,28)" fg:x="1283" fg:w="62"/><text x="84.2160%" y="431.50">allo..</text></g><g><title>realloc (3 samples, 0.20%)</title><rect x="87.8272%" y="405" width="0.1963%" height="15" fill="rgb(238,59,32)" fg:x="1342" fg:w="3"/><text x="88.0772%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.0236%" y="421" width="0.0654%" height="15" fill="rgb(226,82,3)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.0236%" y="405" width="0.0654%" height="15" fill="rgb(240,164,32)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="415.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.0236%" y="389" width="0.0654%" height="15" fill="rgb(232,46,7)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="399.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="88.0236%" y="373" width="0.0654%" height="15" fill="rgb(229,129,53)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="383.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.07%)</title><rect x="88.0236%" y="357" width="0.0654%" height="15" fill="rgb(234,188,29)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="367.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.07%)</title><rect x="88.0236%" y="341" width="0.0654%" height="15" fill="rgb(246,141,4)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="351.50"></text></g><g><title>tick_sched_handle (1 samples, 0.07%)</title><rect x="88.0236%" y="325" width="0.0654%" height="15" fill="rgb(229,23,39)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="335.50"></text></g><g><title>update_process_times (1 samples, 0.07%)</title><rect x="88.0236%" y="309" width="0.0654%" height="15" fill="rgb(206,12,3)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="319.50"></text></g><g><title>trigger_load_balance (1 samples, 0.07%)</title><rect x="88.0236%" y="293" width="0.0654%" height="15" fill="rgb(252,226,20)" fg:x="1345" fg:w="1"/><text x="88.2736%" y="303.50"></text></g><g><title>attempt7::choose_next_point (1 samples, 0.07%)</title><rect x="88.0890%" y="421" width="0.0654%" height="15" fill="rgb(216,123,35)" fg:x="1346" fg:w="1"/><text x="88.3390%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.07%)</title><rect x="88.0890%" y="405" width="0.0654%" height="15" fill="rgb(212,68,40)" fg:x="1346" fg:w="1"/><text x="88.3390%" y="415.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.07%)</title><rect x="88.0890%" y="389" width="0.0654%" height="15" fill="rgb(254,125,32)" fg:x="1346" fg:w="1"/><text x="88.3390%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.07%)</title><rect x="88.0890%" y="373" width="0.0654%" height="15" fill="rgb(253,97,22)" fg:x="1346" fg:w="1"/><text x="88.3390%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="88.1545%" y="245" width="0.0654%" height="15" fill="rgb(241,101,14)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="255.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.1545%" y="229" width="0.0654%" height="15" fill="rgb(238,103,29)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="239.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.1545%" y="213" width="0.0654%" height="15" fill="rgb(233,195,47)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="223.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.1545%" y="197" width="0.0654%" height="15" fill="rgb(246,218,30)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="207.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="88.1545%" y="181" width="0.0654%" height="15" fill="rgb(219,145,47)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="191.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.07%)</title><rect x="88.1545%" y="165" width="0.0654%" height="15" fill="rgb(243,12,26)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="175.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.07%)</title><rect x="88.1545%" y="149" width="0.0654%" height="15" fill="rgb(214,87,16)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="159.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.07%)</title><rect x="88.1545%" y="133" width="0.0654%" height="15" fill="rgb(208,99,42)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="143.50"></text></g><g><title>update_wall_time (1 samples, 0.07%)</title><rect x="88.1545%" y="117" width="0.0654%" height="15" fill="rgb(253,99,2)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="127.50"></text></g><g><title>timekeeping_advance (1 samples, 0.07%)</title><rect x="88.1545%" y="101" width="0.0654%" height="15" fill="rgb(220,168,23)" fg:x="1347" fg:w="1"/><text x="88.4045%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="88.2199%" y="181" width="0.0654%" height="15" fill="rgb(242,38,24)" fg:x="1348" fg:w="1"/><text x="88.4699%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="88.2853%" y="165" width="0.0654%" height="15" fill="rgb(225,182,9)" fg:x="1349" fg:w="1"/><text x="88.5353%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="88.2853%" y="149" width="0.0654%" height="15" fill="rgb(243,178,37)" fg:x="1349" fg:w="1"/><text x="88.5353%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.26%)</title><rect x="88.1545%" y="277" width="0.2618%" height="15" fill="rgb(232,139,19)" fg:x="1347" fg:w="4"/><text x="88.4045%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.26%)</title><rect x="88.1545%" y="261" width="0.2618%" height="15" fill="rgb(225,201,24)" fg:x="1347" fg:w="4"/><text x="88.4045%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.20%)</title><rect x="88.2199%" y="245" width="0.1963%" height="15" fill="rgb(221,47,46)" fg:x="1348" fg:w="3"/><text x="88.4699%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.20%)</title><rect x="88.2199%" y="229" width="0.1963%" height="15" fill="rgb(249,23,13)" fg:x="1348" fg:w="3"/><text x="88.4699%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.20%)</title><rect x="88.2199%" y="213" width="0.1963%" height="15" fill="rgb(219,9,5)" fg:x="1348" fg:w="3"/><text x="88.4699%" y="223.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.20%)</title><rect x="88.2199%" y="197" width="0.1963%" height="15" fill="rgb(254,171,16)" fg:x="1348" fg:w="3"/><text x="88.4699%" y="207.50"></text></g><g><title>realloc (2 samples, 0.13%)</title><rect x="88.2853%" y="181" width="0.1309%" height="15" fill="rgb(230,171,20)" fg:x="1349" fg:w="2"/><text x="88.5353%" y="191.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.3508%" y="165" width="0.0654%" height="15" fill="rgb(210,71,41)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="175.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="88.3508%" y="149" width="0.0654%" height="15" fill="rgb(206,173,20)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="159.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.07%)</title><rect x="88.3508%" y="133" width="0.0654%" height="15" fill="rgb(233,88,34)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="143.50"></text></g><g><title>__do_softirq (1 samples, 0.07%)</title><rect x="88.3508%" y="117" width="0.0654%" height="15" fill="rgb(223,209,46)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="127.50"></text></g><g><title>rcu_core (1 samples, 0.07%)</title><rect x="88.3508%" y="101" width="0.0654%" height="15" fill="rgb(250,43,18)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="111.50"></text></g><g><title>note_gp_changes (1 samples, 0.07%)</title><rect x="88.3508%" y="85" width="0.0654%" height="15" fill="rgb(208,13,10)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="95.50"></text></g><g><title>_raw_spin_trylock (1 samples, 0.07%)</title><rect x="88.3508%" y="69" width="0.0654%" height="15" fill="rgb(212,200,36)" fg:x="1350" fg:w="1"/><text x="88.6008%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.33%)</title><rect x="88.1545%" y="341" width="0.3272%" height="15" fill="rgb(225,90,30)" fg:x="1347" fg:w="5"/><text x="88.4045%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.33%)</title><rect x="88.1545%" y="325" width="0.3272%" height="15" fill="rgb(236,182,39)" fg:x="1347" fg:w="5"/><text x="88.4045%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.33%)</title><rect x="88.1545%" y="309" width="0.3272%" height="15" fill="rgb(212,144,35)" fg:x="1347" fg:w="5"/><text x="88.4045%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.33%)</title><rect x="88.1545%" y="293" width="0.3272%" height="15" fill="rgb(228,63,44)" fg:x="1347" fg:w="5"/><text x="88.4045%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.07%)</title><rect x="88.4162%" y="277" width="0.0654%" height="15" fill="rgb(228,109,6)" fg:x="1351" fg:w="1"/><text x="88.6662%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="88.4162%" y="261" width="0.0654%" height="15" fill="rgb(238,117,24)" fg:x="1351" fg:w="1"/><text x="88.6662%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.39%)</title><rect x="88.1545%" y="405" width="0.3927%" height="15" fill="rgb(242,26,26)" fg:x="1347" fg:w="6"/><text x="88.4045%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="88.1545%" y="389" width="0.3927%" height="15" fill="rgb(221,92,48)" fg:x="1347" fg:w="6"/><text x="88.4045%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="88.1545%" y="373" width="0.3927%" height="15" fill="rgb(209,209,32)" fg:x="1347" fg:w="6"/><text x="88.4045%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="88.1545%" y="357" width="0.3927%" height="15" fill="rgb(221,70,22)" fg:x="1347" fg:w="6"/><text x="88.4045%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="88.4817%" y="341" width="0.0654%" height="15" fill="rgb(248,145,5)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="88.4817%" y="325" width="0.0654%" height="15" fill="rgb(226,116,26)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="88.4817%" y="309" width="0.0654%" height="15" fill="rgb(244,5,17)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="88.4817%" y="293" width="0.0654%" height="15" fill="rgb(252,159,33)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="88.4817%" y="277" width="0.0654%" height="15" fill="rgb(206,71,0)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="88.4817%" y="261" width="0.0654%" height="15" fill="rgb(233,118,54)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="88.4817%" y="245" width="0.0654%" height="15" fill="rgb(234,83,48)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="255.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="88.4817%" y="229" width="0.0654%" height="15" fill="rgb(228,3,54)" fg:x="1352" fg:w="1"/><text x="88.7317%" y="239.50"></text></g><g><title>attempt7::gen_all_points (7 samples, 0.46%)</title><rect x="88.1545%" y="421" width="0.4581%" height="15" fill="rgb(226,155,13)" fg:x="1347" fg:w="7"/><text x="88.4045%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flat_map (1 samples, 0.07%)</title><rect x="88.5471%" y="405" width="0.0654%" height="15" fill="rgb(241,28,37)" fg:x="1353" fg:w="1"/><text x="88.7971%" y="415.50"></text></g><g><title>core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt;::new (1 samples, 0.07%)</title><rect x="88.5471%" y="389" width="0.0654%" height="15" fill="rgb(233,93,10)" fg:x="1353" fg:w="1"/><text x="88.7971%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="89.0707%" y="309" width="0.0654%" height="15" fill="rgb(225,113,19)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="89.0707%" y="293" width="0.0654%" height="15" fill="rgb(241,2,18)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="89.0707%" y="277" width="0.0654%" height="15" fill="rgb(228,207,21)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1 samples, 0.07%)</title><rect x="89.0707%" y="261" width="0.0654%" height="15" fill="rgb(213,211,35)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="89.0707%" y="245" width="0.0654%" height="15" fill="rgb(209,83,10)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="255.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (1 samples, 0.07%)</title><rect x="89.0707%" y="229" width="0.0654%" height="15" fill="rgb(209,164,1)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="239.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (1 samples, 0.07%)</title><rect x="89.0707%" y="213" width="0.0654%" height="15" fill="rgb(213,184,43)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="223.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="89.0707%" y="197" width="0.0654%" height="15" fill="rgb(231,61,34)" fg:x="1361" fg:w="1"/><text x="89.3207%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.13%)</title><rect x="89.0707%" y="325" width="0.1309%" height="15" fill="rgb(235,75,3)" fg:x="1361" fg:w="2"/><text x="89.3207%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="89.1361%" y="309" width="0.0654%" height="15" fill="rgb(220,106,47)" fg:x="1362" fg:w="1"/><text x="89.3861%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="89.1361%" y="293" width="0.0654%" height="15" fill="rgb(210,196,33)" fg:x="1362" fg:w="1"/><text x="89.3861%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="89.1361%" y="277" width="0.0654%" height="15" fill="rgb(229,154,42)" fg:x="1362" fg:w="1"/><text x="89.3861%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.20%)</title><rect x="89.0707%" y="341" width="0.1963%" height="15" fill="rgb(228,114,26)" fg:x="1361" fg:w="3"/><text x="89.3207%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.07%)</title><rect x="89.2016%" y="325" width="0.0654%" height="15" fill="rgb(208,144,1)" fg:x="1363" fg:w="1"/><text x="89.4516%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="89.2016%" y="309" width="0.0654%" height="15" fill="rgb(239,112,37)" fg:x="1363" fg:w="1"/><text x="89.4516%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="89.2016%" y="293" width="0.0654%" height="15" fill="rgb(210,96,50)" fg:x="1363" fg:w="1"/><text x="89.4516%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="89.2016%" y="277" width="0.0654%" height="15" fill="rgb(222,178,2)" fg:x="1363" fg:w="1"/><text x="89.4516%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="89.2016%" y="261" width="0.0654%" height="15" fill="rgb(226,74,18)" fg:x="1363" fg:w="1"/><text x="89.4516%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="89.2016%" y="245" width="0.0654%" height="15" fill="rgb(225,67,54)" fg:x="1363" fg:w="1"/><text x="89.4516%" y="255.50"></text></g><g><title>[libc.so.6] (2 samples, 0.13%)</title><rect x="89.3325%" y="229" width="0.1309%" height="15" fill="rgb(251,92,32)" fg:x="1365" fg:w="2"/><text x="89.5825%" y="239.50"></text></g><g><title>attempt7::is_close_int (3 samples, 0.20%)</title><rect x="89.3325%" y="245" width="0.1963%" height="15" fill="rgb(228,149,22)" fg:x="1365" fg:w="3"/><text x="89.5825%" y="255.50"></text></g><g><title>fmod (1 samples, 0.07%)</title><rect x="89.4634%" y="229" width="0.0654%" height="15" fill="rgb(243,54,13)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="89.4634%" y="213" width="0.0654%" height="15" fill="rgb(243,180,28)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="89.4634%" y="197" width="0.0654%" height="15" fill="rgb(208,167,24)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="89.4634%" y="181" width="0.0654%" height="15" fill="rgb(245,73,45)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="89.4634%" y="165" width="0.0654%" height="15" fill="rgb(237,203,48)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="175.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.07%)</title><rect x="89.4634%" y="149" width="0.0654%" height="15" fill="rgb(211,197,16)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="159.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.07%)</title><rect x="89.4634%" y="133" width="0.0654%" height="15" fill="rgb(243,99,51)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="143.50"></text></g><g><title>tick_sched_handle (1 samples, 0.07%)</title><rect x="89.4634%" y="117" width="0.0654%" height="15" fill="rgb(215,123,29)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="127.50"></text></g><g><title>update_process_times (1 samples, 0.07%)</title><rect x="89.4634%" y="101" width="0.0654%" height="15" fill="rgb(239,186,37)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="111.50"></text></g><g><title>scheduler_tick (1 samples, 0.07%)</title><rect x="89.4634%" y="85" width="0.0654%" height="15" fill="rgb(252,136,39)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="95.50"></text></g><g><title>task_tick_fair (1 samples, 0.07%)</title><rect x="89.4634%" y="69" width="0.0654%" height="15" fill="rgb(223,213,32)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="79.50"></text></g><g><title>reweight_entity (1 samples, 0.07%)</title><rect x="89.4634%" y="53" width="0.0654%" height="15" fill="rgb(233,115,5)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="63.50"></text></g><g><title>avg_vruntime (1 samples, 0.07%)</title><rect x="89.4634%" y="37" width="0.0654%" height="15" fill="rgb(207,226,44)" fg:x="1367" fg:w="1"/><text x="89.7134%" y="47.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.46%)</title><rect x="89.2670%" y="341" width="0.4581%" height="15" fill="rgb(208,126,0)" fg:x="1364" fg:w="7"/><text x="89.5170%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7 samples, 0.46%)</title><rect x="89.2670%" y="325" width="0.4581%" height="15" fill="rgb(244,66,21)" fg:x="1364" fg:w="7"/><text x="89.5170%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.46%)</title><rect x="89.2670%" y="309" width="0.4581%" height="15" fill="rgb(222,97,12)" fg:x="1364" fg:w="7"/><text x="89.5170%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (6 samples, 0.39%)</title><rect x="89.3325%" y="293" width="0.3927%" height="15" fill="rgb(219,213,19)" fg:x="1365" fg:w="6"/><text x="89.5825%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.39%)</title><rect x="89.3325%" y="277" width="0.3927%" height="15" fill="rgb(252,169,30)" fg:x="1365" fg:w="6"/><text x="89.5825%" y="287.50"></text></g><g><title>attempt7::get_inbetween_points::_{{closure}} (6 samples, 0.39%)</title><rect x="89.3325%" y="261" width="0.3927%" height="15" fill="rgb(206,32,51)" fg:x="1365" fg:w="6"/><text x="89.5825%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (3 samples, 0.20%)</title><rect x="89.5288%" y="245" width="0.1963%" height="15" fill="rgb(250,172,42)" fg:x="1368" fg:w="3"/><text x="89.7788%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="89.6597%" y="229" width="0.0654%" height="15" fill="rgb(209,34,43)" fg:x="1370" fg:w="1"/><text x="89.9097%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="89.7251%" y="341" width="0.0654%" height="15" fill="rgb(223,11,35)" fg:x="1371" fg:w="1"/><text x="89.9751%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::size_hint (1 samples, 0.07%)</title><rect x="89.7251%" y="325" width="0.0654%" height="15" fill="rgb(251,219,26)" fg:x="1371" fg:w="1"/><text x="89.9751%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="89.7906%" y="341" width="0.0654%" height="15" fill="rgb(231,119,3)" fg:x="1372" fg:w="1"/><text x="90.0406%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.85%)</title><rect x="89.0707%" y="405" width="0.8508%" height="15" fill="rgb(216,97,11)" fg:x="1361" fg:w="13"/><text x="89.3207%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.85%)</title><rect x="89.0707%" y="389" width="0.8508%" height="15" fill="rgb(223,59,9)" fg:x="1361" fg:w="13"/><text x="89.3207%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.85%)</title><rect x="89.0707%" y="373" width="0.8508%" height="15" fill="rgb(233,93,31)" fg:x="1361" fg:w="13"/><text x="89.3207%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.85%)</title><rect x="89.0707%" y="357" width="0.8508%" height="15" fill="rgb(239,81,33)" fg:x="1361" fg:w="13"/><text x="89.3207%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="89.8560%" y="341" width="0.0654%" height="15" fill="rgb(213,120,34)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.8560%" y="325" width="0.0654%" height="15" fill="rgb(243,49,53)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.8560%" y="309" width="0.0654%" height="15" fill="rgb(247,216,33)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="89.8560%" y="293" width="0.0654%" height="15" fill="rgb(226,26,14)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="89.8560%" y="277" width="0.0654%" height="15" fill="rgb(215,49,53)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="89.8560%" y="261" width="0.0654%" height="15" fill="rgb(245,162,40)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="89.8560%" y="245" width="0.0654%" height="15" fill="rgb(229,68,17)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="89.8560%" y="229" width="0.0654%" height="15" fill="rgb(213,182,10)" fg:x="1373" fg:w="1"/><text x="90.1060%" y="239.50"></text></g><g><title>attempt7::get_inbetween_points (21 samples, 1.37%)</title><rect x="88.6126%" y="421" width="1.3743%" height="15" fill="rgb(245,125,30)" fg:x="1354" fg:w="21"/><text x="88.8626%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter_map (1 samples, 0.07%)</title><rect x="89.9215%" y="405" width="0.0654%" height="15" fill="rgb(232,202,2)" fg:x="1374" fg:w="1"/><text x="90.1715%" y="415.50"></text></g><g><title>core::iter::adapters::filter_map::FilterMap&lt;I,F&gt;::new (1 samples, 0.07%)</title><rect x="89.9215%" y="389" width="0.0654%" height="15" fill="rgb(237,140,51)" fg:x="1374" fg:w="1"/><text x="90.1715%" y="399.50"></text></g><g><title>[libc.so.6] (9 samples, 0.59%)</title><rect x="90.1832%" y="341" width="0.5890%" height="15" fill="rgb(236,157,25)" fg:x="1378" fg:w="9"/><text x="90.4332%" y="351.50"></text></g><g><title>[libc.so.6] (9 samples, 0.59%)</title><rect x="90.7723%" y="325" width="0.5890%" height="15" fill="rgb(219,209,0)" fg:x="1387" fg:w="9"/><text x="91.0223%" y="335.50"></text></g><g><title>cfree (10 samples, 0.65%)</title><rect x="90.7723%" y="341" width="0.6545%" height="15" fill="rgb(240,116,54)" fg:x="1387" fg:w="10"/><text x="91.0223%" y="351.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="91.3613%" y="325" width="0.0654%" height="15" fill="rgb(216,10,36)" fg:x="1396" fg:w="1"/><text x="91.6113%" y="335.50"></text></g><g><title>realloc (3 samples, 0.20%)</title><rect x="91.4267%" y="341" width="0.1963%" height="15" fill="rgb(222,72,44)" fg:x="1397" fg:w="3"/><text x="91.6767%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize,isize)&gt;&gt; (26 samples, 1.70%)</title><rect x="89.9869%" y="421" width="1.7016%" height="15" fill="rgb(232,159,9)" fg:x="1375" fg:w="26"/><text x="90.2369%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (26 samples, 1.70%)</title><rect x="89.9869%" y="405" width="1.7016%" height="15" fill="rgb(210,39,32)" fg:x="1375" fg:w="26"/><text x="90.2369%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 1.70%)</title><rect x="89.9869%" y="389" width="1.7016%" height="15" fill="rgb(216,194,45)" fg:x="1375" fg:w="26"/><text x="90.2369%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 1.70%)</title><rect x="89.9869%" y="373" width="1.7016%" height="15" fill="rgb(218,18,35)" fg:x="1375" fg:w="26"/><text x="90.2369%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 1.70%)</title><rect x="89.9869%" y="357" width="1.7016%" height="15" fill="rgb(207,83,51)" fg:x="1375" fg:w="26"/><text x="90.2369%" y="367.50"></text></g><g><title>roundf32x (1 samples, 0.07%)</title><rect x="91.6230%" y="341" width="0.0654%" height="15" fill="rgb(225,63,43)" fg:x="1400" fg:w="1"/><text x="91.8730%" y="351.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="92.0157%" y="293" width="0.0654%" height="15" fill="rgb(207,57,36)" fg:x="1406" fg:w="1"/><text x="92.2657%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="92.0157%" y="277" width="0.0654%" height="15" fill="rgb(216,99,33)" fg:x="1406" fg:w="1"/><text x="92.2657%" y="287.50"></text></g><g><title>cfree (2 samples, 0.13%)</title><rect x="92.0812%" y="293" width="0.1309%" height="15" fill="rgb(225,42,16)" fg:x="1407" fg:w="2"/><text x="92.3312%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.13%)</title><rect x="92.0812%" y="277" width="0.1309%" height="15" fill="rgb(220,201,45)" fg:x="1407" fg:w="2"/><text x="92.3312%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.72%)</title><rect x="91.6885%" y="325" width="0.7199%" height="15" fill="rgb(225,33,4)" fg:x="1401" fg:w="11"/><text x="91.9385%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.72%)</title><rect x="91.6885%" y="309" width="0.7199%" height="15" fill="rgb(224,33,50)" fg:x="1401" fg:w="11"/><text x="91.9385%" y="319.50"></text></g><g><title>realloc (3 samples, 0.20%)</title><rect x="92.2120%" y="293" width="0.1963%" height="15" fill="rgb(246,198,51)" fg:x="1409" fg:w="3"/><text x="92.4620%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize,isize)&gt;&gt; (13 samples, 0.85%)</title><rect x="91.6885%" y="421" width="0.8508%" height="15" fill="rgb(205,22,4)" fg:x="1401" fg:w="13"/><text x="91.9385%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.85%)</title><rect x="91.6885%" y="405" width="0.8508%" height="15" fill="rgb(206,3,8)" fg:x="1401" fg:w="13"/><text x="91.9385%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(isize,isize),alloc::alloc::Global&gt;&gt; (13 samples, 0.85%)</title><rect x="91.6885%" y="389" width="0.8508%" height="15" fill="rgb(251,23,15)" fg:x="1401" fg:w="13"/><text x="91.9385%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.85%)</title><rect x="91.6885%" y="373" width="0.8508%" height="15" fill="rgb(252,88,28)" fg:x="1401" fg:w="13"/><text x="91.9385%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (13 samples, 0.85%)</title><rect x="91.6885%" y="357" width="0.8508%" height="15" fill="rgb(212,127,14)" fg:x="1401" fg:w="13"/><text x="91.9385%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.85%)</title><rect x="91.6885%" y="341" width="0.8508%" height="15" fill="rgb(247,145,37)" fg:x="1401" fg:w="13"/><text x="91.9385%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.13%)</title><rect x="92.4084%" y="325" width="0.1309%" height="15" fill="rgb(209,117,53)" fg:x="1412" fg:w="2"/><text x="92.6584%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (2 samples, 0.13%)</title><rect x="92.4084%" y="309" width="0.1309%" height="15" fill="rgb(212,90,42)" fg:x="1412" fg:w="2"/><text x="92.6584%" y="319.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (6 samples, 0.39%)</title><rect x="93.9791%" y="373" width="0.3927%" height="15" fill="rgb(218,164,37)" fg:x="1436" fg:w="6"/><text x="94.2291%" y="383.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (6 samples, 0.39%)</title><rect x="93.9791%" y="357" width="0.3927%" height="15" fill="rgb(246,65,34)" fg:x="1436" fg:w="6"/><text x="94.2291%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for isize&gt;::eq (6 samples, 0.39%)</title><rect x="93.9791%" y="341" width="0.3927%" height="15" fill="rgb(231,100,33)" fg:x="1436" fg:w="6"/><text x="94.2291%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.52%)</title><rect x="94.5681%" y="357" width="0.5236%" height="15" fill="rgb(228,126,14)" fg:x="1445" fg:w="8"/><text x="94.8181%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.05%)</title><rect x="94.3717%" y="373" width="1.0471%" height="15" fill="rgb(215,173,21)" fg:x="1442" fg:w="16"/><text x="94.6217%" y="383.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.33%)</title><rect x="95.0916%" y="357" width="0.3272%" height="15" fill="rgb(210,6,40)" fg:x="1453" fg:w="5"/><text x="95.3416%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (5 samples, 0.33%)</title><rect x="95.0916%" y="341" width="0.3272%" height="15" fill="rgb(212,48,18)" fg:x="1453" fg:w="5"/><text x="95.3416%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.33%)</title><rect x="95.0916%" y="325" width="0.3272%" height="15" fill="rgb(230,214,11)" fg:x="1453" fg:w="5"/><text x="95.3416%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="95.3534%" y="309" width="0.0654%" height="15" fill="rgb(254,105,39)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="95.3534%" y="293" width="0.0654%" height="15" fill="rgb(245,158,5)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="303.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="95.3534%" y="277" width="0.0654%" height="15" fill="rgb(249,208,11)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="287.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="95.3534%" y="261" width="0.0654%" height="15" fill="rgb(210,39,28)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="271.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.07%)</title><rect x="95.3534%" y="245" width="0.0654%" height="15" fill="rgb(211,56,53)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="255.50"></text></g><g><title>tick_nohz_highres_handler (1 samples, 0.07%)</title><rect x="95.3534%" y="229" width="0.0654%" height="15" fill="rgb(226,201,30)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="239.50"></text></g><g><title>tick_sched_handle (1 samples, 0.07%)</title><rect x="95.3534%" y="213" width="0.0654%" height="15" fill="rgb(239,101,34)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="223.50"></text></g><g><title>update_process_times (1 samples, 0.07%)</title><rect x="95.3534%" y="197" width="0.0654%" height="15" fill="rgb(226,209,5)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="207.50"></text></g><g><title>scheduler_tick (1 samples, 0.07%)</title><rect x="95.3534%" y="181" width="0.0654%" height="15" fill="rgb(250,105,47)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="191.50"></text></g><g><title>task_tick_fair (1 samples, 0.07%)</title><rect x="95.3534%" y="165" width="0.0654%" height="15" fill="rgb(230,72,3)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="175.50"></text></g><g><title>update_load_avg (1 samples, 0.07%)</title><rect x="95.3534%" y="149" width="0.0654%" height="15" fill="rgb(232,218,39)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="159.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.07%)</title><rect x="95.3534%" y="133" width="0.0654%" height="15" fill="rgb(248,166,6)" fg:x="1457" fg:w="1"/><text x="95.6034%" y="143.50"></text></g><g><title>attempt7::choose_next_point (217 samples, 14.20%)</title><rect x="81.2827%" y="437" width="14.2016%" height="15" fill="rgb(247,89,20)" fg:x="1242" fg:w="217"/><text x="81.5327%" y="447.50">attempt7::choose_next_..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (45 samples, 2.95%)</title><rect x="92.5393%" y="421" width="2.9450%" height="15" fill="rgb(248,130,54)" fg:x="1414" fg:w="45"/><text x="92.7893%" y="431.50">co..</text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (45 samples, 2.95%)</title><rect x="92.5393%" y="405" width="2.9450%" height="15" fill="rgb(234,196,4)" fg:x="1414" fg:w="45"/><text x="92.7893%" y="415.50">&lt;T..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (45 samples, 2.95%)</title><rect x="92.5393%" y="389" width="2.9450%" height="15" fill="rgb(250,143,31)" fg:x="1414" fg:w="45"/><text x="92.7893%" y="399.50">&lt;c..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="95.4188%" y="373" width="0.0654%" height="15" fill="rgb(211,110,34)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="95.4188%" y="357" width="0.0654%" height="15" fill="rgb(215,124,48)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="95.4188%" y="341" width="0.0654%" height="15" fill="rgb(216,46,13)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="351.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.07%)</title><rect x="95.4188%" y="325" width="0.0654%" height="15" fill="rgb(205,184,25)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="335.50"></text></g><g><title>clockevents_program_event (1 samples, 0.07%)</title><rect x="95.4188%" y="309" width="0.0654%" height="15" fill="rgb(228,1,10)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="319.50"></text></g><g><title>ktime_get (1 samples, 0.07%)</title><rect x="95.4188%" y="293" width="0.0654%" height="15" fill="rgb(213,116,27)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="303.50"></text></g><g><title>read_hpet (1 samples, 0.07%)</title><rect x="95.4188%" y="277" width="0.0654%" height="15" fill="rgb(241,95,50)" fg:x="1458" fg:w="1"/><text x="95.6688%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="95.4843%" y="421" width="0.0654%" height="15" fill="rgb(238,48,32)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="95.4843%" y="405" width="0.0654%" height="15" fill="rgb(235,113,49)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="95.4843%" y="389" width="0.0654%" height="15" fill="rgb(205,127,43)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="95.4843%" y="373" width="0.0654%" height="15" fill="rgb(250,162,2)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="95.4843%" y="357" width="0.0654%" height="15" fill="rgb(220,13,41)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="95.4843%" y="341" width="0.0654%" height="15" fill="rgb(249,221,25)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="95.4843%" y="325" width="0.0654%" height="15" fill="rgb(215,208,19)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="95.4843%" y="309" width="0.0654%" height="15" fill="rgb(236,175,2)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="319.50"></text></g><g><title>realloc (1 samples, 0.07%)</title><rect x="95.4843%" y="293" width="0.0654%" height="15" fill="rgb(241,52,2)" fg:x="1459" fg:w="1"/><text x="95.7343%" y="303.50"></text></g><g><title>attempt7::gen_all_points (2 samples, 0.13%)</title><rect x="95.4843%" y="437" width="0.1309%" height="15" fill="rgb(248,140,14)" fg:x="1459" fg:w="2"/><text x="95.7343%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::flat_map (1 samples, 0.07%)</title><rect x="95.5497%" y="421" width="0.0654%" height="15" fill="rgb(253,22,42)" fg:x="1460" fg:w="1"/><text x="95.7997%" y="431.50"></text></g><g><title>core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt;::new (1 samples, 0.07%)</title><rect x="95.5497%" y="405" width="0.0654%" height="15" fill="rgb(234,61,47)" fg:x="1460" fg:w="1"/><text x="95.7997%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="95.8115%" y="357" width="0.0654%" height="15" fill="rgb(208,226,15)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.07%)</title><rect x="95.8115%" y="341" width="0.0654%" height="15" fill="rgb(217,221,4)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="95.8115%" y="325" width="0.0654%" height="15" fill="rgb(212,174,34)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="95.8115%" y="309" width="0.0654%" height="15" fill="rgb(253,83,4)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="95.8115%" y="293" width="0.0654%" height="15" fill="rgb(250,195,49)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="95.8115%" y="277" width="0.0654%" height="15" fill="rgb(241,192,25)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="95.8115%" y="261" width="0.0654%" height="15" fill="rgb(208,124,10)" fg:x="1464" fg:w="1"/><text x="96.0615%" y="271.50"></text></g><g><title>attempt7::get_inbetween_points (5 samples, 0.33%)</title><rect x="95.6152%" y="437" width="0.3272%" height="15" fill="rgb(222,33,0)" fg:x="1461" fg:w="5"/><text x="95.8652%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="95.8115%" y="421" width="0.1309%" height="15" fill="rgb(234,209,28)" fg:x="1464" fg:w="2"/><text x="96.0615%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="95.8115%" y="405" width="0.1309%" height="15" fill="rgb(224,11,23)" fg:x="1464" fg:w="2"/><text x="96.0615%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="95.8115%" y="389" width="0.1309%" height="15" fill="rgb(232,99,1)" fg:x="1464" fg:w="2"/><text x="96.0615%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="95.8115%" y="373" width="0.1309%" height="15" fill="rgb(237,95,45)" fg:x="1464" fg:w="2"/><text x="96.0615%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="95.8770%" y="357" width="0.0654%" height="15" fill="rgb(208,109,11)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="95.8770%" y="341" width="0.0654%" height="15" fill="rgb(216,190,48)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="95.8770%" y="325" width="0.0654%" height="15" fill="rgb(251,171,36)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="95.8770%" y="309" width="0.0654%" height="15" fill="rgb(230,62,22)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="95.8770%" y="293" width="0.0654%" height="15" fill="rgb(225,114,35)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="95.8770%" y="277" width="0.0654%" height="15" fill="rgb(215,118,42)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="95.8770%" y="261" width="0.0654%" height="15" fill="rgb(243,119,21)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="95.8770%" y="245" width="0.0654%" height="15" fill="rgb(252,177,53)" fg:x="1465" fg:w="1"/><text x="96.1270%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="96.0079%" y="357" width="0.0654%" height="15" fill="rgb(237,209,29)" fg:x="1467" fg:w="1"/><text x="96.2579%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize,isize)&gt;&gt; (3 samples, 0.20%)</title><rect x="95.9424%" y="437" width="0.1963%" height="15" fill="rgb(212,65,23)" fg:x="1466" fg:w="3"/><text x="96.1924%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (3 samples, 0.20%)</title><rect x="95.9424%" y="421" width="0.1963%" height="15" fill="rgb(230,222,46)" fg:x="1466" fg:w="3"/><text x="96.1924%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.20%)</title><rect x="95.9424%" y="405" width="0.1963%" height="15" fill="rgb(215,135,32)" fg:x="1466" fg:w="3"/><text x="96.1924%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.20%)</title><rect x="95.9424%" y="389" width="0.1963%" height="15" fill="rgb(246,101,22)" fg:x="1466" fg:w="3"/><text x="96.1924%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.20%)</title><rect x="95.9424%" y="373" width="0.1963%" height="15" fill="rgb(206,107,13)" fg:x="1466" fg:w="3"/><text x="96.1924%" y="383.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="96.0733%" y="357" width="0.0654%" height="15" fill="rgb(250,100,44)" fg:x="1468" fg:w="1"/><text x="96.3233%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="96.0733%" y="341" width="0.0654%" height="15" fill="rgb(231,147,38)" fg:x="1468" fg:w="1"/><text x="96.3233%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="96.3351%" y="389" width="0.0654%" height="15" fill="rgb(229,8,40)" fg:x="1472" fg:w="1"/><text x="96.5851%" y="399.50"></text></g><g><title>attempt7::choose_next_point (254 samples, 16.62%)</title><rect x="79.8429%" y="453" width="16.6230%" height="15" fill="rgb(221,135,30)" fg:x="1220" fg:w="254"/><text x="80.0929%" y="463.50">attempt7::choose_next_point</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.33%)</title><rect x="96.1387%" y="437" width="0.3272%" height="15" fill="rgb(249,193,18)" fg:x="1469" fg:w="5"/><text x="96.3887%" y="447.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.33%)</title><rect x="96.1387%" y="421" width="0.3272%" height="15" fill="rgb(209,133,39)" fg:x="1469" fg:w="5"/><text x="96.3887%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (5 samples, 0.33%)</title><rect x="96.1387%" y="405" width="0.3272%" height="15" fill="rgb(232,100,14)" fg:x="1469" fg:w="5"/><text x="96.3887%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="96.4005%" y="389" width="0.0654%" height="15" fill="rgb(224,185,1)" fg:x="1473" fg:w="1"/><text x="96.6505%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="96.4005%" y="373" width="0.0654%" height="15" fill="rgb(223,139,8)" fg:x="1473" fg:w="1"/><text x="96.6505%" y="383.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.07%)</title><rect x="96.4005%" y="357" width="0.0654%" height="15" fill="rgb(232,213,38)" fg:x="1473" fg:w="1"/><text x="96.6505%" y="367.50"></text></g><g><title>_start (258 samples, 16.88%)</title><rect x="79.6466%" y="789" width="16.8848%" height="15" fill="rgb(207,94,22)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="799.50">_start</text></g><g><title>__libc_start_main (258 samples, 16.88%)</title><rect x="79.6466%" y="773" width="16.8848%" height="15" fill="rgb(219,183,54)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="783.50">__libc_start_main</text></g><g><title>[libc.so.6] (258 samples, 16.88%)</title><rect x="79.6466%" y="757" width="16.8848%" height="15" fill="rgb(216,185,54)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="767.50">[libc.so.6]</text></g><g><title>std::rt::lang_start (258 samples, 16.88%)</title><rect x="79.6466%" y="741" width="16.8848%" height="15" fill="rgb(254,217,39)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="751.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (258 samples, 16.88%)</title><rect x="79.6466%" y="725" width="16.8848%" height="15" fill="rgb(240,178,23)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="735.50">std::rt::lang_start_intern..</text></g><g><title>std::panic::catch_unwind (258 samples, 16.88%)</title><rect x="79.6466%" y="709" width="16.8848%" height="15" fill="rgb(218,11,47)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (258 samples, 16.88%)</title><rect x="79.6466%" y="693" width="16.8848%" height="15" fill="rgb(218,51,51)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (258 samples, 16.88%)</title><rect x="79.6466%" y="677" width="16.8848%" height="15" fill="rgb(238,126,27)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="687.50">std::panicking::try::do_ca..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (258 samples, 16.88%)</title><rect x="79.6466%" y="661" width="16.8848%" height="15" fill="rgb(249,202,22)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="671.50">std::rt::lang_start_intern..</text></g><g><title>std::panic::catch_unwind (258 samples, 16.88%)</title><rect x="79.6466%" y="645" width="16.8848%" height="15" fill="rgb(254,195,49)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (258 samples, 16.88%)</title><rect x="79.6466%" y="629" width="16.8848%" height="15" fill="rgb(208,123,14)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (258 samples, 16.88%)</title><rect x="79.6466%" y="613" width="16.8848%" height="15" fill="rgb(224,200,8)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="623.50">std::panicking::try::do_ca..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (258 samples, 16.88%)</title><rect x="79.6466%" y="597" width="16.8848%" height="15" fill="rgb(217,61,36)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="607.50">core::ops::function::impls..</text></g><g><title>std::rt::lang_start::_{{closure}} (258 samples, 16.88%)</title><rect x="79.6466%" y="581" width="16.8848%" height="15" fill="rgb(206,35,45)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="591.50">std::rt::lang_start::_{{cl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (258 samples, 16.88%)</title><rect x="79.6466%" y="565" width="16.8848%" height="15" fill="rgb(217,65,33)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="575.50">std::sys_common::backtrace..</text></g><g><title>core::ops::function::FnOnce::call_once (258 samples, 16.88%)</title><rect x="79.6466%" y="549" width="16.8848%" height="15" fill="rgb(222,158,48)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="559.50">core::ops::function::FnOnc..</text></g><g><title>attempt7::main (258 samples, 16.88%)</title><rect x="79.6466%" y="533" width="16.8848%" height="15" fill="rgb(254,2,54)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="543.50">attempt7::main</text></g><g><title>attempt7::choose_next_point (258 samples, 16.88%)</title><rect x="79.6466%" y="517" width="16.8848%" height="15" fill="rgb(250,143,38)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="527.50">attempt7::choose_next_point</text></g><g><title>attempt7::choose_next_point (258 samples, 16.88%)</title><rect x="79.6466%" y="501" width="16.8848%" height="15" fill="rgb(248,25,0)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="511.50">attempt7::choose_next_point</text></g><g><title>attempt7::choose_next_point (258 samples, 16.88%)</title><rect x="79.6466%" y="485" width="16.8848%" height="15" fill="rgb(206,152,27)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="495.50">attempt7::choose_next_point</text></g><g><title>attempt7::choose_next_point (258 samples, 16.88%)</title><rect x="79.6466%" y="469" width="16.8848%" height="15" fill="rgb(240,77,30)" fg:x="1217" fg:w="258"/><text x="79.8966%" y="479.50">attempt7::choose_next_point</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.07%)</title><rect x="96.4660%" y="453" width="0.0654%" height="15" fill="rgb(231,5,3)" fg:x="1474" fg:w="1"/><text x="96.7160%" y="463.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.07%)</title><rect x="96.4660%" y="437" width="0.0654%" height="15" fill="rgb(207,226,32)" fg:x="1474" fg:w="1"/><text x="96.7160%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.07%)</title><rect x="96.4660%" y="421" width="0.0654%" height="15" fill="rgb(222,207,47)" fg:x="1474" fg:w="1"/><text x="96.7160%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="96.5314%" y="789" width="0.0654%" height="15" fill="rgb(229,115,45)" fg:x="1475" fg:w="1"/><text x="96.7814%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="96.5314%" y="773" width="0.0654%" height="15" fill="rgb(224,191,6)" fg:x="1475" fg:w="1"/><text x="96.7814%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="96.5314%" y="757" width="0.0654%" height="15" fill="rgb(230,227,24)" fg:x="1475" fg:w="1"/><text x="96.7814%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.26%)</title><rect x="96.5969%" y="789" width="0.2618%" height="15" fill="rgb(228,80,19)" fg:x="1476" fg:w="4"/><text x="96.8469%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.26%)</title><rect x="96.5969%" y="773" width="0.2618%" height="15" fill="rgb(247,229,0)" fg:x="1476" fg:w="4"/><text x="96.8469%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="96.7932%" y="757" width="0.0654%" height="15" fill="rgb(237,194,15)" fg:x="1479" fg:w="1"/><text x="97.0432%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="96.8586%" y="789" width="0.0654%" height="15" fill="rgb(219,203,20)" fg:x="1480" fg:w="1"/><text x="97.1086%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="97.1204%" y="709" width="0.3927%" height="15" fill="rgb(234,128,8)" fg:x="1484" fg:w="6"/><text x="97.3704%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.39%)</title><rect x="97.1204%" y="693" width="0.3927%" height="15" fill="rgb(248,202,8)" fg:x="1484" fg:w="6"/><text x="97.3704%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.39%)</title><rect x="97.1204%" y="677" width="0.3927%" height="15" fill="rgb(206,104,37)" fg:x="1484" fg:w="6"/><text x="97.3704%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.33%)</title><rect x="97.1859%" y="661" width="0.3272%" height="15" fill="rgb(223,8,27)" fg:x="1485" fg:w="5"/><text x="97.4359%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.33%)</title><rect x="97.1859%" y="645" width="0.3272%" height="15" fill="rgb(216,217,28)" fg:x="1485" fg:w="5"/><text x="97.4359%" y="655.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.33%)</title><rect x="97.1859%" y="629" width="0.3272%" height="15" fill="rgb(249,199,1)" fg:x="1485" fg:w="5"/><text x="97.4359%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.59%)</title><rect x="97.1204%" y="773" width="0.5890%" height="15" fill="rgb(240,85,17)" fg:x="1484" fg:w="9"/><text x="97.3704%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.59%)</title><rect x="97.1204%" y="757" width="0.5890%" height="15" fill="rgb(206,108,45)" fg:x="1484" fg:w="9"/><text x="97.3704%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.59%)</title><rect x="97.1204%" y="741" width="0.5890%" height="15" fill="rgb(245,210,41)" fg:x="1484" fg:w="9"/><text x="97.3704%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.59%)</title><rect x="97.1204%" y="725" width="0.5890%" height="15" fill="rgb(206,13,37)" fg:x="1484" fg:w="9"/><text x="97.3704%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.20%)</title><rect x="97.5131%" y="709" width="0.1963%" height="15" fill="rgb(250,61,18)" fg:x="1490" fg:w="3"/><text x="97.7631%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.20%)</title><rect x="97.5131%" y="693" width="0.1963%" height="15" fill="rgb(235,172,48)" fg:x="1490" fg:w="3"/><text x="97.7631%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="97.7094%" y="773" width="0.0654%" height="15" fill="rgb(249,201,17)" fg:x="1493" fg:w="1"/><text x="97.9594%" y="783.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="97.7094%" y="757" width="0.0654%" height="15" fill="rgb(219,208,6)" fg:x="1493" fg:w="1"/><text x="97.9594%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="97.7749%" y="773" width="0.2618%" height="15" fill="rgb(248,31,23)" fg:x="1494" fg:w="4"/><text x="98.0249%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.20%)</title><rect x="97.8403%" y="757" width="0.1963%" height="15" fill="rgb(245,15,42)" fg:x="1495" fg:w="3"/><text x="98.0903%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="98.3639%" y="693" width="0.1309%" height="15" fill="rgb(222,217,39)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.13%)</title><rect x="98.3639%" y="677" width="0.1309%" height="15" fill="rgb(210,219,27)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="98.3639%" y="661" width="0.1309%" height="15" fill="rgb(252,166,36)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="98.3639%" y="645" width="0.1309%" height="15" fill="rgb(245,132,34)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="98.3639%" y="629" width="0.1309%" height="15" fill="rgb(236,54,3)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.13%)</title><rect x="98.3639%" y="613" width="0.1309%" height="15" fill="rgb(241,173,43)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.13%)</title><rect x="98.3639%" y="597" width="0.1309%" height="15" fill="rgb(215,190,9)" fg:x="1503" fg:w="2"/><text x="98.6139%" y="607.50"></text></g><g><title>attempt7::get_inbetween_points (8 samples, 0.52%)</title><rect x="98.0366%" y="773" width="0.5236%" height="15" fill="rgb(242,101,16)" fg:x="1498" fg:w="8"/><text x="98.2866%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.20%)</title><rect x="98.3639%" y="757" width="0.1963%" height="15" fill="rgb(223,190,21)" fg:x="1503" fg:w="3"/><text x="98.6139%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.20%)</title><rect x="98.3639%" y="741" width="0.1963%" height="15" fill="rgb(215,228,25)" fg:x="1503" fg:w="3"/><text x="98.6139%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.20%)</title><rect x="98.3639%" y="725" width="0.1963%" height="15" fill="rgb(225,36,22)" fg:x="1503" fg:w="3"/><text x="98.6139%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.20%)</title><rect x="98.3639%" y="709" width="0.1963%" height="15" fill="rgb(251,106,46)" fg:x="1503" fg:w="3"/><text x="98.6139%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="98.4948%" y="693" width="0.0654%" height="15" fill="rgb(208,90,1)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="98.4948%" y="677" width="0.0654%" height="15" fill="rgb(243,10,4)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="98.4948%" y="661" width="0.0654%" height="15" fill="rgb(212,137,27)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="98.4948%" y="645" width="0.0654%" height="15" fill="rgb(231,220,49)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="98.4948%" y="629" width="0.0654%" height="15" fill="rgb(237,96,20)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="98.4948%" y="613" width="0.0654%" height="15" fill="rgb(239,229,30)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="98.4948%" y="597" width="0.0654%" height="15" fill="rgb(219,65,33)" fg:x="1505" fg:w="1"/><text x="98.7448%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize,isize)&gt;&gt; (1 samples, 0.07%)</title><rect x="98.5602%" y="773" width="0.0654%" height="15" fill="rgb(243,134,7)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="98.5602%" y="757" width="0.0654%" height="15" fill="rgb(216,177,54)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(isize,isize),alloc::alloc::Global&gt;&gt; (1 samples, 0.07%)</title><rect x="98.5602%" y="741" width="0.0654%" height="15" fill="rgb(211,160,20)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="98.5602%" y="725" width="0.0654%" height="15" fill="rgb(239,85,39)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize,isize)&gt;&gt; (1 samples, 0.07%)</title><rect x="98.5602%" y="709" width="0.0654%" height="15" fill="rgb(232,125,22)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="98.5602%" y="693" width="0.0654%" height="15" fill="rgb(244,57,34)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="98.5602%" y="677" width="0.0654%" height="15" fill="rgb(214,203,32)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="98.5602%" y="661" width="0.0654%" height="15" fill="rgb(207,58,43)" fg:x="1506" fg:w="1"/><text x="98.8102%" y="671.50"></text></g><g><title>attempt7::choose_next_point (29 samples, 1.90%)</title><rect x="96.9241%" y="789" width="1.8979%" height="15" fill="rgb(215,193,15)" fg:x="1481" fg:w="29"/><text x="97.1741%" y="799.50">a..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.20%)</title><rect x="98.6257%" y="773" width="0.1963%" height="15" fill="rgb(232,15,44)" fg:x="1507" fg:w="3"/><text x="98.8757%" y="783.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.20%)</title><rect x="98.6257%" y="757" width="0.1963%" height="15" fill="rgb(212,3,48)" fg:x="1507" fg:w="3"/><text x="98.8757%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (3 samples, 0.20%)</title><rect x="98.6257%" y="741" width="0.1963%" height="15" fill="rgb(218,128,7)" fg:x="1507" fg:w="3"/><text x="98.8757%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="98.7565%" y="725" width="0.0654%" height="15" fill="rgb(226,216,39)" fg:x="1509" fg:w="1"/><text x="99.0065%" y="735.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="98.8220%" y="789" width="0.0654%" height="15" fill="rgb(243,47,51)" fg:x="1510" fg:w="1"/><text x="99.0720%" y="799.50"></text></g><g><title>elf_load (1 samples, 0.07%)</title><rect x="98.8874%" y="693" width="0.0654%" height="15" fill="rgb(241,183,40)" fg:x="1511" fg:w="1"/><text x="99.1374%" y="703.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.07%)</title><rect x="98.8874%" y="677" width="0.0654%" height="15" fill="rgb(231,217,32)" fg:x="1511" fg:w="1"/><text x="99.1374%" y="687.50"></text></g><g><title>do_mmap (1 samples, 0.07%)</title><rect x="98.8874%" y="661" width="0.0654%" height="15" fill="rgb(229,61,38)" fg:x="1511" fg:w="1"/><text x="99.1374%" y="671.50"></text></g><g><title>mmap_region (1 samples, 0.07%)</title><rect x="98.8874%" y="645" width="0.0654%" height="15" fill="rgb(225,210,5)" fg:x="1511" fg:w="1"/><text x="99.1374%" y="655.50"></text></g><g><title>mas_preallocate (1 samples, 0.07%)</title><rect x="98.8874%" y="629" width="0.0654%" height="15" fill="rgb(231,79,45)" fg:x="1511" fg:w="1"/><text x="99.1374%" y="639.50"></text></g><g><title>mas_alloc_nodes (1 samples, 0.07%)</title><rect x="98.8874%" y="613" width="0.0654%" height="15" fill="rgb(224,100,7)" fg:x="1511" fg:w="1"/><text x="99.1374%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.13%)</title><rect x="98.8874%" y="789" width="0.1309%" height="15" fill="rgb(241,198,18)" fg:x="1511" fg:w="2"/><text x="99.1374%" y="799.50"></text></g><g><title>do_syscall_64 (2 samples, 0.13%)</title><rect x="98.8874%" y="773" width="0.1309%" height="15" fill="rgb(252,97,53)" fg:x="1511" fg:w="2"/><text x="99.1374%" y="783.50"></text></g><g><title>__x64_sys_execve (2 samples, 0.13%)</title><rect x="98.8874%" y="757" width="0.1309%" height="15" fill="rgb(220,88,7)" fg:x="1511" fg:w="2"/><text x="99.1374%" y="767.50"></text></g><g><title>do_execveat_common.isra.0 (2 samples, 0.13%)</title><rect x="98.8874%" y="741" width="0.1309%" height="15" fill="rgb(213,176,14)" fg:x="1511" fg:w="2"/><text x="99.1374%" y="751.50"></text></g><g><title>bprm_execve (2 samples, 0.13%)</title><rect x="98.8874%" y="725" width="0.1309%" height="15" fill="rgb(246,73,7)" fg:x="1511" fg:w="2"/><text x="99.1374%" y="735.50"></text></g><g><title>load_elf_binary (2 samples, 0.13%)</title><rect x="98.8874%" y="709" width="0.1309%" height="15" fill="rgb(245,64,36)" fg:x="1511" fg:w="2"/><text x="99.1374%" y="719.50"></text></g><g><title>randomize_stack_top (1 samples, 0.07%)</title><rect x="98.9529%" y="693" width="0.0654%" height="15" fill="rgb(245,80,10)" fg:x="1512" fg:w="1"/><text x="99.2029%" y="703.50"></text></g><g><title>fmod (1 samples, 0.07%)</title><rect x="99.0183%" y="789" width="0.0654%" height="15" fill="rgb(232,107,50)" fg:x="1513" fg:w="1"/><text x="99.2683%" y="799.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="99.0838%" y="789" width="0.0654%" height="15" fill="rgb(253,3,0)" fg:x="1514" fg:w="1"/><text x="99.3338%" y="799.50"></text></g><g><title>attempt7 (1,523 samples, 99.67%)</title><rect x="0.0000%" y="805" width="99.6728%" height="15" fill="rgb(212,99,53)" fg:x="0" fg:w="1523"/><text x="0.2500%" y="815.50">attempt7</text></g><g><title>realloc (8 samples, 0.52%)</title><rect x="99.1492%" y="789" width="0.5236%" height="15" fill="rgb(249,111,54)" fg:x="1515" fg:w="8"/><text x="99.3992%" y="799.50"></text></g><g><title>all (1,528 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(249,55,30)" fg:x="0" fg:w="1528"/><text x="0.2500%" y="831.50"></text></g><g><title>perf-exec (5 samples, 0.33%)</title><rect x="99.6728%" y="805" width="0.3272%" height="15" fill="rgb(237,47,42)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.33%)</title><rect x="99.6728%" y="789" width="0.3272%" height="15" fill="rgb(211,20,18)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="799.50"></text></g><g><title>do_syscall_64 (5 samples, 0.33%)</title><rect x="99.6728%" y="773" width="0.3272%" height="15" fill="rgb(231,203,46)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="783.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.33%)</title><rect x="99.6728%" y="757" width="0.3272%" height="15" fill="rgb(237,142,3)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="767.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.33%)</title><rect x="99.6728%" y="741" width="0.3272%" height="15" fill="rgb(241,107,1)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="751.50"></text></g><g><title>bprm_execve (5 samples, 0.33%)</title><rect x="99.6728%" y="725" width="0.3272%" height="15" fill="rgb(229,83,13)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="735.50"></text></g><g><title>load_elf_binary (5 samples, 0.33%)</title><rect x="99.6728%" y="709" width="0.3272%" height="15" fill="rgb(241,91,40)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="719.50"></text></g><g><title>begin_new_exec (5 samples, 0.33%)</title><rect x="99.6728%" y="693" width="0.3272%" height="15" fill="rgb(225,3,45)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="703.50"></text></g><g><title>perf_event_exec (5 samples, 0.33%)</title><rect x="99.6728%" y="677" width="0.3272%" height="15" fill="rgb(244,223,14)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="687.50"></text></g><g><title>ctx_resched (5 samples, 0.33%)</title><rect x="99.6728%" y="661" width="0.3272%" height="15" fill="rgb(224,124,37)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="671.50"></text></g><g><title>ctx_groups_sched_in (5 samples, 0.33%)</title><rect x="99.6728%" y="645" width="0.3272%" height="15" fill="rgb(251,171,30)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="655.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5 samples, 0.33%)</title><rect x="99.6728%" y="629" width="0.3272%" height="15" fill="rgb(236,46,54)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="639.50"></text></g><g><title>merge_sched_in (5 samples, 0.33%)</title><rect x="99.6728%" y="613" width="0.3272%" height="15" fill="rgb(245,213,5)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="623.50"></text></g><g><title>event_sched_in (5 samples, 0.33%)</title><rect x="99.6728%" y="597" width="0.3272%" height="15" fill="rgb(230,144,27)" fg:x="1523" fg:w="5"/><text x="99.9228%" y="607.50"></text></g><g><title>perf_ibs_add (4 samples, 0.26%)</title><rect x="99.7382%" y="581" width="0.2618%" height="15" fill="rgb(220,86,6)" fg:x="1524" fg:w="4"/><text x="99.9882%" y="591.50"></text></g><g><title>perf_event_update_userpage (4 samples, 0.26%)</title><rect x="99.7382%" y="565" width="0.2618%" height="15" fill="rgb(240,20,13)" fg:x="1524" fg:w="4"/><text x="99.9882%" y="575.50"></text></g></svg></svg>