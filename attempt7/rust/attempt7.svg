<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>alloc::alloc::{impl#1   (28 samples, 3.44%)</title><rect x="984.4" y="213" width="40.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="987.40" y="223.5" >all..</text>
</g>
<g >
<title>fmodf64   (3 samples, 0.37%)</title><rect x="1145.1" y="133" width="4.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1148.12" y="143.5" ></text>
</g>
<g >
<title>alloc::slice::{impl#0   (57 samples, 6.99%)</title><rect x="521.1" y="293" width="82.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="524.09" y="303.5" >alloc::sl..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec&lt;(isize, isize), alloc::alloc::Global&gt;   (1 samples, 0.12%)</title><rect x="30.3" y="309" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="33.27" y="319.5" ></text>
</g>
<g >
<title>realloc   (7 samples, 0.86%)</title><rect x="15.8" y="229" width="10.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="18.79" y="239.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (1 samples, 0.12%)</title><rect x="30.3" y="277" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="33.27" y="287.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#6   (3 samples, 0.37%)</title><rect x="781.7" y="181" width="4.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="784.71" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#1   (4 samples, 0.49%)</title><rect x="1152.4" y="261" width="5.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1155.36" y="271.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (65 samples, 7.98%)</title><rect x="1024.9" y="277" width="94.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1027.94" y="287.5" >core::slice..</text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (1 samples, 0.12%)</title><rect x="1156.7" y="245" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1159.70" y="255.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points::{closure#1   (7 samples, 0.86%)</title><rect x="1142.2" y="165" width="10.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1145.22" y="175.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (1 samples, 0.12%)</title><rect x="1155.3" y="197" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1158.25" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt7::get_inbetween_points::{closure_env#1   (7 samples, 0.86%)</title><rect x="1142.2" y="229" width="10.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1145.22" y="239.5" ></text>
</g>
<g >
<title>core::result::Result&lt;core::ptr::non_null::NonNull&lt;[u8]&gt;, core::alloc::AllocError&gt;::map_err&lt;core::ptr::non_null::NonNull&lt;[u8]&gt;, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1   (8 samples, 0.98%)</title><rect x="463.2" y="245" width="11.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="466.18" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt7::get_inbetween_points::{closure_env#1   (3 samples, 0.37%)</title><rect x="1182.8" y="245" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1185.76" y="255.5" ></text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt;   (1 samples, 0.12%)</title><rect x="1188.6" y="245" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1191.55" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::{impl#0   (1 samples, 0.12%)</title><rect x="670.2" y="53" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="673.22" y="63.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (16 samples, 1.96%)</title><rect x="580.5" y="245" width="23.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="583.45" y="255.5" >c..</text>
</g>
<g >
<title>attempt7::choose_next_point   (814 samples, 99.88%)</title><rect x="10.0" y="373" width="1178.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >attempt7::choose_next_point  </text>
</g>
<g >
<title>alloc::slice::hack::{impl#1   (57 samples, 6.99%)</title><rect x="521.1" y="261" width="82.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="524.09" y="271.5" >alloc::sl..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (7 samples, 0.86%)</title><rect x="761.4" y="181" width="10.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="764.44" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (2 samples, 0.25%)</title><rect x="1184.2" y="213" width="2.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1187.21" y="223.5" ></text>
</g>
<g >
<title>core::cmp::max_by&lt;usize, fn(&amp;usize, &amp;usize) -&gt; core::cmp::Ordering&gt;   (1 samples, 0.12%)</title><rect x="1123.4" y="117" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1126.40" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt7::get_inbetween_points::{closure_env#1   (3 samples, 0.37%)</title><rect x="771.6" y="181" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="774.57" y="191.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points::{closure#1   (3 samples, 0.37%)</title><rect x="771.6" y="117" width="4.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="774.57" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc   (6 samples, 0.74%)</title><rect x="1159.6" y="261" width="8.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1162.60" y="271.5" ></text>
</g>
<g >
<title>core::cmp::max&lt;usize&gt;   (5 samples, 0.61%)</title><rect x="474.8" y="261" width="7.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="477.76" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (7 samples, 0.86%)</title><rect x="761.4" y="197" width="10.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="764.44" y="207.5" ></text>
</g>
<g >
<title>__rust_dealloc   (6 samples, 0.74%)</title><rect x="985.9" y="181" width="8.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="988.85" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::ptr&lt;(isize, isize), alloc::alloc::Global&gt;   (3 samples, 0.37%)</title><rect x="628.2" y="181" width="4.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="631.23" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (1 samples, 0.12%)</title><rect x="91.1" y="213" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="94.08" y="223.5" ></text>
</g>
<g >
<title>__rust_dealloc   (5 samples, 0.61%)</title><rect x="854.1" y="229" width="7.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="857.10" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (3 samples, 0.37%)</title><rect x="1182.8" y="277" width="4.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1185.76" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl   (28 samples, 3.44%)</title><rect x="41.9" y="245" width="40.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="44.85" y="255.5" >all..</text>
</g>
<g >
<title>core::cmp::Ord::max&lt;usize&gt;   (1 samples, 0.12%)</title><rect x="1123.4" y="133" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1126.40" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (63 samples, 7.73%)</title><rect x="616.7" y="277" width="91.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="619.65" y="287.5" >alloc::vec..</text>
</g>
<g >
<title>free   (21 samples, 2.58%)</title><rect x="994.5" y="181" width="30.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="997.54" y="191.5" >fr..</text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#5   (2 samples, 0.25%)</title><rect x="85.3" y="325" width="2.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="88.29" y="335.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::and_then_or_clear&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (1 samples, 0.12%)</title><rect x="706.4" y="197" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="709.42" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (1 samples, 0.12%)</title><rect x="1137.9" y="229" width="1.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1140.88" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (3 samples, 0.37%)</title><rect x="1182.8" y="293" width="4.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1185.76" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (6 samples, 0.74%)</title><rect x="838.2" y="149" width="8.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="841.17" y="159.5" ></text>
</g>
<g >
<title>malloc   (29 samples, 3.56%)</title><rect x="538.5" y="149" width="42.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="541.47" y="159.5" >mal..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (54 samples, 6.63%)</title><rect x="758.5" y="245" width="78.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="761.54" y="255.5" >alloc::ve..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="30.3" y="261" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="33.27" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (7 samples, 0.86%)</title><rect x="1158.1" y="325" width="10.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1161.15" y="335.5" ></text>
</g>
<g >
<title>??   (1 samples, 0.12%)</title><rect x="1120.5" y="53" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1123.50" y="63.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (4 samples, 0.49%)</title><rect x="848.3" y="181" width="5.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="851.31" y="191.5" ></text>
</g>
<g >
<title>__rust_alloc   (1 samples, 0.12%)</title><rect x="761.4" y="117" width="1.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="764.44" y="127.5" ></text>
</g>
<g >
<title>realloc   (18 samples, 2.21%)</title><rect x="641.3" y="69" width="26.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="644.26" y="79.5" >r..</text>
</g>
<g >
<title>free   (2 samples, 0.25%)</title><rect x="1168.3" y="197" width="2.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1171.28" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#1   (4 samples, 0.49%)</title><rect x="848.3" y="229" width="5.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="851.31" y="239.5" ></text>
</g>
<g >
<title>??   (14 samples, 1.72%)</title><rect x="1004.7" y="165" width="20.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1007.67" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (1 samples, 0.12%)</title><rect x="1137.9" y="181" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1140.88" y="191.5" ></text>
</g>
<g >
<title>??   (125 samples, 15.34%)</title><rect x="267.7" y="165" width="181.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="270.72" y="175.5" >??  </text>
</g>
<g >
<title>alloc::alloc::alloc   (1 samples, 0.12%)</title><rect x="91.1" y="181" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="94.08" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (12 samples, 1.47%)</title><rect x="836.7" y="261" width="17.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="839.72" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#0   (3 samples, 0.37%)</title><rect x="771.6" y="229" width="4.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="774.57" y="239.5" ></text>
</g>
<g >
<title>attempt7::choose_next_point   (6 samples, 0.74%)</title><rect x="608.0" y="309" width="8.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="610.96" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{closure#0   (2 samples, 0.25%)</title><rect x="848.3" y="133" width="2.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="851.31" y="143.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#6   (2 samples, 0.25%)</title><rect x="851.2" y="149" width="2.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="854.20" y="159.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#6   (1 samples, 0.12%)</title><rect x="1126.3" y="133" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1129.29" y="143.5" ></text>
</g>
<g >
<title>std::alloc::__default_lib_allocator::__rdl_realloc   (2 samples, 0.25%)</title><rect x="79.5" y="213" width="2.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="82.50" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (35 samples, 4.29%)</title><rect x="786.0" y="181" width="50.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="789.05" y="191.5" >core:..</text>
</g>
<g >
<title>alloc::alloc::{impl#1   (201 samples, 24.66%)</title><rect x="172.2" y="245" width="291.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="175.16" y="255.5" >alloc::alloc::{impl#1  </text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_desugared&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#1   (2 samples, 0.25%)</title><rect x="1139.3" y="229" width="2.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1142.33" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="1137.9" y="245" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1140.88" y="255.5" ></text>
</g>
<g >
<title>??   (11 samples, 1.35%)</title><rect x="651.4" y="37" width="15.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="654.40" y="47.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (11 samples, 1.35%)</title><rect x="1136.4" y="293" width="16.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1139.43" y="303.5" ></text>
</g>
<g >
<title>??   (164 samples, 20.12%)</title><rect x="211.3" y="181" width="237.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="214.25" y="191.5" >??  </text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (90 samples, 11.04%)</title><rect x="854.1" y="277" width="130.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="857.10" y="287.5" >alloc::raw_vec::..</text>
</g>
<g >
<title>alloc::alloc::alloc   (1 samples, 0.12%)</title><rect x="1137.9" y="149" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1140.88" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc   (23 samples, 2.82%)</title><rect x="638.4" y="85" width="33.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="641.37" y="95.5" >al..</text>
</g>
<g >
<title>alloc::vec::{impl#15   (3 samples, 0.37%)</title><rect x="603.6" y="309" width="4.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="606.62" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (8 samples, 0.98%)</title><rect x="836.7" y="181" width="11.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="839.72" y="191.5" ></text>
</g>
<g >
<title>__rust_alloc   (4 samples, 0.49%)</title><rect x="532.7" y="149" width="5.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="535.67" y="159.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max&lt;usize&gt;   (5 samples, 0.61%)</title><rect x="474.8" y="245" width="7.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="477.76" y="255.5" ></text>
</g>
<g >
<title>attempt7::is_close_int   (1 samples, 0.12%)</title><rect x="774.5" y="101" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="777.47" y="111.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="83.8" y="309" width="1.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="86.84" y="319.5" ></text>
</g>
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (8 samples, 0.98%)</title><rect x="509.5" y="293" width="11.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="512.51" y="303.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points   (20 samples, 2.45%)</title><rect x="1129.2" y="325" width="28.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1132.19" y="335.5" >at..</text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (2 samples, 0.25%)</title><rect x="1168.3" y="277" width="2.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1171.28" y="287.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::and_then_or_clear&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (2 samples, 0.25%)</title><rect x="1124.8" y="181" width="2.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1127.85" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_desugared&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#1   (3 samples, 0.37%)</title><rect x="771.6" y="213" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="774.57" y="223.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to&lt;std::io::stdio::Stdout&gt;   (1 samples, 0.12%)</title><rect x="1188.6" y="389" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1191.55" y="399.5" ></text>
</g>
<g >
<title>attempt7::choose_next_point   (814 samples, 99.88%)</title><rect x="10.0" y="389" width="1178.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >attempt7::choose_next_point  </text>
</g>
<g >
<title>alloc::vec::{impl#10   (57 samples, 6.99%)</title><rect x="521.1" y="309" width="82.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="524.09" y="319.5" >alloc::ve..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#1   (12 samples, 1.47%)</title><rect x="836.7" y="245" width="17.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="839.72" y="255.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once&lt;fn(&amp;mut core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (5 samples, 0.61%)</title><rect x="691.9" y="149" width="7.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="694.94" y="159.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (3 samples, 0.37%)</title><rect x="771.6" y="133" width="4.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="774.57" y="143.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (7 samples, 0.86%)</title><rect x="1142.2" y="181" width="10.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1145.22" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (28 samples, 3.44%)</title><rect x="41.9" y="261" width="40.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="44.85" y="271.5" >all..</text>
</g>
<g >
<title>std::io::Write::write_fmt&lt;std::io::stdio::StdoutLock&gt;   (1 samples, 0.12%)</title><rect x="1188.6" y="341" width="1.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1191.55" y="351.5" ></text>
</g>
<g >
<title>attempt7::choose_next_point   (795 samples, 97.55%)</title><rect x="31.7" y="341" width="1151.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="34.72" y="351.5" >attempt7::choose_next_point  </text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#1   (1 samples, 0.12%)</title><rect x="1155.3" y="245" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1158.25" y="255.5" ></text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (1 samples, 0.12%)</title><rect x="1187.1" y="325" width="1.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1190.10" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::grow_amortized&lt;(isize, isize), alloc::alloc::Global&gt;   (33 samples, 4.05%)</title><rect x="36.1" y="293" width="47.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="39.06" y="303.5" >allo..</text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (2 samples, 0.25%)</title><rect x="1168.3" y="309" width="2.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1171.28" y="319.5" ></text>
</g>
<g >
<title>core::result::{impl#26   (1 samples, 0.12%)</title><rect x="82.4" y="277" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="85.39" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;   (219 samples, 26.87%)</title><rect x="157.7" y="261" width="317.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="160.68" y="271.5" >alloc::raw_vec::finish_grow&lt;alloc::alloc::..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (62 samples, 7.61%)</title><rect x="618.1" y="245" width="89.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="621.10" y="255.5" >alloc::vec..</text>
</g>
<g >
<title>??   (16 samples, 1.96%)</title><rect x="56.3" y="181" width="23.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="59.33" y="191.5" >?..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (1 samples, 0.12%)</title><rect x="1137.9" y="165" width="1.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1140.88" y="175.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::{impl#0   (1 samples, 0.12%)</title><rect x="92.5" y="261" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="95.53" y="271.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec&lt;(isize, isize), alloc::alloc::Global&gt;   (57 samples, 6.99%)</title><rect x="521.1" y="277" width="82.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="524.09" y="287.5" >alloc::sl..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (28 samples, 3.44%)</title><rect x="984.4" y="309" width="40.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="987.40" y="319.5" >cor..</text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (65 samples, 7.98%)</title><rect x="1024.9" y="293" width="94.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1027.94" y="303.5" >core::slice..</text>
</g>
<g >
<title>attempt7::choose_next_point   (814 samples, 99.88%)</title><rect x="10.0" y="357" width="1178.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >attempt7::choose_next_point  </text>
</g>
<g >
<title>core::slice::iter::{impl#181   (14 samples, 1.72%)</title><rect x="1098.8" y="261" width="20.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1101.79" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once&lt;fn(&amp;mut core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (1 samples, 0.12%)</title><rect x="1126.3" y="165" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1129.29" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (4 samples, 0.49%)</title><rect x="1152.4" y="277" width="5.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1155.36" y="287.5" ></text>
</g>
<g >
<title>std::io::buffered::linewriter::{impl#2   (1 samples, 0.12%)</title><rect x="1188.6" y="277" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.55" y="287.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::{impl#3   (1 samples, 0.12%)</title><rect x="706.4" y="229" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="709.42" y="239.5" ></text>
</g>
<g >
<title>??   (4 samples, 0.49%)</title><rect x="20.1" y="197" width="5.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="23.13" y="207.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (1 samples, 0.12%)</title><rect x="1126.3" y="149" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1129.29" y="159.5" ></text>
</g>
<g >
<title>core::result::{impl#26   (1 samples, 0.12%)</title><rect x="676.0" y="133" width="1.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="679.01" y="143.5" ></text>
</g>
<g >
<title>??   (82 samples, 10.06%)</title><rect x="865.7" y="213" width="118.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="868.68" y="223.5" >??  </text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#1   (11 samples, 1.35%)</title><rect x="1136.4" y="309" width="16.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1139.43" y="319.5" ></text>
</g>
<g >
<title>all (815 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>core::cmp::max_by&lt;usize, fn(&amp;usize, &amp;usize) -&gt; core::cmp::Ordering&gt;   (1 samples, 0.12%)</title><rect x="27.4" y="261" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="30.37" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (2 samples, 0.25%)</title><rect x="89.6" y="229" width="2.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="92.63" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (28 samples, 3.44%)</title><rect x="984.4" y="293" width="40.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="987.40" y="303.5" >all..</text>
</g>
<g >
<title>core::iter::range::{impl#5   (2 samples, 0.25%)</title><rect x="851.2" y="133" width="2.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="854.20" y="143.5" ></text>
</g>
<g >
<title>attempt7::main   (815 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >attempt7::main  </text>
</g>
<g >
<title>std::io::stdio::_print   (1 samples, 0.12%)</title><rect x="1188.6" y="405" width="1.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1191.55" y="415.5" ></text>
</g>
<g >
<title>??   (4 samples, 0.49%)</title><rect x="1162.5" y="229" width="5.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1165.49" y="239.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#14   (1 samples, 0.12%)</title><rect x="1188.6" y="293" width="1.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.55" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::{impl#0   (1 samples, 0.12%)</title><rect x="25.9" y="213" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="28.93" y="223.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::{impl#18   (16 samples, 1.96%)</title><rect x="677.5" y="181" width="23.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="680.46" y="191.5" >c..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_trusted&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#0   (4 samples, 0.49%)</title><rect x="848.3" y="213" width="5.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="851.31" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc   (28 samples, 3.44%)</title><rect x="41.9" y="229" width="40.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="44.85" y="239.5" >all..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl   (23 samples, 2.82%)</title><rect x="638.4" y="101" width="33.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="641.37" y="111.5" >al..</text>
</g>
<g >
<title>core::iter::adapters::map::{impl#2   (5 samples, 0.61%)</title><rect x="691.9" y="133" width="7.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="694.94" y="143.5" ></text>
</g>
<g >
<title>fmodf64   (26 samples, 3.19%)</title><rect x="799.1" y="117" width="37.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="802.08" y="127.5" >fmo..</text>
</g>
<g >
<title>core::result::Result&lt;core::ptr::non_null::NonNull&lt;[u8]&gt;, core::alloc::AllocError&gt;::map_err&lt;core::ptr::non_null::NonNull&lt;[u8]&gt;, core::alloc::AllocError, alloc::collections::TryReserveError, alloc::raw_vec::finish_grow::{closure_env#1   (1 samples, 0.12%)</title><rect x="671.7" y="117" width="1.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="674.67" y="127.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{closure#0   (1 samples, 0.12%)</title><rect x="1155.3" y="149" width="1.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1158.25" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (2 samples, 0.25%)</title><rect x="89.6" y="261" width="2.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="92.63" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (8 samples, 0.98%)</title><rect x="836.7" y="213" width="11.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="839.72" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (28 samples, 3.44%)</title><rect x="984.4" y="245" width="40.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="987.40" y="255.5" >cor..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (63 samples, 7.73%)</title><rect x="616.7" y="261" width="91.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="619.65" y="271.5" >alloc::vec..</text>
</g>
<g >
<title>core::ptr::read&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="86.7" y="309" width="1.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="89.74" y="319.5" ></text>
</g>
<g >
<title>realloc   (186 samples, 22.82%)</title><rect x="179.4" y="197" width="269.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="182.40" y="207.5" >realloc  </text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (42 samples, 5.15%)</title><rect x="775.9" y="229" width="60.8" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="778.91" y="239.5" >core::..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#0   (12 samples, 1.47%)</title><rect x="836.7" y="293" width="17.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="839.72" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (7 samples, 0.86%)</title><rect x="761.4" y="229" width="10.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="764.44" y="239.5" ></text>
</g>
<g >
<title>attempt7::gen_all_points   (63 samples, 7.73%)</title><rect x="616.7" y="309" width="91.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="619.65" y="319.5" >attempt7::..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve&lt;(isize, isize), alloc::alloc::Global&gt;   (31 samples, 3.80%)</title><rect x="632.6" y="197" width="44.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="635.58" y="207.5" >allo..</text>
</g>
<g >
<title>alloc::alloc::realloc   (3 samples, 0.37%)</title><rect x="1119.1" y="101" width="4.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1122.06" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (7 samples, 0.86%)</title><rect x="1119.1" y="293" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1122.06" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#5   (15 samples, 1.84%)</title><rect x="499.4" y="309" width="21.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="502.37" y="319.5" >a..</text>
</g>
<g >
<title>core::result::{impl#26   (2 samples, 0.25%)</title><rect x="483.4" y="261" width="2.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="486.45" y="271.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (2 samples, 0.25%)</title><rect x="1139.3" y="149" width="2.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1142.33" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (2 samples, 0.25%)</title><rect x="1152.4" y="245" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1155.36" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (90 samples, 11.04%)</title><rect x="854.1" y="261" width="130.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="857.10" y="271.5" >alloc::alloc::{i..</text>
</g>
<g >
<title>??   (1 samples, 0.12%)</title><rect x="1023.5" y="149" width="1.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1026.50" y="159.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max&lt;usize&gt;   (2 samples, 0.25%)</title><rect x="673.1" y="117" width="2.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="676.12" y="127.5" ></text>
</g>
<g >
<title>std::alloc::__default_lib_allocator::__rdl_realloc   (3 samples, 0.37%)</title><rect x="667.3" y="69" width="4.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="670.33" y="79.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (35 samples, 4.29%)</title><rect x="529.8" y="197" width="50.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="532.78" y="207.5" >alloc..</text>
</g>
<g >
<title>core::num::{impl#11   (1 samples, 0.12%)</title><rect x="482.0" y="245" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="485.00" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (260 samples, 31.90%)</title><rect x="122.9" y="309" width="376.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="125.93" y="319.5" >alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Globa..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (37 samples, 4.54%)</title><rect x="31.7" y="325" width="53.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="34.72" y="335.5" >alloc..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (40 samples, 4.91%)</title><rect x="522.5" y="229" width="58.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="525.54" y="239.5" >alloc:..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (2 samples, 0.25%)</title><rect x="1168.3" y="261" width="2.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1171.28" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (3 samples, 0.37%)</title><rect x="1182.8" y="309" width="4.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1185.76" y="319.5" ></text>
</g>
<g >
<title>malloc   (6 samples, 0.74%)</title><rect x="762.9" y="117" width="8.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="765.88" y="127.5" ></text>
</g>
<g >
<title>std::alloc::__default_lib_allocator::__rdl_realloc   (10 samples, 1.23%)</title><rect x="448.7" y="197" width="14.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="451.70" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (11 samples, 1.35%)</title><rect x="1136.4" y="261" width="16.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1139.43" y="271.5" ></text>
</g>
<g >
<title>attempt7::is_close_int   (26 samples, 3.19%)</title><rect x="799.1" y="133" width="37.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="802.08" y="143.5" >att..</text>
</g>
<g >
<title>core::cmp::max_by&lt;usize, fn(&amp;usize, &amp;usize) -&gt; core::cmp::Ordering&gt;   (5 samples, 0.61%)</title><rect x="474.8" y="229" width="7.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="477.76" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve_for_push&lt;(isize, isize), alloc::alloc::Global&gt;   (242 samples, 29.69%)</title><rect x="136.0" y="293" width="350.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="138.96" y="303.5" >alloc::raw_vec::RawVec&lt;(isize, isize), alloc::a..</text>
</g>
<g >
<title>attempt7::get_inbetween_points::{closure#1   (35 samples, 4.29%)</title><rect x="786.0" y="149" width="50.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="789.05" y="159.5" >attem..</text>
</g>
<g >
<title>malloc   (1 samples, 0.12%)</title><rect x="91.1" y="165" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="94.08" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_desugared&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::flatten::FlatMap&lt;core::ops::range::Range&lt;isize&gt;, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (7 samples, 0.86%)</title><rect x="1119.1" y="229" width="10.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1122.06" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (28 samples, 3.44%)</title><rect x="984.4" y="229" width="40.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="987.40" y="239.5" >all..</text>
</g>
<g >
<title>core::option::Option&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (1 samples, 0.12%)</title><rect x="706.4" y="181" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="709.42" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (3 samples, 0.37%)</title><rect x="1119.1" y="133" width="4.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1122.06" y="143.5" ></text>
</g>
<g >
<title>??   (20 samples, 2.45%)</title><rect x="50.5" y="197" width="29.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="53.54" y="207.5" >??  </text>
</g>
<g >
<title>core::iter::adapters::flatten::{impl#3   (16 samples, 1.96%)</title><rect x="677.5" y="197" width="23.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="680.46" y="207.5" >c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::adapters::map::map_fold::{closure_env#0   (1 samples, 0.12%)</title><rect x="1155.3" y="181" width="1.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1158.25" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt7::get_inbetween_points::{closure_env#1   (42 samples, 5.15%)</title><rect x="775.9" y="213" width="60.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="778.91" y="223.5" >core::..</text>
</g>
<g >
<title>core::option::Option&lt;&amp;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (1 samples, 0.12%)</title><rect x="699.2" y="165" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="702.18" y="175.5" ></text>
</g>
<g >
<title>alloc::slice::{impl#0   (4 samples, 0.49%)</title><rect x="88.2" y="309" width="5.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="91.18" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (35 samples, 4.29%)</title><rect x="529.8" y="181" width="50.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="532.78" y="191.5" >alloc..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::flatten::FlatMap&lt;core::ops::range::Range&lt;isize&gt;, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (63 samples, 7.73%)</title><rect x="616.7" y="293" width="91.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="619.65" y="303.5" >core::iter..</text>
</g>
<g >
<title>realloc   (2 samples, 0.25%)</title><rect x="1119.1" y="85" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1122.06" y="95.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (4 samples, 0.49%)</title><rect x="700.6" y="197" width="5.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="703.63" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (1 samples, 0.12%)</title><rect x="91.1" y="197" width="1.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="94.08" y="207.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points   (101 samples, 12.39%)</title><rect x="707.9" y="309" width="146.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="710.87" y="319.5" >attempt7::get_inbe..</text>
</g>
<g >
<title>alloc::vec::{impl#10   (4 samples, 0.49%)</title><rect x="88.2" y="325" width="5.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="91.18" y="335.5" ></text>
</g>
<g >
<title>__rust_dealloc   (1 samples, 0.12%)</title><rect x="1159.6" y="245" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1162.60" y="255.5" ></text>
</g>
<g >
<title>write   (1 samples, 0.12%)</title><rect x="1188.6" y="181" width="1.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1191.55" y="191.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{closure#0   (1 samples, 0.12%)</title><rect x="1155.3" y="165" width="1.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1158.25" y="175.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (2 samples, 0.25%)</title><rect x="1139.3" y="213" width="2.9" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1142.33" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::{impl#0   (8 samples, 0.98%)</title><rect x="451.6" y="181" width="11.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="454.60" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (7 samples, 0.86%)</title><rect x="761.4" y="149" width="10.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="764.44" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::adapters::map::map_fold::{closure_env#0   (4 samples, 0.49%)</title><rect x="848.3" y="165" width="5.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="851.31" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (2 samples, 0.25%)</title><rect x="1152.4" y="197" width="2.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1155.36" y="207.5" ></text>
</g>
<g >
<title>attempt7::is_close_int   (3 samples, 0.37%)</title><rect x="1145.1" y="149" width="4.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1148.12" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::as_mut_ptr&lt;(isize, isize), alloc::alloc::Global&gt;   (3 samples, 0.37%)</title><rect x="628.2" y="197" width="4.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="631.23" y="207.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max&lt;usize&gt;   (1 samples, 0.12%)</title><rect x="27.4" y="277" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="30.37" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::stdio::{impl#3   (1 samples, 0.12%)</title><rect x="1188.6" y="213" width="1.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1191.55" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (3 samples, 0.37%)</title><rect x="771.6" y="165" width="4.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="774.57" y="175.5" ></text>
</g>
<g >
<title>std::f64::{impl#0   (2 samples, 0.25%)</title><rect x="1149.5" y="149" width="2.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1152.46" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve&lt;(isize, isize), alloc::alloc::Global&gt;   (4 samples, 0.49%)</title><rect x="1119.1" y="213" width="5.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1122.06" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::hack::{impl#1   (1 samples, 0.12%)</title><rect x="30.3" y="293" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="33.27" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::{impl#0   (1 samples, 0.12%)</title><rect x="30.3" y="325" width="1.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="33.27" y="335.5" ></text>
</g>
<g >
<title>??   (17 samples, 2.09%)</title><rect x="642.7" y="53" width="24.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="645.71" y="63.5" >?..</text>
</g>
<g >
<title>free   (85 samples, 10.43%)</title><rect x="861.3" y="229" width="123.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="864.34" y="239.5" >free  </text>
</g>
<g >
<title>??   (2 samples, 0.25%)</title><rect x="1168.3" y="181" width="2.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1171.28" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (3 samples, 0.37%)</title><rect x="771.6" y="149" width="4.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="774.57" y="159.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points   (3 samples, 0.37%)</title><rect x="1182.8" y="341" width="4.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1185.76" y="351.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#1   (1 samples, 0.12%)</title><rect x="1188.6" y="229" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.55" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve_for_push&lt;(isize, isize), alloc::alloc::Global&gt;   (34 samples, 4.17%)</title><rect x="34.6" y="309" width="49.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="37.61" y="319.5" >allo..</text>
</g>
<g >
<title>__rust_realloc   (2 samples, 0.25%)</title><rect x="638.4" y="69" width="2.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="641.37" y="79.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl   (201 samples, 24.66%)</title><rect x="172.2" y="229" width="291.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="175.16" y="239.5" >alloc::alloc::Global::grow_impl  </text>
</g>
<g >
<title>alloc::vec::into_iter::{impl#14   (28 samples, 3.44%)</title><rect x="984.4" y="261" width="40.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="987.40" y="271.5" >all..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#0   (1 samples, 0.12%)</title><rect x="1155.3" y="213" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1158.25" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (2 samples, 0.25%)</title><rect x="1168.3" y="325" width="2.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1171.28" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#0   (4 samples, 0.49%)</title><rect x="848.3" y="197" width="5.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="851.31" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (8 samples, 0.98%)</title><rect x="15.8" y="277" width="11.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.79" y="287.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (1 samples, 0.12%)</title><rect x="1187.1" y="309" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1190.10" y="319.5" ></text>
</g>
<g >
<title>attempt7::is_close_int   (2 samples, 0.25%)</title><rect x="1184.2" y="165" width="2.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1187.21" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;   (30 samples, 3.68%)</title><rect x="39.0" y="277" width="43.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="41.96" y="287.5" >allo..</text>
</g>
<g >
<title>alloc::vec::{impl#14   (59 samples, 7.24%)</title><rect x="751.3" y="277" width="85.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="754.30" y="287.5" >alloc::vec..</text>
</g>
<g >
<title>std::io::stdio::{impl#13   (1 samples, 0.12%)</title><rect x="1188.6" y="357" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1191.55" y="367.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping&lt;(isize, isize)&gt;   (16 samples, 1.96%)</title><rect x="580.5" y="229" width="23.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="583.45" y="239.5" >c..</text>
</g>
<g >
<title>alloc::slice::hack::{impl#1   (4 samples, 0.49%)</title><rect x="88.2" y="277" width="5.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="91.18" y="287.5" ></text>
</g>
<g >
<title>core::cmp::max&lt;usize&gt;   (1 samples, 0.12%)</title><rect x="1123.4" y="149" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1126.40" y="159.5" ></text>
</g>
<g >
<title>??   (14 samples, 1.72%)</title><rect x="583.3" y="213" width="20.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="586.35" y="223.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="28.8" y="325" width="1.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="31.82" y="335.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (7 samples, 0.86%)</title><rect x="761.4" y="165" width="10.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="764.44" y="175.5" ></text>
</g>
<g >
<title>fmodf64   (1 samples, 0.12%)</title><rect x="774.5" y="85" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="777.47" y="95.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points::{closure#1   (2 samples, 0.25%)</title><rect x="1139.3" y="133" width="2.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1142.33" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (4 samples, 0.49%)</title><rect x="1152.4" y="293" width="5.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1155.36" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve_for_push&lt;(isize, isize), alloc::alloc::Global&gt;   (9 samples, 1.10%)</title><rect x="15.8" y="325" width="13.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="18.79" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#19   (2 samples, 0.25%)</title><rect x="848.3" y="117" width="2.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="851.31" y="127.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl   (2 samples, 0.25%)</title><rect x="1152.4" y="165" width="2.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1155.36" y="175.5" ></text>
</g>
<g >
<title>fmodf64   (2 samples, 0.25%)</title><rect x="1184.2" y="149" width="2.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1187.21" y="159.5" ></text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (9 samples, 1.10%)</title><rect x="486.3" y="293" width="13.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="489.34" y="303.5" ></text>
</g>
<g >
<title>std::io::stdio::{impl#12   (1 samples, 0.12%)</title><rect x="1188.6" y="373" width="1.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.55" y="383.5" ></text>
</g>
<g >
<title>attempt7::choose_next_point   (814 samples, 99.88%)</title><rect x="10.0" y="405" width="1178.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >attempt7::choose_next_point  </text>
</g>
<g >
<title>alloc::alloc::realloc   (201 samples, 24.66%)</title><rect x="172.2" y="213" width="291.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="175.16" y="223.5" >alloc::alloc::realloc  </text>
</g>
<g >
<title>alloc::alloc::dealloc   (90 samples, 11.04%)</title><rect x="854.1" y="245" width="130.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="857.10" y="255.5" >alloc::alloc::de..</text>
</g>
<g >
<title>core::slice::{impl#0   (1 samples, 0.12%)</title><rect x="1187.1" y="341" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.10" y="351.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (2 samples, 0.25%)</title><rect x="1179.9" y="277" width="2.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1182.87" y="287.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#5   (3 samples, 0.37%)</title><rect x="781.7" y="165" width="4.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="784.71" y="175.5" ></text>
</g>
<g >
<title>roundf64   (2 samples, 0.25%)</title><rect x="1149.5" y="133" width="2.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1152.46" y="143.5" ></text>
</g>
<g >
<title>core::cmp::max_by&lt;usize, fn(&amp;usize, &amp;usize) -&gt; core::cmp::Ordering&gt;   (2 samples, 0.25%)</title><rect x="673.1" y="101" width="2.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="676.12" y="111.5" ></text>
</g>
<g >
<title>__rust_alloc   (1 samples, 0.12%)</title><rect x="838.2" y="117" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="841.17" y="127.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::and_then_or_clear&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (14 samples, 1.72%)</title><rect x="678.9" y="165" width="20.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="681.91" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (7 samples, 0.86%)</title><rect x="1119.1" y="277" width="10.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1122.06" y="287.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (3 samples, 0.37%)</title><rect x="771.6" y="197" width="4.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="774.57" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (1 samples, 0.12%)</title><rect x="1137.9" y="197" width="1.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1140.88" y="207.5" ></text>
</g>
<g >
<title>core::cmp::max&lt;usize&gt;   (2 samples, 0.25%)</title><rect x="673.1" y="133" width="2.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="676.12" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (2 samples, 0.25%)</title><rect x="1152.4" y="213" width="2.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1155.36" y="223.5" ></text>
</g>
<g >
<title>std::io::buffered::linewritershim::{impl#1   (1 samples, 0.12%)</title><rect x="1188.6" y="261" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.55" y="271.5" ></text>
</g>
<g >
<title>malloc   (4 samples, 0.49%)</title><rect x="839.6" y="117" width="5.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="842.62" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;   (3 samples, 0.37%)</title><rect x="1119.1" y="149" width="4.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1122.06" y="159.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (2 samples, 0.25%)</title><rect x="1152.4" y="181" width="2.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1155.36" y="191.5" ></text>
</g>
<g >
<title>core::ptr::non_null::{impl#12   (2 samples, 0.25%)</title><rect x="1116.2" y="245" width="2.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1119.16" y="255.5" ></text>
</g>
<g >
<title>attempt7::gen_all_points   (7 samples, 0.86%)</title><rect x="1119.1" y="325" width="10.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1122.06" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (35 samples, 4.29%)</title><rect x="786.0" y="165" width="50.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="789.05" y="175.5" >core:..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec&lt;(isize, isize), alloc::alloc::Global&gt;   (4 samples, 0.49%)</title><rect x="88.2" y="293" width="5.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="91.18" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc   (6 samples, 0.74%)</title><rect x="838.2" y="133" width="8.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="841.17" y="143.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc   (7 samples, 0.86%)</title><rect x="761.4" y="133" width="10.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="764.44" y="143.5" ></text>
</g>
<g >
<title>__rust_alloc   (1 samples, 0.12%)</title><rect x="1137.9" y="133" width="1.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1140.88" y="143.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (6 samples, 0.74%)</title><rect x="1159.6" y="277" width="8.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1162.60" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::impls::{impl#3   (2 samples, 0.25%)</title><rect x="1184.2" y="197" width="2.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1187.21" y="207.5" ></text>
</g>
<g >
<title>core::slice::iter::{impl#181   (8 samples, 0.98%)</title><rect x="1171.2" y="293" width="11.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1174.18" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (2 samples, 0.25%)</title><rect x="1168.3" y="245" width="2.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1171.28" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_desugared&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::flatten::FlatMap&lt;core::ops::range::Range&lt;isize&gt;, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (61 samples, 7.48%)</title><rect x="618.1" y="213" width="88.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="621.10" y="223.5" >alloc::vec..</text>
</g>
<g >
<title>core::iter::range::{impl#6   (1 samples, 0.12%)</title><rect x="1156.7" y="229" width="1.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1159.70" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#1   (3 samples, 0.37%)</title><rect x="1182.8" y="325" width="4.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1185.76" y="335.5" ></text>
</g>
<g >
<title>core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;::new&lt;alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (3 samples, 0.37%)</title><rect x="603.6" y="293" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="606.62" y="303.5" ></text>
</g>
<g >
<title>std::alloc::__default_lib_allocator::__rdl_realloc   (1 samples, 0.12%)</title><rect x="25.9" y="229" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="28.93" y="239.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="846.9" y="165" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="849.86" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#3   (7 samples, 0.86%)</title><rect x="1158.1" y="293" width="10.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1161.15" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl   (8 samples, 0.98%)</title><rect x="15.8" y="261" width="11.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.79" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (7 samples, 0.86%)</title><rect x="1142.2" y="197" width="10.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1145.22" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::{impl#14   (12 samples, 1.47%)</title><rect x="836.7" y="277" width="17.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="839.72" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (2 samples, 0.25%)</title><rect x="89.6" y="245" width="2.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="92.63" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity&lt;(isize, isize)&gt;   (8 samples, 0.98%)</title><rect x="836.7" y="229" width="11.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="839.72" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::flatten::FlatMap&lt;core::ops::range::Range&lt;isize&gt;, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::gen_all_points::{closure#0   (7 samples, 0.86%)</title><rect x="1119.1" y="309" width="10.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1122.06" y="319.5" ></text>
</g>
<g >
<title>attempt7::get_inbetween_points::{closure#1   (2 samples, 0.25%)</title><rect x="1184.2" y="181" width="2.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1187.21" y="191.5" ></text>
</g>
<g >
<title>std::alloc::__default_lib_allocator::__rdl_realloc   (1 samples, 0.12%)</title><rect x="1122.0" y="85" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1124.95" y="95.5" ></text>
</g>
<g >
<title>core::fmt::write   (1 samples, 0.12%)</title><rect x="1188.6" y="325" width="1.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1191.55" y="335.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.25%)</title><rect x="1119.1" y="69" width="2.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1122.06" y="79.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#1   (31 samples, 3.80%)</title><rect x="632.6" y="165" width="44.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="635.58" y="175.5" >allo..</text>
</g>
<g >
<title>alloc::vec::{impl#19   (1 samples, 0.12%)</title><rect x="1155.3" y="133" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1158.25" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (8 samples, 0.98%)</title><rect x="836.7" y="197" width="11.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="839.72" y="207.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::{impl#18   (1 samples, 0.12%)</title><rect x="706.4" y="213" width="1.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="709.42" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::grow_amortized&lt;(isize, isize), alloc::alloc::Global&gt;   (241 samples, 29.57%)</title><rect x="137.4" y="277" width="348.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="140.41" y="287.5" >alloc::raw_vec::RawVec&lt;(isize, isize), alloc::a..</text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (7 samples, 0.86%)</title><rect x="1142.2" y="245" width="10.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1145.22" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#0   (4 samples, 0.49%)</title><rect x="1152.4" y="309" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1155.36" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (59 samples, 7.24%)</title><rect x="751.3" y="261" width="85.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="754.30" y="271.5" >alloc::vec..</text>
</g>
<g >
<title>core::slice::{impl#0   (8 samples, 0.98%)</title><rect x="1171.2" y="325" width="11.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1174.18" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve&lt;(isize, isize), alloc::alloc::Global&gt;   (31 samples, 3.80%)</title><rect x="632.6" y="181" width="44.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="635.58" y="191.5" >allo..</text>
</g>
<g >
<title>alloc::alloc::alloc   (35 samples, 4.29%)</title><rect x="529.8" y="165" width="50.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="532.78" y="175.5" >alloc..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (3 samples, 0.37%)</title><rect x="1182.8" y="229" width="4.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1185.76" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl   (3 samples, 0.37%)</title><rect x="1119.1" y="117" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1122.06" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::allocate_in&lt;(isize, isize), alloc::alloc::Global&gt;   (40 samples, 4.91%)</title><rect x="522.5" y="213" width="58.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="525.54" y="223.5" >alloc:..</text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="1155.3" y="117" width="1.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1158.25" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::extend_trusted&lt;(isize, isize), alloc::alloc::Global, core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#0   (1 samples, 0.12%)</title><rect x="1155.3" y="229" width="1.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1158.25" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (2 samples, 0.25%)</title><rect x="1139.3" y="181" width="2.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1142.33" y="191.5" ></text>
</g>
<g >
<title>core::iter::adapters::fuse::{impl#2   (1 samples, 0.12%)</title><rect x="1127.7" y="181" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1130.74" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::set_ptr_and_cap&lt;(isize, isize), alloc::alloc::Global&gt;   (1 samples, 0.12%)</title><rect x="156.2" y="261" width="1.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="159.23" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (7 samples, 0.86%)</title><rect x="1142.2" y="213" width="10.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1145.22" y="223.5" ></text>
</g>
<g >
<title>realloc   (26 samples, 3.19%)</title><rect x="41.9" y="213" width="37.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="44.85" y="223.5" >rea..</text>
</g>
<g >
<title>alloc::vec::spec_from_iter::{impl#0   (11 samples, 1.35%)</title><rect x="1136.4" y="277" width="16.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1139.43" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::grow_amortized&lt;(isize, isize), alloc::alloc::Global&gt;   (31 samples, 3.80%)</title><rect x="632.6" y="149" width="44.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="635.58" y="159.5" >allo..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::grow_amortized&lt;(isize, isize), alloc::alloc::Global&gt;   (4 samples, 0.49%)</title><rect x="1119.1" y="165" width="5.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1122.06" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write   (1 samples, 0.12%)</title><rect x="1188.6" y="197" width="1.4" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1191.55" y="207.5" ></text>
</g>
<g >
<title>core::iter::adapters::fuse::{impl#10   (1 samples, 0.12%)</title><rect x="1127.7" y="165" width="1.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1130.74" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::reserve&lt;(isize, isize), alloc::alloc::Global&gt;   (4 samples, 0.49%)</title><rect x="1119.1" y="197" width="5.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1122.06" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (40 samples, 4.91%)</title><rect x="522.5" y="245" width="58.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="525.54" y="255.5" >alloc:..</text>
</g>
<g >
<title>alloc::vec::{impl#10   (1 samples, 0.12%)</title><rect x="30.3" y="341" width="1.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="33.27" y="351.5" ></text>
</g>
<g >
<title>core::cmp::max&lt;usize&gt;   (1 samples, 0.12%)</title><rect x="27.4" y="293" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="30.37" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#0   (61 samples, 7.48%)</title><rect x="618.1" y="229" width="88.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="621.10" y="239.5" >alloc::vec..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect&lt;core::iter::adapters::filter_map::FilterMap&lt;core::ops::range::Range&lt;isize&gt;, attempt7::get_inbetween_points::{closure_env#1   (59 samples, 7.24%)</title><rect x="751.3" y="293" width="85.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="754.30" y="303.5" >core::iter..</text>
</g>
<g >
<title>core::ptr::write&lt;(isize, isize)&gt;   (2 samples, 0.25%)</title><rect x="848.3" y="101" width="2.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="851.31" y="111.5" ></text>
</g>
<g >
<title>core::num::{impl#11   (1 samples, 0.12%)</title><rect x="482.0" y="261" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="485.00" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (7 samples, 0.86%)</title><rect x="761.4" y="213" width="10.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="764.44" y="223.5" ></text>
</g>
<g >
<title>core::alloc::layout::{impl#0   (1 samples, 0.12%)</title><rect x="846.9" y="149" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="849.86" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;   (8 samples, 0.98%)</title><rect x="15.8" y="293" width="11.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="18.79" y="303.5" ></text>
</g>
<g >
<title>core::iter::range::{impl#5   (1 samples, 0.12%)</title><rect x="1126.3" y="117" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1129.29" y="127.5" ></text>
</g>
<g >
<title>core::slice::cmp::{impl#10   (8 samples, 0.98%)</title><rect x="1171.2" y="309" width="11.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1174.18" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#0   (7 samples, 0.86%)</title><rect x="1119.1" y="245" width="10.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1122.06" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::grow_amortized&lt;(isize, isize), alloc::alloc::Global&gt;   (9 samples, 1.10%)</title><rect x="15.8" y="309" width="13.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="18.79" y="319.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::{closure#0   (2 samples, 0.25%)</title><rect x="848.3" y="149" width="2.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="851.31" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::spec_extend::{impl#0   (2 samples, 0.25%)</title><rect x="1139.3" y="245" width="2.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1142.33" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::{impl#1   (4 samples, 0.49%)</title><rect x="1119.1" y="181" width="5.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1122.06" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::{impl#14   (28 samples, 3.44%)</title><rect x="984.4" y="277" width="40.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="987.40" y="287.5" >cor..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold&lt;core::ops::range::Range&lt;isize&gt;, (), core::iter::traits::iterator::Iterator::find_map::check::{closure_env#0   (42 samples, 5.15%)</title><rect x="775.9" y="197" width="60.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="778.91" y="207.5" >core::..</text>
</g>
<g >
<title>std::io::Write::write_fmt::{impl#0   (1 samples, 0.12%)</title><rect x="1188.6" y="309" width="1.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1191.55" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (90 samples, 11.04%)</title><rect x="854.1" y="293" width="130.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="857.10" y="303.5" >core::ptr::drop_..</text>
</g>
<g >
<title>core::iter::adapters::filter_map::{impl#2   (3 samples, 0.37%)</title><rect x="1182.8" y="261" width="4.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1185.76" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::{impl#14   (2 samples, 0.25%)</title><rect x="1168.3" y="293" width="2.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1171.28" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;   (27 samples, 3.31%)</title><rect x="634.0" y="133" width="39.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="637.02" y="143.5" >all..</text>
</g>
<g >
<title>alloc::alloc::{impl#1   (2 samples, 0.25%)</title><rect x="1168.3" y="229" width="2.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1171.28" y="239.5" ></text>
</g>
<g >
<title>??   (7 samples, 0.86%)</title><rect x="15.8" y="213" width="10.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="18.79" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::new&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="1136.4" y="245" width="1.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1139.43" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map&lt;core::ops::range::Range&lt;isize&gt;, (isize, isize), &amp;mut attempt7::get_inbetween_points::{closure_env#1   (2 samples, 0.25%)</title><rect x="1139.3" y="197" width="2.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1142.33" y="207.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::{impl#3   (3 samples, 0.37%)</title><rect x="1124.8" y="213" width="4.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1127.85" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (1 samples, 0.12%)</title><rect x="1137.9" y="213" width="1.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1140.88" y="223.5" ></text>
</g>
<g >
<title>??   (16 samples, 1.96%)</title><rect x="961.2" y="197" width="23.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="964.24" y="207.5" >?..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (7 samples, 0.86%)</title><rect x="1158.1" y="309" width="10.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1161.15" y="319.5" ></text>
</g>
<g >
<title>__rust_realloc   (4 samples, 0.49%)</title><rect x="173.6" y="197" width="5.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="176.61" y="207.5" ></text>
</g>
<g >
<title>??   (1 samples, 0.12%)</title><rect x="92.5" y="229" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="95.53" y="239.5" ></text>
</g>
<g >
<title>core::iter::adapters::flatten::{impl#18   (3 samples, 0.37%)</title><rect x="1124.8" y="197" width="4.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1127.85" y="207.5" ></text>
</g>
<g >
<title>free   (5 samples, 0.61%)</title><rect x="1161.0" y="245" width="7.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1164.04" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;&gt;   (90 samples, 11.04%)</title><rect x="854.1" y="309" width="130.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="857.10" y="319.5" >core::ptr::drop_..</text>
</g>
<g >
<title>core::slice::{impl#0   (65 samples, 7.98%)</title><rect x="1024.9" y="309" width="94.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1027.94" y="319.5" >core::slice..</text>
</g>
<g >
<title>std::alloc::__default_lib_allocator::__rdl_alloc   (1 samples, 0.12%)</title><rect x="845.4" y="117" width="1.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="848.41" y="127.5" ></text>
</g>
<g >
<title>alloc::vec::spec_from_iter_nested::{impl#0   (7 samples, 0.86%)</title><rect x="1119.1" y="261" width="10.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1122.06" y="271.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc   (8 samples, 0.98%)</title><rect x="15.8" y="245" width="11.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="18.79" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc   (28 samples, 3.44%)</title><rect x="984.4" y="197" width="40.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="987.40" y="207.5" >all..</text>
</g>
<g >
<title>alloc::alloc::{impl#1   (23 samples, 2.82%)</title><rect x="638.4" y="117" width="33.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="641.37" y="127.5" >al..</text>
</g>
<g >
<title>alloc::alloc::dealloc   (2 samples, 0.25%)</title><rect x="1168.3" y="213" width="2.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1171.28" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::{impl#1   (6 samples, 0.74%)</title><rect x="838.2" y="165" width="8.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="841.17" y="175.5" ></text>
</g>
<g >
<title>attempt7::choose_next_point   (708 samples, 86.87%)</title><rect x="94.0" y="325" width="1025.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="96.98" y="335.5" >attempt7::choose_next_point  </text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map::check::{closure#0   (2 samples, 0.25%)</title><rect x="1139.3" y="165" width="2.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1142.33" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc   (2 samples, 0.25%)</title><rect x="1152.4" y="149" width="2.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1155.36" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::with_capacity_in&lt;(isize, isize), alloc::alloc::Global&gt;   (2 samples, 0.25%)</title><rect x="1152.4" y="229" width="2.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1155.36" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;(isize, isize), alloc::alloc::Global&gt;::push&lt;(isize, isize), alloc::alloc::Global&gt;   (12 samples, 1.47%)</title><rect x="12.9" y="341" width="17.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="15.90" y="351.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping&lt;(isize, isize)&gt;   (1 samples, 0.12%)</title><rect x="92.5" y="245" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="95.53" y="255.5" ></text>
</g>
</g>
</svg>
