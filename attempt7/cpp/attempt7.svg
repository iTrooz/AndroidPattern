<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1099.1" y="117" width="3.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1102.14" y="127.5" ></text>
</g>
<g >
<title>operator   (68 samples, 3.59%)</title><rect x="624.9" y="133" width="42.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="627.89" y="143.5" >ope..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1171.3" y="245" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1174.33" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (34 samples, 1.79%)</title><rect x="1099.1" y="197" width="21.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.14" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (149 samples, 7.86%)</title><rect x="1073.6" y="277" width="92.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1076.62" y="287.5" >std::_Rb_tr..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1181.9" y="181" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1184.91" y="191.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1181.9" y="149" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1184.91" y="159.5" ></text>
</g>
<g >
<title>operator   (7 samples, 0.37%)</title><rect x="1120.3" y="149" width="4.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1123.30" y="159.5" ></text>
</g>
<g >
<title>??   (11 samples, 0.58%)</title><rect x="1143.9" y="133" width="6.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1146.95" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="241.5" y="261" width="5.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="244.52" y="271.5" ></text>
</g>
<g >
<title>round@plt   (2 samples, 0.11%)</title><rect x="1063.7" y="293" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1066.66" y="303.5" ></text>
</g>
<g >
<title>main   (1,896 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >main  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1064.9" y="197" width="3.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1067.91" y="207.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.11%)</title><rect x="1184.4" y="133" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1187.40" y="143.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="53.6" y="277" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="56.57" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1192.38" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (859 samples, 45.31%)</title><rect x="357.9" y="245" width="534.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="360.90" y="255.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>free   (4 samples, 0.21%)</title><rect x="1168.2" y="181" width="2.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1171.22" y="191.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.16%)</title><rect x="1183.8" y="165" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1186.78" y="175.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1185.6" y="197" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1188.64" y="207.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (7 samples, 0.37%)</title><rect x="914.9" y="213" width="4.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="917.92" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (811 samples, 42.77%)</title><rect x="387.8" y="229" width="504.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="390.77" y="239.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="619.9" y="149" width="5.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="622.92" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="1045.0" y="261" width="5.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1047.99" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (1 samples, 0.05%)</title><rect x="1166.4" y="261" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1169.35" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1171.3" y="261" width="1.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1174.33" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (38 samples, 2.00%)</title><rect x="241.5" y="277" width="23.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="244.52" y="287.5" >s..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1181.9" y="213" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1184.91" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="112.7" y="197" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="115.69" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1171.3" y="229" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1174.33" y="239.5" ></text>
</g>
<g >
<title>operator   (64 samples, 3.38%)</title><rect x="627.4" y="117" width="39.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="630.38" y="127.5" >ope..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (19 samples, 1.00%)</title><rect x="1139.0" y="229" width="11.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1141.97" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1182.5" y="213" width="3.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1185.53" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.8" y="293" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.76" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (67 samples, 3.53%)</title><rect x="69.1" y="197" width="41.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="72.12" y="207.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (44 samples, 2.32%)</title><rect x="1097.3" y="213" width="27.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1100.27" y="223.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1068.0" y="229" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1071.02" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (12 samples, 0.63%)</title><rect x="1102.9" y="117" width="7.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1105.87" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (610 samples, 32.17%)</title><rect x="406.4" y="213" width="379.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="409.45" y="223.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (3 samples, 0.16%)</title><rect x="917.4" y="197" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="920.41" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (22 samples, 1.16%)</title><rect x="250.2" y="229" width="13.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="253.23" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (68 samples, 3.59%)</title><rect x="624.9" y="149" width="42.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="627.89" y="159.5" >std..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="437.6" y="101" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="440.56" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (21 samples, 1.11%)</title><rect x="1175.7" y="293" width="13.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1178.69" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1179.4" y="213" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.42" y="223.5" ></text>
</g>
<g >
<title>all (1,896 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="263.3" y="149" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="266.30" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1064.9" y="229" width="3.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1067.91" y="239.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (1 samples, 0.05%)</title><rect x="1156.4" y="229" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.39" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="341" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1192.38" y="351.5" ></text>
</g>
<g >
<title>operator   (8 samples, 0.42%)</title><rect x="619.9" y="117" width="5.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="622.92" y="127.5" ></text>
</g>
<g >
<title>operator   (154 samples, 8.12%)</title><rect x="796.7" y="149" width="95.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="799.67" y="159.5" >operator  </text>
</g>
<g >
<title>choose_next_point   (1,865 samples, 98.36%)</title><rect x="10.0" y="325" width="1160.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >choose_next_point  </text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (41 samples, 2.16%)</title><rect x="439.4" y="101" width="25.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="442.43" y="111.5" >s..</text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="1139.0" y="181" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1141.97" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1170.7" y="293" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1173.71" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (136 samples, 7.17%)</title><rect x="464.9" y="133" width="84.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="467.95" y="143.5" >std::allo..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1068.0" y="245" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1071.02" y="255.5" ></text>
</g>
<g >
<title>operator   (17 samples, 0.90%)</title><rect x="1140.2" y="165" width="10.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1143.21" y="175.5" ></text>
</g>
<g >
<title>std::fmod&lt;double   (4 samples, 0.21%)</title><rect x="1061.2" y="277" width="2.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1064.17" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (113 samples, 5.96%)</title><rect x="549.6" y="149" width="70.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="552.59" y="159.5" >std::al..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1064.9" y="245" width="3.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1067.91" y="255.5" ></text>
</g>
<g >
<title>round@plt   (4 samples, 0.21%)</title><rect x="236.5" y="277" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="239.54" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="245" width="0.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1191.13" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1180.7" y="165" width="1.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1183.66" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (18 samples, 0.95%)</title><rect x="1175.7" y="277" width="11.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1178.69" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1179.4" y="197" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.42" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="241.5" y="245" width="5.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="244.52" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (158 samples, 8.33%)</title><rect x="1068.6" y="293" width="98.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1071.64" y="303.5" >std::_Rb_tr..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="1045.0" y="213" width="5.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1047.99" y="223.5" ></text>
</g>
<g >
<title>gen_all_points   (9 samples, 0.47%)</title><rect x="1044.4" y="309" width="5.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1047.37" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1064.9" y="213" width="3.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1067.91" y="223.5" ></text>
</g>
<g >
<title>operator   (5 samples, 0.26%)</title><rect x="1167.6" y="213" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.59" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (88 samples, 4.64%)</title><rect x="59.2" y="261" width="54.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="62.17" y="271.5" >std::..</text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.6" y="229" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1175.57" y="239.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="1180.7" y="117" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1183.66" y="127.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (1 samples, 0.05%)</title><rect x="1187.5" y="245" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.51" y="255.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1171.3" y="181" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1174.33" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1192.38" y="319.5" ></text>
</g>
<g >
<title>??   (13 samples, 0.69%)</title><rect x="102.7" y="117" width="8.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="105.73" y="127.5" ></text>
</g>
<g >
<title>choose_next_point   (20 samples, 1.05%)</title><rect x="41.7" y="293" width="12.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="44.74" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1192.38" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1120.3" y="181" width="4.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1123.30" y="191.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="1182.5" y="165" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1185.53" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="1045.0" y="245" width="5.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1047.99" y="255.5" ></text>
</g>
<g >
<title>operator   (8 samples, 0.42%)</title><rect x="619.9" y="101" width="5.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="622.92" y="111.5" ></text>
</g>
<g >
<title>free   (2 samples, 0.11%)</title><rect x="1185.6" y="165" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1188.64" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (15 samples, 0.79%)</title><rect x="1110.3" y="165" width="9.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1113.34" y="175.5" ></text>
</g>
<g >
<title>free   (122 samples, 6.43%)</title><rect x="710.2" y="117" width="75.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="713.16" y="127.5" >free  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (191 samples, 10.07%)</title><rect x="667.2" y="197" width="118.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="670.22" y="207.5" >std::allocator..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (293 samples, 15.45%)</title><rect x="437.6" y="165" width="182.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="440.56" y="175.5" >std::_Rb_tree&lt;std::pair..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="437.6" y="117" width="1.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="440.56" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (8 samples, 0.42%)</title><rect x="1151.4" y="261" width="5.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1154.41" y="271.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.11%)</title><rect x="1048.7" y="133" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1051.72" y="143.5" ></text>
</g>
<g >
<title>roundf64   (4 samples, 0.21%)</title><rect x="239.0" y="277" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="242.03" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1167.0" y="293" width="3.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1169.97" y="303.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="1066.1" y="165" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1069.15" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1192.38" y="255.5" ></text>
</g>
<g >
<title>free   (25 samples, 1.32%)</title><rect x="1028.8" y="165" width="15.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1031.81" y="175.5" ></text>
</g>
<g >
<title>free   (17 samples, 0.90%)</title><rect x="1140.2" y="149" width="10.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1143.21" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (12 samples, 0.63%)</title><rect x="1102.9" y="149" width="7.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1105.87" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.8" y="325" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.76" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement   (1 samples, 0.05%)</title><rect x="1187.5" y="261" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1190.51" y="271.5" ></text>
</g>
<g >
<title>malloc   (4 samples, 0.21%)</title><rect x="1045.6" y="165" width="2.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1048.61" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1179.4" y="133" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1182.42" y="143.5" ></text>
</g>
<g >
<title>operator   (7 samples, 0.37%)</title><rect x="1045.6" y="181" width="4.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1048.61" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (67 samples, 3.53%)</title><rect x="69.1" y="181" width="41.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="72.12" y="191.5" >std..</text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1166.4" y="277" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1169.35" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (8 samples, 0.42%)</title><rect x="791.1" y="213" width="4.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="794.07" y="223.5" ></text>
</g>
<g >
<title>operator   (30 samples, 1.58%)</title><rect x="1025.7" y="197" width="18.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1028.70" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (304 samples, 16.03%)</title><rect x="435.7" y="181" width="189.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="438.70" y="191.5" >std::_Rb_tree&lt;std::pair&lt;..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1119.7" y="149" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1122.67" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1192.38" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="437.6" y="69" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="440.56" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (1 samples, 0.05%)</title><rect x="1186.9" y="277" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1189.89" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (136 samples, 7.17%)</title><rect x="464.9" y="117" width="84.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="467.95" y="127.5" >std::allo..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1179.4" y="165" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1182.42" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1181.9" y="197" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1184.91" y="207.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (41 samples, 2.16%)</title><rect x="439.4" y="85" width="25.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="442.43" y="95.5" >s..</text>
</g>
<g >
<title>operator   (24 samples, 1.27%)</title><rect x="95.9" y="149" width="14.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="98.89" y="159.5" ></text>
</g>
<g >
<title>??   (2 samples, 0.11%)</title><rect x="1101.6" y="53" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1104.62" y="63.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="1120.9" y="133" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1123.92" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1119.7" y="165" width="0.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1122.67" y="175.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.8" y="341" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1191.76" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="437.6" y="85" width="1.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="440.56" y="95.5" ></text>
</g>
<g >
<title>malloc   (5 samples, 0.26%)</title><rect x="1099.8" y="69" width="3.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1102.76" y="79.5" ></text>
</g>
<g >
<title>??   (6 samples, 0.32%)</title><rect x="621.2" y="69" width="3.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="624.16" y="79.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1067.4" y="165" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1070.39" y="175.5" ></text>
</g>
<g >
<title>operator   (5 samples, 0.26%)</title><rect x="1167.6" y="197" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1170.59" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (18 samples, 0.95%)</title><rect x="1099.1" y="165" width="11.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.14" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="112.7" y="213" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="115.69" y="223.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (26 samples, 1.37%)</title><rect x="1007.0" y="245" width="16.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1010.03" y="255.5" ></text>
</g>
<g >
<title>gen_all_points   (4 samples, 0.21%)</title><rect x="1170.7" y="325" width="2.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1173.71" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1179.4" y="149" width="1.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1182.42" y="159.5" ></text>
</g>
<g >
<title>malloc   (92 samples, 4.85%)</title><rect x="562.7" y="85" width="57.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="565.66" y="95.5" >malloc  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="110.8" y="229" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="113.82" y="239.5" ></text>
</g>
<g >
<title>??   (7 samples, 0.37%)</title><rect x="1132.7" y="117" width="4.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1135.74" y="127.5" ></text>
</g>
<g >
<title>get_inbetween_points   (4 samples, 0.21%)</title><rect x="1173.2" y="325" width="2.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1176.20" y="335.5" ></text>
</g>
<g >
<title>operator   (15 samples, 0.79%)</title><rect x="1110.3" y="117" width="9.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1113.34" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int   (10 samples, 0.53%)</title><rect x="913.0" y="245" width="6.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="916.05" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1099.1" y="101" width="3.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1102.14" y="111.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="277" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1191.13" y="287.5" ></text>
</g>
<g >
<title>choose_next_point   (1,896 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >choose_next_point  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1182.5" y="229" width="3.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1185.53" y="239.5" ></text>
</g>
<g >
<title>operator   (135 samples, 7.12%)</title><rect x="465.6" y="85" width="84.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="468.57" y="95.5" >operator  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (41 samples, 2.16%)</title><rect x="439.4" y="117" width="25.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="442.43" y="127.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (30 samples, 1.58%)</title><rect x="1025.7" y="229" width="18.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1028.70" y="239.5" ></text>
</g>
<g >
<title>??   (16 samples, 0.84%)</title><rect x="1034.4" y="149" width="10.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1037.41" y="159.5" ></text>
</g>
<g >
<title>free   (6 samples, 0.32%)</title><rect x="1120.9" y="117" width="3.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1123.92" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1156.4" y="261" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1159.39" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1182.5" y="197" width="3.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1185.53" y="207.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1192.38" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (155 samples, 8.18%)</title><rect x="796.0" y="181" width="96.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="799.04" y="191.5" >std::__new_..</text>
</g>
<g >
<title>operator   (106 samples, 5.59%)</title><rect x="553.9" y="101" width="66.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="556.95" y="111.5" >operato..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (15 samples, 0.79%)</title><rect x="1110.3" y="149" width="9.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1113.34" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1167.6" y="245" width="3.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1170.59" y="255.5" ></text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="1067.4" y="149" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1070.39" y="159.5" ></text>
</g>
<g >
<title>free   (8 samples, 0.42%)</title><rect x="619.9" y="85" width="5.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="622.92" y="95.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1179.4" y="117" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1182.42" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1099.1" y="133" width="3.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1102.14" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement   (10 samples, 0.53%)</title><rect x="913.0" y="229" width="6.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="916.05" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (33 samples, 1.74%)</title><rect x="1023.8" y="261" width="20.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1026.83" y="271.5" ></text>
</g>
<g >
<title>operator   (14 samples, 0.74%)</title><rect x="1128.4" y="149" width="8.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1131.39" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (1 samples, 0.05%)</title><rect x="892.5" y="245" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="895.51" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1185.6" y="213" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.64" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (44 samples, 2.32%)</title><rect x="437.6" y="133" width="27.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="440.56" y="143.5" >s..</text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;int   (22 samples, 1.16%)</title><rect x="250.2" y="197" width="13.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="253.23" y="207.5" ></text>
</g>
<g >
<title>malloc   (2 samples, 0.11%)</title><rect x="1179.4" y="101" width="1.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1182.42" y="111.5" ></text>
</g>
<g >
<title>??   (75 samples, 3.96%)</title><rect x="739.4" y="101" width="46.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="742.41" y="111.5" >??  </text>
</g>
<g >
<title>std::_Rb_tree_decrement   (1 samples, 0.05%)</title><rect x="1156.4" y="245" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1159.39" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (191 samples, 10.07%)</title><rect x="667.2" y="181" width="118.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="670.22" y="191.5" >std::allocator..</text>
</g>
<g >
<title>operator   (3 samples, 0.16%)</title><rect x="1048.1" y="165" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1051.10" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.8" y="309" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.76" y="319.5" ></text>
</g>
<g >
<title>is_close_int   (7 samples, 0.37%)</title><rect x="1059.3" y="293" width="4.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1062.30" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1167.0" y="277" width="3.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1169.97" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (19 samples, 1.00%)</title><rect x="1139.0" y="213" width="11.8" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1141.97" y="223.5" ></text>
</g>
<g >
<title>get_inbetween_points   (243 samples, 12.82%)</title><rect x="113.9" y="293" width="151.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="116.93" y="303.5" >get_inbetween_point..</text>
</g>
<g >
<title>malloc   (1 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.38" y="207.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (15 samples, 0.79%)</title><rect x="1157.0" y="261" width="9.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1160.01" y="271.5" ></text>
</g>
<g >
<title>operator   (6 samples, 0.32%)</title><rect x="1099.1" y="85" width="3.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1102.14" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="264.5" y="213" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="267.55" y="223.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1167.6" y="229" width="3.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1170.59" y="239.5" ></text>
</g>
<g >
<title>malloc   (7 samples, 0.37%)</title><rect x="1106.0" y="85" width="4.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1108.98" y="95.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (21 samples, 1.11%)</title><rect x="1175.7" y="309" width="13.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1178.69" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance   (32 samples, 1.69%)</title><rect x="893.1" y="245" width="19.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="896.13" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1187.5" y="277" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1190.51" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1180.7" y="181" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1183.66" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.6" y="245" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1175.57" y="255.5" ></text>
</g>
<g >
<title>free   (149 samples, 7.86%)</title><rect x="799.8" y="133" width="92.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="802.78" y="143.5" >free  </text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (1 samples, 0.05%)</title><rect x="1188.1" y="261" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.13" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (67 samples, 3.53%)</title><rect x="69.1" y="213" width="41.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="72.12" y="223.5" >std..</text>
</g>
<g >
<title>free   (64 samples, 3.38%)</title><rect x="627.4" y="101" width="39.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="630.38" y="111.5" >fre..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1192.38" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (88 samples, 4.64%)</title><rect x="59.2" y="277" width="54.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="62.17" y="287.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (30 samples, 1.58%)</title><rect x="246.5" y="245" width="18.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="249.50" y="255.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (113 samples, 5.96%)</title><rect x="549.6" y="117" width="70.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="552.59" y="127.5" >std::__..</text>
</g>
<g >
<title>operator   (123 samples, 6.49%)</title><rect x="709.5" y="133" width="76.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="712.54" y="143.5" >operator  </text>
</g>
<g >
<title>operator   (41 samples, 2.16%)</title><rect x="439.4" y="69" width="25.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="442.43" y="79.5" >o..</text>
</g>
<g >
<title>operator   (155 samples, 8.18%)</title><rect x="796.0" y="165" width="96.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="799.04" y="175.5" >operator  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1120.3" y="165" width="4.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1123.30" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1192.38" y="271.5" ></text>
</g>
<g >
<title>operator   (12 samples, 0.63%)</title><rect x="1102.9" y="101" width="7.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1105.87" y="111.5" ></text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="263.3" y="133" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="266.30" y="143.5" ></text>
</g>
<g >
<title>??   (5 samples, 0.26%)</title><rect x="1121.5" y="101" width="3.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1124.54" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1179.4" y="229" width="3.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.42" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum   (8 samples, 0.42%)</title><rect x="786.1" y="213" width="5.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="789.09" y="223.5" ></text>
</g>
<g >
<title>malloc   (13 samples, 0.69%)</title><rect x="1111.6" y="101" width="8.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1114.58" y="111.5" ></text>
</g>
<g >
<title>free   (12 samples, 0.63%)</title><rect x="1129.6" y="133" width="7.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1132.63" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="1045.0" y="197" width="5.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1047.99" y="207.5" ></text>
</g>
<g >
<title>??   (37 samples, 1.95%)</title><rect x="644.2" y="85" width="23.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="647.19" y="95.5" >?..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1,218 samples, 64.24%)</title><rect x="265.2" y="277" width="758.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="268.17" y="287.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (7 samples, 0.37%)</title><rect x="1120.3" y="197" width="4.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1123.30" y="207.5" ></text>
</g>
<g >
<title>malloc   (3 samples, 0.16%)</title><rect x="1126.5" y="149" width="1.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1129.52" y="159.5" ></text>
</g>
<g >
<title>operator   (21 samples, 1.11%)</title><rect x="250.9" y="165" width="13.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="253.85" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (30 samples, 1.58%)</title><rect x="246.5" y="261" width="18.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="249.50" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="619.9" y="165" width="5.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="622.92" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1185.6" y="229" width="1.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1188.64" y="239.5" ></text>
</g>
<g >
<title>malloc   (36 samples, 1.90%)</title><rect x="73.5" y="149" width="22.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="76.48" y="159.5" >m..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1119.7" y="181" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1122.67" y="191.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_right   (1 samples, 0.05%)</title><rect x="912.4" y="229" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="915.43" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (67 samples, 3.53%)</title><rect x="69.1" y="229" width="41.7" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="72.12" y="239.5" >std..</text>
</g>
<g >
<title>std::local_Rb_tree_decrement   (1 samples, 0.05%)</title><rect x="1156.4" y="213" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.39" y="223.5" ></text>
</g>
<g >
<title>choose_next_point   (1,896 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >choose_next_point  </text>
</g>
<g >
<title>operator   (27 samples, 1.42%)</title><rect x="1027.6" y="181" width="16.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1030.56" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (136 samples, 7.17%)</title><rect x="464.9" y="101" width="84.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="467.95" y="111.5" >std::__ne..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.38" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (5 samples, 0.26%)</title><rect x="1167.6" y="261" width="3.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1170.59" y="271.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_left   (2 samples, 0.11%)</title><rect x="1155.1" y="245" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1158.15" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1064.9" y="277" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1067.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1172.6" y="261" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.57" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.8" y="277" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.76" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (34 samples, 1.79%)</title><rect x="1023.2" y="277" width="21.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1026.21" y="287.5" ></text>
</g>
<g >
<title>choose_next_point   (1,655 samples, 87.29%)</title><rect x="14.4" y="309" width="1030.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="17.36" y="319.5" >choose_next_point  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (67 samples, 3.53%)</title><rect x="1095.4" y="229" width="41.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1098.40" y="239.5" >std..</text>
</g>
<g >
<title>get_inbetween_points   (30 samples, 1.58%)</title><rect x="1050.0" y="309" width="18.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1052.97" y="319.5" ></text>
</g>
<g >
<title>std::fmod&lt;double   (63 samples, 3.32%)</title><rect x="197.3" y="261" width="39.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="200.33" y="271.5" >std..</text>
</g>
<g >
<title>operator   (5 samples, 0.26%)</title><rect x="1064.9" y="181" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1067.91" y="191.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1181.9" y="165" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1184.91" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (16 samples, 0.84%)</title><rect x="1176.9" y="261" width="10.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1179.93" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1167.0" y="309" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1169.97" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="619.9" y="133" width="5.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="622.92" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1099.1" y="149" width="3.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.14" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1179.4" y="181" width="1.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1182.42" y="191.5" ></text>
</g>
<g >
<title>??   (1 samples, 0.05%)</title><rect x="619.3" y="69" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="622.29" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (20 samples, 1.05%)</title><rect x="1124.7" y="197" width="12.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1127.65" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (15 samples, 0.79%)</title><rect x="1157.0" y="229" width="9.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1160.01" y="239.5" ></text>
</g>
<g >
<title>std::abs   (7 samples, 0.37%)</title><rect x="193.0" y="261" width="4.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="195.97" y="271.5" ></text>
</g>
<g >
<title>free   (1 samples, 0.05%)</title><rect x="1119.7" y="101" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1122.67" y="111.5" ></text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1119.7" y="133" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1122.67" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (180 samples, 9.49%)</title><rect x="437.6" y="149" width="112.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="440.56" y="159.5" >std::_Rb_tree..</text>
</g>
<g >
<title>malloc   (18 samples, 0.95%)</title><rect x="252.1" y="149" width="11.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="255.10" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (20 samples, 1.05%)</title><rect x="1124.7" y="213" width="12.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1127.65" y="223.5" ></text>
</g>
<g >
<title>is_close_int   (75 samples, 3.96%)</title><rect x="189.9" y="277" width="46.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="192.86" y="287.5" >is_c..</text>
</g>
<g >
<title>operator   (20 samples, 1.05%)</title><rect x="1124.7" y="165" width="12.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1127.65" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="1170.7" y="309" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1173.71" y="319.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1171.3" y="197" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1174.33" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (9 samples, 0.47%)</title><rect x="1044.4" y="277" width="5.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1047.37" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (3 samples, 0.16%)</title><rect x="1171.3" y="277" width="1.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1174.33" y="287.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="110.8" y="213" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="113.82" y="223.5" ></text>
</g>
<g >
<title>free   (2 samples, 0.11%)</title><rect x="1171.3" y="165" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1174.33" y="175.5" ></text>
</g>
<g >
<title>operator   (187 samples, 9.86%)</title><rect x="669.7" y="149" width="116.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="672.70" y="159.5" >operator  </text>
</g>
<g >
<title>choose_next_point   (1,895 samples, 99.95%)</title><rect x="10.0" y="357" width="1179.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >choose_next_point  </text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (30 samples, 1.58%)</title><rect x="1025.7" y="245" width="18.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1028.70" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="53.6" y="261" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="56.57" y="271.5" ></text>
</g>
<g >
<title>??   (84 samples, 4.43%)</title><rect x="840.2" y="117" width="52.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="843.23" y="127.5" >??  </text>
</g>
<g >
<title>operator   (1 samples, 0.05%)</title><rect x="1119.7" y="117" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1122.67" y="127.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (15 samples, 0.79%)</title><rect x="1157.0" y="245" width="9.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1160.01" y="255.5" ></text>
</g>
<g >
<title>gen_all_points   (96 samples, 5.06%)</title><rect x="54.2" y="293" width="59.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="57.19" y="303.5" >gen_al..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1 samples, 0.05%)</title><rect x="1188.8" y="261" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.76" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_header::_M_reset   (1 samples, 0.05%)</title><rect x="1150.8" y="245" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1153.79" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (98 samples, 5.17%)</title><rect x="1089.8" y="245" width="61.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1092.80" y="255.5" >std::_..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (68 samples, 3.59%)</title><rect x="624.9" y="181" width="42.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="627.89" y="191.5" >std..</text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1180.7" y="149" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1183.66" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (11 samples, 0.58%)</title><rect x="1178.8" y="245" width="6.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1181.80" y="255.5" ></text>
</g>
<g >
<title>operator   (5 samples, 0.26%)</title><rect x="1182.5" y="181" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1185.53" y="191.5" ></text>
</g>
<g >
<title>free   (3 samples, 0.16%)</title><rect x="1183.8" y="149" width="1.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1186.78" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_maximum   (1 samples, 0.05%)</title><rect x="1137.1" y="229" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1140.10" y="239.5" ></text>
</g>
<g >
<title>malloc   (57 samples, 3.01%)</title><rect x="674.1" y="133" width="35.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="677.06" y="143.5" >mal..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="1045.0" y="229" width="5.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1047.99" y="239.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (21 samples, 1.11%)</title><rect x="1175.7" y="325" width="13.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1178.69" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (141 samples, 7.44%)</title><rect x="919.3" y="245" width="87.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="922.27" y="255.5" >std::less&lt;..</text>
</g>
<g >
<title>round@plt   (1 samples, 0.05%)</title><rect x="1175.1" y="309" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1178.06" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base::_S_minimum   (2 samples, 0.11%)</title><rect x="1137.7" y="229" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1140.72" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (155 samples, 8.18%)</title><rect x="796.0" y="197" width="96.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="799.04" y="207.5" >std::alloca..</text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1180.7" y="133" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1183.66" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1185.6" y="245" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1188.64" y="255.5" ></text>
</g>
<g >
<title>operator   (66 samples, 3.48%)</title><rect x="69.7" y="165" width="41.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="72.75" y="175.5" >ope..</text>
</g>
<g >
<title>std::_Rb_tree_header::_Rb_tree_header   (1 samples, 0.05%)</title><rect x="1150.8" y="261" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1153.79" y="271.5" ></text>
</g>
<g >
<title>choose_next_point   (1,894 samples, 99.89%)</title><rect x="10.0" y="341" width="1178.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >choose_next_point  </text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;int   (8 samples, 0.42%)</title><rect x="241.5" y="229" width="5.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="244.52" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (9 samples, 0.47%)</title><rect x="1044.4" y="293" width="5.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1047.37" y="303.5" ></text>
</g>
<g >
<title>malloc   (39 samples, 2.06%)</title><rect x="440.7" y="53" width="24.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="443.68" y="63.5" >m..</text>
</g>
<g >
<title>malloc   (1 samples, 0.05%)</title><rect x="438.8" y="37" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="441.81" y="47.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (155 samples, 8.18%)</title><rect x="796.0" y="213" width="96.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="799.04" y="223.5" >std::alloca..</text>
</g>
<g >
<title>??   (20 samples, 1.05%)</title><rect x="537.1" y="53" width="12.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="540.14" y="63.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;int   (141 samples, 7.44%)</title><rect x="919.3" y="229" width="87.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="922.27" y="239.5" >std::opera..</text>
</g>
<g >
<title>??   (1 samples, 0.05%)</title><rect x="1172.0" y="149" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1174.95" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (1 samples, 0.05%)</title><rect x="1166.4" y="245" width="0.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1169.35" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (108 samples, 5.70%)</title><rect x="1083.6" y="261" width="67.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1086.58" y="271.5" >std::_R..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;int   (22 samples, 1.16%)</title><rect x="250.2" y="213" width="13.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="253.23" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (33 samples, 1.74%)</title><rect x="1099.1" y="181" width="20.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1102.14" y="191.5" ></text>
</g>
<g >
<title>std::local_Rb_tree_rotate_left   (1 samples, 0.05%)</title><rect x="911.8" y="229" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="914.80" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (26 samples, 1.37%)</title><rect x="1007.0" y="229" width="16.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1010.03" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (384 samples, 20.25%)</title><rect x="428.2" y="197" width="239.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="431.23" y="207.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1064.9" y="261" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1067.91" y="271.5" ></text>
</g>
<g >
<title>operator   (2 samples, 0.11%)</title><rect x="1185.6" y="181" width="1.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1188.64" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="1171.3" y="213" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1174.33" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator()&lt;int   (141 samples, 7.44%)</title><rect x="919.3" y="213" width="87.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="922.27" y="223.5" >std::__det..</text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (113 samples, 5.96%)</title><rect x="549.6" y="133" width="70.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="552.59" y="143.5" >std::al..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (6 samples, 0.32%)</title><rect x="1064.9" y="293" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1067.91" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (4 samples, 0.21%)</title><rect x="111.4" y="229" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="114.45" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (12 samples, 0.63%)</title><rect x="1102.9" y="133" width="7.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1105.87" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (2 samples, 0.11%)</title><rect x="263.9" y="229" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="266.92" y="239.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (19 samples, 1.00%)</title><rect x="1139.0" y="197" width="11.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1141.97" y="207.5" ></text>
</g>
<g >
<title>??   (3 samples, 0.16%)</title><rect x="1168.8" y="165" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1171.84" y="175.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (20 samples, 1.05%)</title><rect x="1124.7" y="181" width="12.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1127.65" y="191.5" ></text>
</g>
<g >
<title>free   (3 samples, 0.16%)</title><rect x="1048.1" y="149" width="1.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1051.10" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (82 samples, 4.32%)</title><rect x="62.9" y="245" width="51.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="65.90" y="255.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;int   (34 samples, 1.79%)</title><rect x="1023.2" y="293" width="21.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1026.21" y="303.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (158 samples, 8.33%)</title><rect x="1068.6" y="309" width="98.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1071.64" y="319.5" >std::set&lt;st..</text>
</g>
<g >
<title>free   (23 samples, 1.21%)</title><rect x="96.5" y="133" width="14.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="99.51" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (22 samples, 1.16%)</title><rect x="250.2" y="181" width="13.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="253.23" y="191.5" ></text>
</g>
<g >
<title>operator   (3 samples, 0.16%)</title><rect x="437.6" y="53" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="440.56" y="63.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int   (26 samples, 1.37%)</title><rect x="1007.0" y="261" width="16.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1010.03" y="271.5" ></text>
</g>
<g >
<title>malloc   (126 samples, 6.65%)</title><rect x="471.2" y="69" width="78.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="474.17" y="79.5" >malloc  </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int   (1,169 samples, 61.66%)</title><rect x="279.5" y="261" width="727.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="282.48" y="271.5" >std::_Rb_tree&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::__new_allocator&lt;std::pair&lt;int   (30 samples, 1.58%)</title><rect x="1025.7" y="213" width="18.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1028.70" y="223.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;int   (1,218 samples, 64.24%)</title><rect x="265.2" y="293" width="758.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="268.17" y="303.5" >std::set&lt;std::pair&lt;int  </text>
</g>
<g >
<title>std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (68 samples, 3.59%)</title><rect x="624.9" y="165" width="42.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="627.89" y="175.5" >std..</text>
</g>
<g >
<title>operator   (18 samples, 0.95%)</title><rect x="1139.6" y="181" width="11.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1142.59" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (15 samples, 0.79%)</title><rect x="1110.3" y="133" width="9.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1113.34" y="143.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;int   (191 samples, 10.07%)</title><rect x="667.2" y="165" width="118.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="670.22" y="175.5" >std::__new_all..</text>
</g>
</g>
</svg>
